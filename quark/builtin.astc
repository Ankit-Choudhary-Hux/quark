File(
 Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('Object')),
    NativeCase(py, Fixed('object')), NativeCase(js, Fixed('Object')))),
  Name(Object),

  MethodMacro(Type(Name(bool)), Name(__eq__),
   Param(Type(Name(Object)), Name(other), $type=0.Object),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.Object), Fixed(')==('),
     Var(Name(other), $type=0.Object), Fixed(') || (('), Var(Name(self),
     $type=0.Object), Fixed(') != null && ('), Var(Name(self), $type=0.Object),
     Fixed(').equals('), Var(Name(other), $type=0.Object), Fixed('))')),
    NativeCase(py, Fixed('('), Var(Name(self), $type=0.Object),
     Fixed(') == ('), Var(Name(other), $type=0.Object), Fixed(')')),
    NativeCase(js, Fixed('('), Var(Name(self), $type=0.Object),
     Fixed(') === ('), Var(Name(other), $type=0.Object), Fixed(')')))),

  MethodMacro(Type(Name(bool)), Name(__ne__),
   Param(Type(Name(Object)), Name(other), $type=0.Object),
   Native(NativeCase(java,
     Fixed('!(('), Var(Name(self), $type=0.Object), Fixed(')==('),
     Var(Name(other), $type=0.Object), Fixed(') || (('), Var(Name(self),
     $type=0.Object), Fixed(') != null && ('), Var(Name(self), $type=0.Object),
     Fixed(').equals('), Var(Name(other), $type=0.Object), Fixed(')))')),
    NativeCase(py, Fixed('('), Var(Name(self), $type=0.Object),
     Fixed(') != ('), Var(Name(other), $type=0.Object), Fixed(')')),
    NativeCase(js, Fixed('('), Var(Name(self), $type=0.Object),
     Fixed(') !== ('), Var(Name(other), $type=0.Object), Fixed(')'))))),

 Primitive(Name(void)),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('Boolean')),
    NativeCase(py, Fixed('bool')), NativeCase(js, Fixed('Boolean')))),
  Name(bool),

  MethodMacro(Type(Name(bool)), Name(__not__), Native(NativeCase(java,
     Fixed('!('), Var(Name(self), $type=0.bool), Fixed(')')), NativeCase(py,
     Fixed('not ('), Var(Name(self), $type=0.bool), Fixed(')')), NativeCase(js,
     Fixed('!('), Var(Name(self), $type=0.bool), Fixed(')')))),

  MethodMacro(Type(Name(bool)), Name(__and__),
   Param(Type(Name(bool)), Name(other), $type=0.bool),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.bool), Fixed(') && ('),
     Var(Name(other), $type=0.bool), Fixed(')')), NativeCase(py, Fixed('('),
     Var(Name(self), $type=0.bool), Fixed(') and ('), Var(Name(other),
     $type=0.bool), Fixed(')')), NativeCase(js, Fixed('('), Var(Name(self),
     $type=0.bool), Fixed(') && ('), Var(Name(other), $type=0.bool),
     Fixed(')')))),

  MethodMacro(Type(Name(bool)), Name(__or__),
   Param(Type(Name(bool)), Name(other), $type=0.bool),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.bool), Fixed(') || ('),
     Var(Name(other), $type=0.bool), Fixed(')')), NativeCase(py, Fixed('('),
     Var(Name(self), $type=0.bool), Fixed(') or ('), Var(Name(other),
     $type=0.bool), Fixed(')')), NativeCase(js, Fixed('('), Var(Name(self),
     $type=0.bool), Fixed(') || ('), Var(Name(other), $type=0.bool),
     Fixed(')')))),

  MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.bool), Fixed(').toString()')),
    NativeCase(py, Fixed('str('), Var(Name(self), $type=0.bool),
     Fixed(').lower()')), NativeCase(js, Fixed('('), Var(Name(self),
     $type=0.bool), Fixed(').toString()'))))),

 Primitive(Name(numeric), TypeParam(Name(T)),

  MethodMacro(Type(Name(T)), Name(__neg__), Native(NativeCase(Fixed('-('),
     Var(Name(self), $type=0.numeric<0.numeric.T>), Fixed(')')))),

  MethodMacro(Type(Name(T)), Name(__add__),
   Param(Type(Name(T)), Name(other), $type=0.numeric.T),
   Native(NativeCase(Fixed('('), Var(Name(self), $type=0.numeric<0.numeric.T>),
     Fixed(') + ('), Var(Name(other), $type=0.numeric.T), Fixed(')')))),

  MethodMacro(Type(Name(T)), Name(__sub__),
   Param(Type(Name(T)), Name(other), $type=0.numeric.T),
   Native(NativeCase(Fixed('('), Var(Name(self), $type=0.numeric<0.numeric.T>),
     Fixed(') - ('), Var(Name(other), $type=0.numeric.T), Fixed(')')))),

  MethodMacro(Type(Name(T)), Name(__mul__),
   Param(Type(Name(T)), Name(other), $type=0.numeric.T),
   Native(NativeCase(Fixed('('), Var(Name(self), $type=0.numeric<0.numeric.T>),
     Fixed(') * ('), Var(Name(other), $type=0.numeric.T), Fixed(')')))),

  MethodMacro(Type(Name(T)), Name(__div__),
   Param(Type(Name(T)), Name(other), $type=0.numeric.T),
   Native(NativeCase(Fixed('('), Var(Name(self), $type=0.numeric<0.numeric.T>),
     Fixed(') / ('), Var(Name(other), $type=0.numeric.T), Fixed(')')))),

  MethodMacro(Type(Name(bool)), Name(__lt__),
   Param(Type(Name(T)), Name(other), $type=0.numeric.T),
   Native(NativeCase(Fixed('('), Var(Name(self), $type=0.numeric<0.numeric.T>),
     Fixed(') < ('), Var(Name(other), $type=0.numeric.T), Fixed(')')))),

  MethodMacro(Type(Name(bool)), Name(__gt__),
   Param(Type(Name(T)), Name(other), $type=0.numeric.T),
   Native(NativeCase(Fixed('('), Var(Name(self), $type=0.numeric<0.numeric.T>),
     Fixed(') > ('), Var(Name(other), $type=0.numeric.T), Fixed(')'))))),

 Primitive(Name(integral), TypeParam(Name(T)), Type(Name(numeric),
   Type(Name(T))),

  MethodMacro(Type(Name(T)), Name(__div__),
   Param(Type(Name(T)), Name(other), $type=0.integral.T),
   Native(NativeCase(java,
     Fixed('~((~('), Var(Name(self), $type=0.integral<0.integral.T>),
     Fixed(')) / ('), Var(Name(other), $type=0.integral.T), Fixed('))')),
    NativeCase(py, Fixed('('), Var(Name(self), $type=0.integral<0.integral.T>),
     Fixed(') / ('), Var(Name(other), $type=0.integral.T), Fixed(')')),
    NativeCase(js, Fixed('Math.floor(('), Var(Name(self),
     $type=0.integral<0.integral.T>), Fixed(') / ('), Var(Name(other),
     $type=0.integral.T), Fixed('))')))),

  MethodMacro(Type(Name(T)), Name(__mod__),
   Param(Type(Name(T)), Name(other), $type=0.integral.T),
   Native(NativeCase(java,
     Fixed('Math.floorMod(('), Var(Name(self), $type=0.integral<0.integral.T>),
     Fixed('), ('), Var(Name(other), $type=0.integral.T), Fixed('))')),
    NativeCase(py, Fixed('('), Var(Name(self), $type=0.integral<0.integral.T>),
     Fixed(') % ('), Var(Name(other), $type=0.integral.T), Fixed(')')),
    NativeCase(js, Fixed('_qrt.modulo(('), Var(Name(self),
     $type=0.integral<0.integral.T>), Fixed('), ('), Var(Name(other),
     $type=0.integral.T), Fixed('))')))),

  MethodMacro(Type(Name(float)), Name(toFloat), Native(NativeCase(java,
     Fixed('Double.valueOf('), Var(Name(self), $type=0.integral<0.integral.T>),
     Fixed(')')), NativeCase(py, Fixed('float('), Var(Name(self),
     $type=0.integral<0.integral.T>), Fixed(')')), NativeCase(js, Fixed('('),
     Var(Name(self), $type=0.integral<0.integral.T>), Fixed(')')))),

  MethodMacro(Type(Name(JSONObject)), Name(toJSON),
   Call(Attr(Call(Type(Name(JSONObject)), $type=0.JSONObject), Name(setNumber),
    $type=0.JSONObject.setNumber), Var(Name(self),
    $type=0.integral<0.integral.T>), $type=0.JSONObject)),

  MethodMacro(Type(Name(JSONObject)), Name(__to_JSONObject),
   Call(Attr(Var(Name(self), $type=0.integral<0.integral.T>), Name(toJSON),
    $type=0.integral.toJSON), $type=0.JSONObject))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('Byte')),
    NativeCase(py, Fixed('int')), NativeCase(js, Fixed('Number')))),
  Name(byte), Type(Name(integral), Type(Name(byte))),

  MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
     Fixed('Byte.toString('), Var(Name(self), $type=0.byte), Fixed(')')),
    NativeCase(py, Fixed('str('), Var(Name(self), $type=0.byte), Fixed(')')),
    NativeCase(js, Fixed('_qrt.toString('), Var(Name(self), $type=0.byte),
     Fixed(')'))))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('Short')),
    NativeCase(py, Fixed('int')), NativeCase(js, Fixed('Number')))),
  Name(short), Type(Name(integral), Type(Name(short))),

  MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
     Fixed('Short.toString('), Var(Name(self), $type=0.short), Fixed(')')),
    NativeCase(py, Fixed('str('), Var(Name(self), $type=0.short), Fixed(')')),
    NativeCase(js, Fixed('_qrt.toString('), Var(Name(self), $type=0.short),
     Fixed(')'))))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('Integer')),
    NativeCase(py, Fixed('int')), NativeCase(js, Fixed('Number')))), Name(int),
  Type(Name(integral), Type(Name(int))),

  MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
     Fixed('Integer.toString('), Var(Name(self), $type=0.int), Fixed(')')),
    NativeCase(py, Fixed('str('), Var(Name(self), $type=0.int), Fixed(')')),
    NativeCase(js, Fixed('_qrt.toString('), Var(Name(self), $type=0.int),
     Fixed(')')))),

  MethodMacro(Type(Name(byte)), Name(__to_byte), Var(Name(self), $type=0.int)),

  MethodMacro(Type(Name(short)), Name(__to_short), Var(Name(self),
   $type=0.int)),

  MethodMacro(Type(Name(long)), Name(__to_long), Var(Name(self),
   $type=0.int))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('Long')),
    NativeCase(py, Fixed('long')), NativeCase(js, Fixed('Number')))),
  Name(long), Type(Name(integral), Type(Name(long))),

  MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
     Fixed('Long.toString('), Var(Name(self), $type=0.long), Fixed(')')),
    NativeCase(py, Fixed('str('), Var(Name(self), $type=0.long), Fixed(')')),
    NativeCase(js, Fixed('_qrt.toString('), Var(Name(self), $type=0.long),
     Fixed(')'))))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('Double')),
    NativeCase(py, Fixed('float')), NativeCase(js, Fixed('Number')))),
  Name(float), Type(Name(numeric), Type(Name(float))),

  MethodMacro(Type(Name(float)), Name(__div__),
   Param(Type(Name(float)), Name(other), $type=0.float),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.float), Fixed(') / ('),
     Var(Name(other), $type=0.float), Fixed(')')), NativeCase(py,
     Fixed('float('), Var(Name(self), $type=0.float), Fixed(') / float('),
     Var(Name(other), $type=0.float), Fixed(')')), NativeCase(js, Fixed('('),
     Var(Name(self), $type=0.float), Fixed(') / ('), Var(Name(other),
     $type=0.float), Fixed(')')))),

  MethodMacro(Type(Name(long)), Name(round), Native(NativeCase(java,
     Fixed('Math.round('), Var(Name(self), $type=0.float), Fixed(')')),
    NativeCase(py, Fixed('long(round('), Var(Name(self), $type=0.float),
     Fixed('))')), NativeCase(javascript, Fixed('Math.round('), Var(Name(self),
     $type=0.float), Fixed(')')))),

  MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
     Fixed('Double.toString('), Var(Name(self), $type=0.float), Fixed(')')),
    NativeCase(py, Fixed('repr('), Var(Name(self), $type=0.float), Fixed(')')),
    NativeCase(js, Fixed('_qrt.toString('), Var(Name(self), $type=0.float),
     Fixed(')')))),

  MethodMacro(Type(Name(JSONObject)), Name(toJSON),
   Call(Attr(Call(Type(Name(JSONObject)), $type=0.JSONObject), Name(setNumber),
    $type=0.JSONObject.setNumber), Var(Name(self), $type=0.float),
   $type=0.JSONObject)),

  MethodMacro(Type(Name(JSONObject)), Name(__to_JSONObject),
   Call(Attr(Var(Name(self), $type=0.float), Name(toJSON),
    $type=0.float.toJSON), $type=0.JSONObject))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('String')),
    NativeCase(py, Fixed('str')), NativeCase(js, Fixed('String')))),
  Name(String),

  MethodMacro(Type(Name(String)), Name(__add__),
   Param(Type(Name(String)), Name(other), $type=0.String),
   Native(NativeCase(Fixed('('), Var(Name(self), $type=0.String),
     Fixed(') + ('), Var(Name(other), $type=0.String), Fixed(')')))),

  MethodMacro(Type(Name(int)), Name(size), Native(NativeCase(java, Fixed('('),
     Var(Name(self), $type=0.String), Fixed(').length()')), NativeCase(py,
     Fixed('len('), Var(Name(self), $type=0.String), Fixed(')')),
    NativeCase(js, Fixed('('), Var(Name(self), $type=0.String),
     Fixed(').length')))),

  MethodMacro(Type(Name(bool)), Name(startsWith),
   Param(Type(Name(String)), Name(other), $type=0.String),
   Native(NativeCase(java,
     Fixed('Boolean.valueOf(('), Var(Name(self), $type=0.String),
     Fixed(').startsWith('), Var(Name(other), $type=0.String), Fixed('))')),
    NativeCase(py, Fixed('('), Var(Name(self), $type=0.String),
     Fixed(').startswith('), Var(Name(other), $type=0.String), Fixed(')')),
    NativeCase(js, Fixed('(('), Var(Name(self), $type=0.String),
     Fixed(').indexOf('), Var(Name(other), $type=0.String), Fixed(')===0)')))),

  MethodMacro(Type(Name(bool)), Name(endsWith),
   Param(Type(Name(String)), Name(other), $type=0.String),
   Native(NativeCase(java,
     Fixed('Boolean.valueOf(('), Var(Name(self), $type=0.String),
     Fixed(').endsWith('), Var(Name(other), $type=0.String), Fixed('))')),
    NativeCase(py, Fixed('('), Var(Name(self), $type=0.String),
     Fixed(').endswith('), Var(Name(other), $type=0.String), Fixed(')')),
    NativeCase(js, Fixed('(('), Var(Name(self), $type=0.String),
     Fixed(').indexOf(('), Var(Name(other), $type=0.String), Fixed('), ('),
     Var(Name(self), $type=0.String), Fixed(').length - ('), Var(Name(other),
     $type=0.String), Fixed(').length) !== -1)')))),

  MethodMacro(Type(Name(int)), Name(find),
   Param(Type(Name(String)), Name(other), $type=0.String),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.String), Fixed(').indexOf('),
     Var(Name(other), $type=0.String), Fixed(')')), NativeCase(py, Fixed('('),
     Var(Name(self), $type=0.String), Fixed(').find('), Var(Name(other),
     $type=0.String), Fixed(')')), NativeCase(js, Fixed('('), Var(Name(self),
     $type=0.String), Fixed(').indexOf('), Var(Name(other), $type=0.String),
     Fixed(')')))),

  MethodMacro(Type(Name(String)), Name(substring),
   Param(Type(Name(int)), Name(start), $type=0.int),
   Param(Type(Name(int)), Name(end), $type=0.int),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.String), Fixed(').substring(('),
     Var(Name(start), $type=0.int), Fixed('), ('), Var(Name(end), $type=0.int),
     Fixed('))')), NativeCase(py, Fixed('('), Var(Name(self), $type=0.String),
     Fixed(')[('), Var(Name(start), $type=0.int), Fixed('):('), Var(Name(end),
     $type=0.int), Fixed(')]')), NativeCase(js, Fixed('('), Var(Name(self),
     $type=0.String), Fixed(').substring(('), Var(Name(start), $type=0.int),
     Fixed('), ('), Var(Name(end), $type=0.int), Fixed('))')))),

  MethodMacro(Type(Name(String)), Name(replace),
   Param(Type(Name(String)), Name(from), $type=0.String),
   Param(Type(Name(String)), Name(to), $type=0.String),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.String),
     Fixed(').replaceFirst(java.util.regex.Pattern.quote('), Var(Name(from),
     $type=0.String), Fixed('), ('), Var(Name(to), $type=0.String),
     Fixed('))')), NativeCase(py, Fixed('('), Var(Name(self), $type=0.String),
     Fixed(').replace(('), Var(Name(from), $type=0.String), Fixed('), ('),
     Var(Name(to), $type=0.String), Fixed('), 1)')), NativeCase(js, Fixed('('),
     Var(Name(self), $type=0.String), Fixed(').replace(('), Var(Name(from),
     $type=0.String), Fixed('), ('), Var(Name(to), $type=0.String),
     Fixed('))')))),

  MethodMacro(Type(Name(String)), Name(join),
   Param(Type(Name(List), Type(Name(String))), Name(parts),
   $type=0.List<0.String>),
   Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.Builtins.join(('), Var(Name(self),
     $type=0.String), Fixed('), ('), Var(Name(parts), $type=0.List<0.String>),
     Fixed('))')), NativeCase(py, Fixed('('), Var(Name(self), $type=0.String),
     Fixed(').join('), Var(Name(parts), $type=0.List<0.String>), Fixed(')')),
    NativeCase(js, Fixed('('), Var(Name(parts), $type=0.List<0.String>),
     Fixed(').join('), Var(Name(self), $type=0.String), Fixed(')')))),

  MethodMacro(Type(Name(JSONObject)), Name(toJSON),
   Call(Attr(Call(Type(Name(JSONObject)), $type=0.JSONObject), Name(setString),
    $type=0.JSONObject.setString), Var(Name(self), $type=0.String),
   $type=0.JSONObject)),

  MethodMacro(Type(Name(JSONObject)), Name(__to_JSONObject),
   Call(Attr(Var(Name(self), $type=0.String), Name(toJSON),
    $type=0.String.toJSON), $type=0.JSONObject)),

  MethodMacro(Type(Name(JSONObject)), Name(parseJSON), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.JSONObject.parse('), Var(Name(self),
     $type=0.String), Fixed(')')), NativeCase(py, Fixed('_JSONObject.parse('),
     Var(Name(self), $type=0.String), Fixed(')')), NativeCase(js,
     Fixed('_qrt.json_from_string('), Var(Name(self), $type=0.String),
     Fixed(')'))))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java,
     Fixed('java.util.ArrayList')), NativeCase(py, Fixed('_List')),
    NativeCase(js, Fixed('Array')))), Name(List), TypeParam(Name(T)),

  MethodMacro(Type(Name(void)), Name(add),
   Param(Type(Name(T)), Name(element), $type=0.List.T),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.List<0.List.T>), Fixed(').add('),
     Var(Name(element), $type=0.List.T), Fixed(')')), NativeCase(py,
     Fixed('('), Var(Name(self), $type=0.List<0.List.T>), Fixed(').append('),
     Var(Name(element), $type=0.List.T), Fixed(')')), NativeCase(js,
     Fixed('('), Var(Name(self), $type=0.List<0.List.T>), Fixed(').push('),
     Var(Name(element), $type=0.List.T), Fixed(')')))),

  MethodMacro(Type(Name(T)), Name(__get__),
   Param(Type(Name(int)), Name(index), $type=0.int),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.List<0.List.T>), Fixed(').get('),
     Var(Name(index), $type=0.int), Fixed(')')), NativeCase(py, Fixed('('),
     Var(Name(self), $type=0.List<0.List.T>), Fixed(')['), Var(Name(index),
     $type=0.int), Fixed(']')), NativeCase(js, Fixed('('), Var(Name(self),
     $type=0.List<0.List.T>), Fixed(')['), Var(Name(index), $type=0.int),
     Fixed(']')))),

  MethodMacro(Type(Name(void)), Name(__set__),
   Param(Type(Name(int)), Name(index), $type=0.int),
   Param(Type(Name(T)), Name(value), $type=0.List.T),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.List<0.List.T>), Fixed(').set(('),
     Var(Name(index), $type=0.int), Fixed('), ('), Var(Name(value),
     $type=0.List.T), Fixed('))')), NativeCase(py, Fixed('('), Var(Name(self),
     $type=0.List<0.List.T>), Fixed(')['), Var(Name(index), $type=0.int),
     Fixed('] = ('), Var(Name(value), $type=0.List.T), Fixed(')')),
    NativeCase(js, Fixed('('), Var(Name(self), $type=0.List<0.List.T>),
     Fixed(')['), Var(Name(index), $type=0.int), Fixed('] = ('),
     Var(Name(value), $type=0.List.T), Fixed(')')))),

  MethodMacro(Type(Name(int)), Name(size), Native(NativeCase(java, Fixed('('),
     Var(Name(self), $type=0.List<0.List.T>), Fixed(').size()')),
    NativeCase(py, Fixed('len('), Var(Name(self), $type=0.List<0.List.T>),
     Fixed(')')), NativeCase(js, Fixed('('), Var(Name(self),
     $type=0.List<0.List.T>), Fixed(').length'))))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java,
     Fixed('java.util.HashMap')), NativeCase(py, Fixed('_Map')), NativeCase(js,
     Fixed('Map')))), Name(Map), TypeParam(Name(K)), TypeParam(Name(V)),

  MethodMacro(Type(Name(void)), Name(__set__),
   Param(Type(Name(K)), Name(key), $type=0.Map.K),
   Param(Type(Name(V)), Name(value), $type=0.Map.V),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.Map<0.Map.K,0.Map.V>),
     Fixed(').put(('), Var(Name(key), $type=0.Map.K), Fixed('), ('),
     Var(Name(value), $type=0.Map.V), Fixed('))')), NativeCase(py, Fixed('('),
     Var(Name(self), $type=0.Map<0.Map.K,0.Map.V>), Fixed(')['), Var(Name(key),
     $type=0.Map.K), Fixed('] = ('), Var(Name(value), $type=0.Map.V),
     Fixed(')')), NativeCase(js, Fixed('('), Var(Name(self),
     $type=0.Map<0.Map.K,0.Map.V>), Fixed(').set(('), Var(Name(key),
     $type=0.Map.K), Fixed('), ('), Var(Name(value), $type=0.Map.V),
     Fixed('))')))),

  MethodMacro(Type(Name(V)), Name(__get__),
   Param(Type(Name(K)), Name(key), $type=0.Map.K),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.Map<0.Map.K,0.Map.V>),
     Fixed(').get('), Var(Name(key), $type=0.Map.K), Fixed(')')),
    NativeCase(py, Fixed('('), Var(Name(self), $type=0.Map<0.Map.K,0.Map.V>),
     Fixed(').get('), Var(Name(key), $type=0.Map.K), Fixed(')')),
    NativeCase(js, Fixed('_qrt.map_get(('), Var(Name(self),
     $type=0.Map<0.Map.K,0.Map.V>), Fixed('), ('), Var(Name(key),
     $type=0.Map.K), Fixed('))')))),

  MethodMacro(Type(Name(int)), Name(contains),
   Param(Type(Name(K)), Name(key), $type=0.Map.K),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.Map<0.Map.K,0.Map.V>),
     Fixed(').containsKey('), Var(Name(key), $type=0.Map.K), Fixed(')')),
    NativeCase(py, Fixed('('), Var(Name(key), $type=0.Map.K), Fixed(') in ('),
     Var(Name(self), $type=0.Map<0.Map.K,0.Map.V>), Fixed(')')), NativeCase(js,
     Fixed('('), Var(Name(self), $type=0.Map<0.Map.K,0.Map.V>),
     Fixed(').has('), Var(Name(key), $type=0.Map.K), Fixed(')')))),

  MethodMacro(Type(Name(void)), Name(update),
   Param(Type(Name(Map), Type(Name(K)), Type(Name(V))), Name(other),
   $type=0.Map<0.Map.K,0.Map.V>),
   Native(NativeCase(java,
     Fixed('('), Var(Name(self), $type=0.Map<0.Map.K,0.Map.V>),
     Fixed(').putAll('), Var(Name(other), $type=0.Map<0.Map.K,0.Map.V>),
     Fixed(')')), NativeCase(py, Fixed('('), Var(Name(self),
     $type=0.Map<0.Map.K,0.Map.V>), Fixed(').update('), Var(Name(other),
     $type=0.Map<0.Map.K,0.Map.V>), Fixed(')')), NativeCase(js, Fixed('('),
     Var(Name(other), $type=0.Map<0.Map.K,0.Map.V>),
     Fixed(').forEach(function (v, k) '), Fixed('{'), Fixed(' ('),
     Var(Name(self), $type=0.Map<0.Map.K,0.Map.V>), Fixed(').set(k, v); '),
     Fixed('}'), Fixed(')')))),

  MethodMacro(Type(Name(String)), Name(urlencode), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.Builtins.urlencode('), Var(Name(self),
     $type=0.Map<0.Map.K,0.Map.V>), Fixed(')')), NativeCase(py,
     Fixed('_urlencode('), Var(Name(self), $type=0.Map<0.Map.K,0.Map.V>),
     Fixed(')')), NativeCase(js, Fixed('_qrt.urlencode('), Var(Name(self),
     $type=0.Map<0.Map.K,0.Map.V>), Fixed(')'))))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.JSONObject')), NativeCase(py,
     Fixed('_JSONObject')), NativeCase(js, Fixed('_qrt.JSONObject')))),
  Name(JSONObject),

  ConstructorMacro(Name(JSONObject), Native(NativeCase(java,
     Fixed('new io.datawire.quark.runtime.JSONObject()')), NativeCase(py,
     Fixed('_JSONObject()')), NativeCase(js, Fixed('new _qrt.JSONObject()')))),

  MethodMacro(Type(Name(String)), Name(__to_String), Call(Attr(Var(Name(self),
     $type=0.JSONObject), Name(getString), $type=0.JSONObject.getString),
   $type=0.String)),

  MethodMacro(Type(Name(float)), Name(__to_float), Call(Attr(Var(Name(self),
     $type=0.JSONObject), Name(getNumber), $type=0.JSONObject.getNumber),
   $type=0.float)),

  MethodMacro(Type(Name(int)), Name(__to_int), Native(NativeCase(java,
     Fixed('((int) Math.round(('), Var(Name(self), $type=0.JSONObject),
     Fixed(').getNumber()))')), NativeCase(py, Fixed('int(round(('),
     Var(Name(self), $type=0.JSONObject), Fixed(').getNumber()))')),
    NativeCase(js, Fixed('Math.round(('), Var(Name(self), $type=0.JSONObject),
     Fixed(').getNumber())')))),

  MethodMacro(Type(Name(long)), Name(__to_long),
   Call(Attr(Call(Attr(Var(Name(self), $type=0.JSONObject), Name(getNumber),
      $type=0.JSONObject.getNumber), $type=0.float), Name(round),
    $type=0.float.round), $type=0.long)),

  MethodMacro(Type(Name(bool)), Name(__to_bool), Call(Attr(Var(Name(self),
     $type=0.JSONObject), Name(getBool), $type=0.JSONObject.getBool),
   $type=0.bool)),

  Method(Type(Name(String)), Name(getType)),

  Method(Type(Name(JSONObject)), Name(getObjectItem),
   Param(Type(Name(String)), Name(key), $type=0.String)),

  MethodMacro(Type(Name(JSONObject)), Name(__get__),
   Param(Type(Name(String)), Name(key), $type=0.String),
   Native(NativeCase(Fixed('('), Var(Name(self), $type=0.JSONObject),
     Fixed(').getObjectItem('), Var(Name(key), $type=0.String), Fixed(')')))),

  Method(Type(Name(JSONObject)), Name(getListItem),
   Param(Type(Name(int)), Name(index), $type=0.int)),

  Method(Type(Name(String)), Name(getString)),

  Method(Type(Name(float)), Name(getNumber)),

  Method(Type(Name(bool)), Name(getBool)),

  Method(Type(Name(bool)), Name(isNull)),

  Method(Type(Name(bool)), Name(isDefined)),

  Method(Type(Name(bool)), Name(isUndefined)),

  Method(Type(Name(JSONObject)), Name(undefined)),

  Method(Type(Name(String)), Name(toString)),

  Method(Type(Name(JSONObject)), Name(setString),
   Param(Type(Name(String)), Name(value), $type=0.String)),

  Method(Type(Name(JSONObject)), Name(setNumber),
   Param(Type(Name(Object)), Name(value), $type=0.Object)),

  Method(Type(Name(JSONObject)), Name(setBool),
   Param(Type(Name(bool)), Name(value), $type=0.bool)),

  Method(Type(Name(JSONObject)), Name(setNull)),

  Method(Type(Name(JSONObject)), Name(setObject)),

  Method(Type(Name(JSONObject)), Name(setList)),

  Method(Type(Name(JSONObject)), Name(setObjectItem),
   Param(Type(Name(String)), Name(key), $type=0.String),
   Param(Type(Name(JSONObject)), Name(value), $type=0.JSONObject)),

  Method(Type(Name(JSONObject)), Name(setListItem),
   Param(Type(Name(int)), Name(index), $type=0.int),
   Param(Type(Name(JSONObject)), Name(value), $type=0.JSONObject)),

  MethodMacro(Type(Name(void)), Name(__set__),
   Param(Type(Name(String)), Name(key), $type=0.String),
   Param(Type(Name(JSONObject)), Name(value), $type=0.JSONObject),
   Native(NativeCase(Fixed('('), Var(Name(self), $type=0.JSONObject),
     Fixed(').setObjectItem(('), Var(Name(key), $type=0.String), Fixed('), ('),
     Var(Name(value), $type=0.JSONObject), Fixed('))'))))),

 Macro(Type(Name(void)), Name(print),
  Param(Type(Name(Object)), Name(msg), $type=0.Object),
  Native(NativeCase(java,
    Fixed('System.out.println('), Var(Name(msg), $type=0.Object), Fixed(')')),
   NativeCase(py, Fixed('_println('), Var(Name(msg), $type=0.Object),
    Fixed(')')), NativeCase(js, Fixed('_qrt.print('), Var(Name(msg),
    $type=0.Object), Fixed(')')))),

 Macro(Type(Name(long)), Name(now), Native(NativeCase(java,
    Fixed('System.currentTimeMillis()')), NativeCase(py,
    Fixed('long(time.time()*1000)')), NativeCase(js, Fixed('Date.now()')))),

 Macro(Type(Name(void)), Name(sleep),
  Param(Type(Name(float)), Name(seconds), $type=0.float),
  Native(NativeCase(java,
    Fixed('io.datawire.quark.runtime.Builtins.sleep('), Var(Name(seconds),
    $type=0.float), Fixed(')')), NativeCase(py, Fixed('time.sleep('),
    Var(Name(seconds), $type=0.float), Fixed(')')), NativeCase(js,
    Fixed('_qrt.sleep('), Var(Name(seconds), $type=0.float), Fixed(')')))),

 Macro(Type(Name(String)), Name(url_get),
  Param(Type(Name(String)), Name(url), $type=0.String),
  Native(NativeCase(java,
    Fixed('io.datawire.quark.runtime.Builtins.url_get('), Var(Name(url),
    $type=0.String), Fixed(')')), NativeCase(py, Fixed('_url_get('),
    Var(Name(url), $type=0.String), Fixed(')')), NativeCase(js,
    Fixed('_qrt.url_get('), Var(Name(url), $type=0.String), Fixed(')')))),

 Macro(Type(Name(int)), Name(parseInt),
  Param(Type(Name(String)), Name(st), $type=0.String),
  Native(NativeCase(java,
    Fixed('Integer.parseInt('), Var(Name(st), $type=0.String), Fixed(')')),
   NativeCase(py, Fixed('int('), Var(Name(st), $type=0.String), Fixed(')')),
   NativeCase(js, Fixed('parseInt('), Var(Name(st), $type=0.String),
    Fixed(')')))),

 Macro(Type(Name(Codec)), Name(defaultCodec), Native(NativeCase(java,
    Fixed('io.datawire.quark.runtime.Builtins.defaultCodec()')), NativeCase(py,
    Fixed('_default_codec()')), NativeCase(js, Fixed('_qrt.defaultCodec()')))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.WSHandler')))), Name(WSHandler),

  Method(Type(Name(void)), Name(onWSInit),
   Param(Type(Name(WebSocket)), Name(socket), $type=0.WebSocket),
   Block()),

  Method(Type(Name(void)), Name(onWSConnected),
   Param(Type(Name(WebSocket)), Name(socket), $type=0.WebSocket),
   Block()),

  Method(Type(Name(void)), Name(onWSMessage),
   Param(Type(Name(WebSocket)), Name(socket), $type=0.WebSocket),
   Param(Type(Name(String)), Name(message), $type=0.String),
   Block()),

  Method(Type(Name(void)), Name(onWSBinary),
   Param(Type(Name(WebSocket)), Name(socket), $type=0.WebSocket),
   Param(Type(Name(Buffer)), Name(message), $type=0.Buffer),
   Block()),

  Method(Type(Name(void)), Name(onWSClosed),
   Param(Type(Name(WebSocket)), Name(socket), $type=0.WebSocket),
   Block()),

  Method(Type(Name(void)), Name(onWSError),
   Param(Type(Name(WebSocket)), Name(socket), $type=0.WebSocket),
   Block()),

  Method(Type(Name(void)), Name(onWSFinal),
   Param(Type(Name(WebSocket)), Name(socket), $type=0.WebSocket),
   Block())),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.WebSocket')))), Name(WebSocket),

  Method(Type(Name(void)), Name(send),
   Param(Type(Name(String)), Name(message), $type=0.String)),

  Method(Type(Name(void)), Name(sendBinary),
   Param(Type(Name(Buffer)), Name(bytes), $type=0.Buffer))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.HTTPHandler')))), Name(HTTPHandler),

  Method(Type(Name(void)), Name(onHTTPInit),
   Param(Type(Name(HTTPRequest)), Name(request), $type=0.HTTPRequest),
   Block()),

  Method(Type(Name(void)), Name(onHTTPResponse),
   Param(Type(Name(HTTPRequest)), Name(request), $type=0.HTTPRequest),
   Param(Type(Name(HTTPResponse)), Name(response), $type=0.HTTPResponse),
   Block()),

  Method(Type(Name(void)), Name(onHTTPError),
   Param(Type(Name(HTTPRequest)), Name(request), $type=0.HTTPRequest),
   Block()),

  Method(Type(Name(void)), Name(onHTTPFinal),
   Param(Type(Name(HTTPRequest)), Name(request), $type=0.HTTPRequest),
   Block())),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.HTTPRequest')))), Name(HTTPRequest),

  ConstructorMacro(Name(HTTPRequest),
   Param(Type(Name(String)), Name(url), $type=0.String),
   Native(NativeCase(java,
     Fixed('new io.datawire.quark.runtime.HTTPRequest('), Var(Name(url),
     $type=0.String), Fixed(')')), NativeCase(py, Fixed('_HTTPRequest('),
     Var(Name(url), $type=0.String), Fixed(')')), NativeCase(js,
     Fixed('new _qrt.HTTPRequest('), Var(Name(url), $type=0.String),
     Fixed(')')))),

  Method(Type(Name(void)), Name(setMethod),
   Param(Type(Name(String)), Name(method), $type=0.String)),

  Method(Type(Name(void)), Name(setBody),
   Param(Type(Name(String)), Name(data), $type=0.String)),

  Method(Type(Name(void)), Name(setHeader),
   Param(Type(Name(String)), Name(key), $type=0.String),
   Param(Type(Name(String)), Name(value), $type=0.String))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.HTTPResponse')))), Name(HTTPResponse),

  Method(Type(Name(int)), Name(getCode)),

  Method(Type(Name(String)), Name(getBody))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.Task')))), Name(Task),

  Method(Type(Name(void)), Name(onExecute),
   Param(Type(Name(Runtime)), Name(runtime), $type=0.Runtime))),

 Primitive(Annotation(Name(mapping), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.Runtime')))), Name(Runtime),

  Method(Type(Name(void)), Name(acquire)),

  Method(Type(Name(void)), Name(release)),

  Method(Type(Name(void)), Name(wait),
   Param(Type(Name(float)), Name(timeoutInSeconds), $type=0.float)),

  Method(Type(Name(void)), Name(open),
   Param(Type(Name(String)), Name(url), $type=0.String),
   Param(Type(Name(WSHandler)), Name(handler), $type=0.WSHandler)),

  Method(Type(Name(void)), Name(request),
   Param(Type(Name(HTTPRequest)), Name(request), $type=0.HTTPRequest),
   Param(Type(Name(HTTPHandler)), Name(handler), $type=0.HTTPHandler)),

  Method(Type(Name(void)), Name(schedule),
   Param(Type(Name(Task)), Name(handler), $type=0.Task),
   Param(Type(Name(float)), Name(delayInSeconds), $type=0.float)),

  Method(Type(Name(Codec)), Name(codec))),

 Primitive(Annotation(Name(doc),
   String("A stateless buffer of bytes. Default byte order is network byte order.",
   $type=0.String)), Annotation(Name(mapping), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.Buffer')))), Name(Buffer),

  Method(Annotation(Name(doc), String("capacity of the buffer",
    $type=0.String)), Type(Name(int)), Name(capacity)),

  Method(Annotation(Name(doc), String("read a byte at the specified index",
    $type=0.String)), Type(Name(byte)), Name(getByte),
   Param(Type(Name(int)), Name(index), $type=0.int)),

  Method(Annotation(Name(doc), String("write a byte at the specified index",
    $type=0.String)), Type(Name(void)), Name(putByte),
   Param(Type(Name(int)), Name(index), $type=0.int),
   Param(Type(Name(byte)), Name(value), $type=0.byte)),

  Method(Annotation(Name(doc), String("read a short at the specified index",
    $type=0.String)), Type(Name(short)), Name(getShort),
   Param(Type(Name(int)), Name(index), $type=0.int)),

  Method(Annotation(Name(doc), String("write a short at the specified index",
    $type=0.String)), Type(Name(void)), Name(putShort),
   Param(Type(Name(int)), Name(index), $type=0.int),
   Param(Type(Name(short)), Name(value), $type=0.short)),

  Method(Annotation(Name(doc), String("read an int at the specified index",
    $type=0.String)), Type(Name(int)), Name(getInt),
   Param(Type(Name(int)), Name(index), $type=0.int)),

  Method(Annotation(Name(doc), String("write an int at the specified index",
    $type=0.String)), Type(Name(void)), Name(putInt),
   Param(Type(Name(int)), Name(index), $type=0.int),
   Param(Type(Name(int)), Name(value), $type=0.int)),

  Method(Annotation(Name(doc), String("read a long at the specified index",
    $type=0.String)), Type(Name(long)), Name(getLong),
   Param(Type(Name(int)), Name(index), $type=0.int)),

  Method(Annotation(Name(doc), String("write a long at the specified index",
    $type=0.String)), Type(Name(void)), Name(putLong),
   Param(Type(Name(int)), Name(index), $type=0.int),
   Param(Type(Name(long)), Name(value), $type=0.long)),

  Method(Annotation(Name(doc), String("read a float at the specified index",
    $type=0.String)), Type(Name(float)), Name(getFloat),
   Param(Type(Name(int)), Name(index), $type=0.int)),

  Method(Annotation(Name(doc), String("write a float at the specified index",
    $type=0.String)), Type(Name(void)), Name(putFloat),
   Param(Type(Name(int)), Name(index), $type=0.int),
   Param(Type(Name(float)), Name(value), $type=0.float)),

  Method(Annotation(Name(doc),
    String("decode length bytes as a UTF8 string at the specified index",
    $type=0.String)), Type(Name(String)), Name(getStringUTF8),
   Param(Type(Name(int)), Name(index), $type=0.int),
   Param(Type(Name(int)), Name(length), $type=0.int)),

  Method(Annotation(Name(doc),
    String("write a string encoded in UTF8 at the specified index and return encoded length",
    $type=0.String)), Type(Name(int)), Name(putStringUTF8),
   Param(Type(Name(int)), Name(index), $type=0.int),
   Param(Type(Name(String)), Name(value), $type=0.String)),

  Method(Annotation(Name(doc), String("get a view of the range",
    $type=0.String)), Type(Name(Buffer)), Name(getSlice),
   Param(Type(Name(int)), Name(index), $type=0.int),
   Param(Type(Name(int)), Name(length), $type=0.int)),

  Method(Annotation(Name(doc),
    String("copy length bytes from the source buffer starting at offset to the specified index",
    $type=0.String)), Type(Name(void)), Name(putSlice),
   Param(Type(Name(int)), Name(index), $type=0.int),
   Param(Type(Name(Buffer)), Name(source), $type=0.Buffer),
   Param(Type(Name(int)), Name(offset), $type=0.int),
   Param(Type(Name(int)), Name(length), $type=0.int)),

  Method(Annotation(Name(doc),
    String("get a littleEndian view of the same buffer", $type=0.String)),
   Type(Name(Buffer)), Name(littleEndian)),

  Method(Annotation(Name(doc),
    String("true if the buffer decodes in network byte order",
    $type=0.String)), Type(Name(bool)), Name(isNetworkByteOrder))),

 Primitive(Annotation(Name(doc),
   String("Various String and Buffer conversion routines", $type=0.String)),
  Annotation(Name(mapping), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.Codec')))), Name(Codec),

  Method(Annotation(Name(doc),
    String("Create an empty buffer with the specified capacity",
    $type=0.String)), Type(Name(Buffer)), Name(buffer),
   Param(Type(Name(int)), Name(capacity), $type=0.int)),

  Method(Annotation(Name(doc),
    String("Encode the specified slice of the buffer and insert a space every 2^spaceScale bytes",
    $type=0.String)), Type(Name(String)), Name(toHexdump),
   Param(Type(Name(Buffer)), Name(buffer), $type=0.Buffer),
   Param(Type(Name(int)), Name(offeset), $type=0.int),
   Param(Type(Name(int)), Name(length), $type=0.int),
   Param(Type(Name(int)), Name(spaceScale), $type=0.int)),

  Method(Annotation(Name(doc),
    String("decode the hexdump ignoring leading 0x and any intervening spaces",
    $type=0.String)), Type(Name(Buffer)), Name(fromHexdump),
   Param(Type(Name(String)), Name(hex), $type=0.String)),

  Method(Annotation(Name(doc),
    String("Encode the specified slice of the buffer as Base64",
    $type=0.String)), Type(Name(String)), Name(toBase64),
   Param(Type(Name(Buffer)), Name(buffer), $type=0.Buffer),
   Param(Type(Name(int)), Name(offset), $type=0.int),
   Param(Type(Name(int)), Name(length), $type=0.int)),

  Method(Annotation(Name(doc), String("decode the Base64 enccoded string",
    $type=0.String)), Type(Name(Buffer)), Name(fromBase64),
   Param(Type(Name(String)), Name(base64), $type=0.String)))
)