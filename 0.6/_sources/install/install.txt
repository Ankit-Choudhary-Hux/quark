Installation
============

This document walks you through the system, application, and tooling requirements for using {{{product}}} as well as the actual installation process. 

Prerequisites
-------------

{{{product}}} has basic requirements that all users must meet as well as
requirements specific to particular output languages.

Basic Requirements
~~~~~~~~~~~~~~~~~~

{{{product}}} requires a modern Linux distribution or Mac OS X. It has been successfully tested on the following:

* Mac OS 10.10 (Yosemite)
* Mac OS 10.11 (El Capitan)
* Ubuntu 14.04 (Trusty)
* Fedora 22

{{{product}}} also requires the following:

* Python 2.7+
* pip
* tar


Java Requirements
~~~~~~~~~~~~~~~~~

You must have Java installed to use any Java code generated by {{{product}}}. {{{product}}} has been successfully tested with Java 7 and Java 8.

To compile and run the generated code directly from {{{product}}} you must also have Maven installed. {{{product}}} has been successfully tested with Maven 3.1 and Maven 3.3.x. Maven is not required if you wish to use the generated .java files manually either directly or within an IDE.

To use the documentation or package generation feature of {{{product}}} with Java, you must also have Maven installed. {{{product}}} has been successfully tested with Maven 3.1 and Maven 3.3.x.

Note: Javadoc comments will be generated in the source files as part of the code generation process. You may manually run Javadoc on those files to generate HTML documentation without Maven installed.

Python Requirements
~~~~~~~~~~~~~~~~~~~

There are no additional requirements to use Python code generated by {{{product}}}.

Javascript Requirements
~~~~~~~~~~~~~~~~~~~~~~~

You must have Node.js installed to use any Javascript code generated by {{{product}}}. {{{product}}} has been successfully tested with Node 4.2.1 and is expected to work with any 4.x version of Node.

Installation
------------

To install {{{product}}}, run the following command:

``curl -sL https://raw.githubusercontent.com/datawire/quark/master/install.sh | sh``
