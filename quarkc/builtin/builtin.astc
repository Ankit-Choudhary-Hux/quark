File(Import(Name(builtin)),
 Dependency(lang=jsgroup=Noneartifact=wsversion=1.0),
 Dependency(lang=jsgroup=Noneartifact=winstonversion=2.1.1),
 Include(url=quark_runtime.js), Include(url=quark_node_runtime.js),
 Dependency(lang=pygroup=Noneartifact=ws4pyversion=0.3.*),
 Include(url=quark_runtime.py), Include(url=quark_threaded_runtime.py),
 Include(url=quark_ws4py_fixup.py),
 Dependency(lang=rbgroup=Noneartifact=concurrent-rubyversion=1.0.1),
 Dependency(lang=rbgroup=Noneartifact=reelversion=0.6.1),
 Dependency(lang=rbgroup=Noneartifact=websocket-driverversion=0.6.3),
 Dependency(lang=rbgroup=Noneartifact=loggingversion=2.1.0),
 Dependency(lang=rbgroup=Noneartifact=event_emitterversion=0.2.5),
 Include(url=datawire-quark-core.rb),
 Dependency(lang=javagroup=com.fasterxml.jackson.jrartifact=jackson-jr-objectsversion=2.5.3),
 Dependency(lang=javagroup=io.nettyartifact=netty-allversion=4.0.32.Final),
 Dependency(lang=javagroup=junitartifact=junitversion=4.12),
 Include(url=io/datawire/quark/runtime/AbstractDatawireRuntime.java),
 Include(url=io/datawire/quark/runtime/AbstractHTTPHandler.java),
 Include(url=io/datawire/quark/runtime/AbstractWSHandler.java),
 Include(url=io/datawire/quark/runtime/Buffer.java),
 Include(url=io/datawire/quark/runtime/BufferImpl.java),
 Include(url=io/datawire/quark/runtime/Builtins.java),
 Include(url=io/datawire/quark/runtime/ClientHTTPRequest.java),
 Include(url=io/datawire/quark/runtime/Codec.java),
 Include(url=io/datawire/quark/runtime/Condition.java),
 Include(url=io/datawire/quark/runtime/HTTPHandler.java),
 Include(url=io/datawire/quark/runtime/HTTPRequest.java),
 Include(url=io/datawire/quark/runtime/HTTPResponse.java),
 Include(url=io/datawire/quark/runtime/HTTPServlet.java),
 Include(url=io/datawire/quark/runtime/JSONObject.java),
 Include(url=io/datawire/quark/runtime/Lock.java),
 Include(url=io/datawire/quark/runtime/Logger.java),
 Include(url=io/datawire/quark/runtime/Mutex.java),
 Include(url=io/datawire/quark/runtime/QObject.java),
 Include(url=io/datawire/quark/runtime/QuarkJavaLogger.java),
 Include(url=io/datawire/quark/runtime/Runtime.java),
 Include(url=io/datawire/quark/runtime/Servlet.java),
 Include(url=io/datawire/quark/runtime/Task.java),
 Include(url=io/datawire/quark/runtime/TLS.java),
 Include(url=io/datawire/quark/runtime/TLSInitializer.java),
 Include(url=io/datawire/quark/runtime/WebSocket.java),
 Include(url=io/datawire/quark/runtime/WSHandler.java),
 Include(url=io/datawire/quark/runtime/WSServlet.java),
 Include(url=io/datawire/quark/netty/DatawireNettyHttpContainer.java),
 Include(url=io/datawire/quark/netty/IncomingRequest.java),
 Include(url=io/datawire/quark/netty/QuarkNettyClientWebsocket.java),
 Include(url=io/datawire/quark/netty/QuarkNettyHttpHandler.java),
 Include(url=io/datawire/quark/netty/QuarkNettyRuntime.java),
 Include(url=io/datawire/quark/netty/QuarkNettyServerWebsocket.java),
 Include(url=io/datawire/quark/netty/QuarkWebSocket.java),
 Include(url=io/datawire/quark/netty/Response.java),

 Package(Name(builtin),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('Object')),
     NativeCase(py, Fixed('object')), NativeCase(js, Fixed('Object')),
     NativeCase(rb, Fixed('::DatawireQuarkCore::QuarkObject')))), Name(Object),

   MethodMacro(Type(Name(bool)), Name(__eq__),
    Param(Type(Name(Object)), Name(other), $type=0.builtin.Object),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self), $type=0.builtin.Object), Fixed(')==('),
      Var(Name(other), $type=0.builtin.Object), Fixed(') || (('),
      Var(Name(self), $type=0.builtin.Object), Fixed(') != null && ('),
      Var(Name(self), $type=0.builtin.Object), Fixed(').equals('),
      Var(Name(other), $type=0.builtin.Object), Fixed('))')), NativeCase(py,
      Fixed('('), Var(Name(self), $type=0.builtin.Object), Fixed(') == ('),
      Var(Name(other), $type=0.builtin.Object), Fixed(')')), NativeCase(rb,
      Fixed('('), Var(Name(self), $type=0.builtin.Object), Fixed(') == ('),
      Var(Name(other), $type=0.builtin.Object), Fixed(')')), NativeCase(js,
      Fixed('('), Var(Name(self), $type=0.builtin.Object), Fixed(') === ('),
      Var(Name(other), $type=0.builtin.Object), Fixed(')')))),

   MethodMacro(Type(Name(bool)), Name(__ne__),
    Param(Type(Name(Object)), Name(other), $type=0.builtin.Object),
    Native(NativeCase(java,
      Fixed('!(('), Var(Name(self), $type=0.builtin.Object), Fixed(')==('),
      Var(Name(other), $type=0.builtin.Object), Fixed(') || (('),
      Var(Name(self), $type=0.builtin.Object), Fixed(') != null && ('),
      Var(Name(self), $type=0.builtin.Object), Fixed(').equals('),
      Var(Name(other), $type=0.builtin.Object), Fixed(')))')), NativeCase(py,
      Fixed('('), Var(Name(self), $type=0.builtin.Object), Fixed(') != ('),
      Var(Name(other), $type=0.builtin.Object), Fixed(')')), NativeCase(rb,
      Fixed('('), Var(Name(self), $type=0.builtin.Object), Fixed(') != ('),
      Var(Name(other), $type=0.builtin.Object), Fixed(')')), NativeCase(js,
      Fixed('('), Var(Name(self), $type=0.builtin.Object), Fixed(') !== ('),
      Var(Name(other), $type=0.builtin.Object), Fixed(')')))),

   MethodMacro(Type(Name(reflect), Name(Class)), Name(getClass),
    Call(Attr(Attr(Var(Name(reflect), $type=0.builtin.reflect), Name(Class),
      $type=0.builtin.reflect.Class), Name(get),
     $type=0.builtin.reflect.Class.get), Native(NativeCase(java,
       Fixed('io.datawire.quark.runtime.Builtins._getClass('), Var(Name(self),
       $type=0.builtin.Object), Fixed(')')), NativeCase(py,
       Fixed('_getClass('), Var(Name(self), $type=0.builtin.Object),
       Fixed(')')), NativeCase(rb, Fixed('::DatawireQuarkCore._getClass('),
       Var(Name(self), $type=0.builtin.Object), Fixed(')')), NativeCase(js,
       Fixed('_qrt._getClass('), Var(Name(self), $type=0.builtin.Object),
       Fixed(')'))), $type=0.builtin.reflect.Class)),

   MethodMacro(Type(Name(Object)), Name(getField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Native(NativeCase(java,
      Fixed('((io.datawire.quark.runtime.QObject) ('), Var(Name(self),
      $type=0.builtin.Object), Fixed('))._getField('), Var(Name(name),
      $type=0.builtin.String), Fixed(')')), NativeCase(py, Fixed('('),
      Var(Name(self), $type=0.builtin.Object), Fixed(')._getField('),
      Var(Name(name), $type=0.builtin.String), Fixed(')')), NativeCase(rb,
      Fixed('('), Var(Name(self), $type=0.builtin.Object),
      Fixed(')._getField('), Var(Name(name), $type=0.builtin.String),
      Fixed(')')), NativeCase(js, Fixed('('), Var(Name(self),
      $type=0.builtin.Object), Fixed(')._getField('), Var(Name(name),
      $type=0.builtin.String), Fixed(')')))),

   MethodMacro(Type(Name(void)), Name(setField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
    Native(NativeCase(java,
      Fixed('((io.datawire.quark.runtime.QObject) ('), Var(Name(self),
      $type=0.builtin.Object), Fixed('))._setField('), Var(Name(name),
      $type=0.builtin.String), Fixed(', '), Var(Name(value),
      $type=0.builtin.Object), Fixed(')')), NativeCase(py, Fixed('('),
      Var(Name(self), $type=0.builtin.Object), Fixed(')._setField(('),
      Var(Name(name), $type=0.builtin.String), Fixed('), ('), Var(Name(value),
      $type=0.builtin.Object), Fixed('))')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.Object), Fixed(')._setField(('),
      Var(Name(name), $type=0.builtin.String), Fixed('), ('), Var(Name(value),
      $type=0.builtin.Object), Fixed('))')), NativeCase(js, Fixed('('),
      Var(Name(self), $type=0.builtin.Object), Fixed(')._setField(('),
      Var(Name(name), $type=0.builtin.String), Fixed('), ('), Var(Name(value),
      $type=0.builtin.Object), Fixed('))')))),

   MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
      Fixed('('), Var(Name(self), $type=0.builtin.Object),
      Fixed(').toString()')), NativeCase(py, Fixed('str('), Var(Name(self),
      $type=0.builtin.Object), Fixed(')')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.Object), Fixed(').to_s')), NativeCase(js,
      Fixed('('), Var(Name(self), $type=0.builtin.Object),
      Fixed(').toString()'))))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('void')))),
   Name(void)),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('Boolean')), NativeCase(py, Fixed('bool')), NativeCase(js,
      Fixed('Boolean')), NativeCase(rb, Fixed('Object')))), Name(bool),

   MethodMacro(Type(Name(bool)), Name(__not__), Native(NativeCase(java,
      Fixed('!('), Var(Name(self), $type=0.builtin.bool), Fixed(')')),
     NativeCase(py, Fixed('not ('), Var(Name(self), $type=0.builtin.bool),
      Fixed(')')), NativeCase(rb, Fixed('!('), Var(Name(self),
      $type=0.builtin.bool), Fixed(')')), NativeCase(js, Fixed('!('),
      Var(Name(self), $type=0.builtin.bool), Fixed(')')))),

   MethodMacro(Type(Name(bool)), Name(__and__),
    Param(Type(Name(bool)), Name(other), $type=0.builtin.bool),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self), $type=0.builtin.bool), Fixed(') && ('),
      Var(Name(other), $type=0.builtin.bool), Fixed(')')), NativeCase(py,
      Fixed('('), Var(Name(self), $type=0.builtin.bool), Fixed(') and ('),
      Var(Name(other), $type=0.builtin.bool), Fixed(')')), NativeCase(rb,
      Fixed('('), Var(Name(self), $type=0.builtin.bool), Fixed(') && ('),
      Var(Name(other), $type=0.builtin.bool), Fixed(')')), NativeCase(js,
      Fixed('('), Var(Name(self), $type=0.builtin.bool), Fixed(') && ('),
      Var(Name(other), $type=0.builtin.bool), Fixed(')')))),

   MethodMacro(Type(Name(bool)), Name(__or__),
    Param(Type(Name(bool)), Name(other), $type=0.builtin.bool),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self), $type=0.builtin.bool), Fixed(') || ('),
      Var(Name(other), $type=0.builtin.bool), Fixed(')')), NativeCase(py,
      Fixed('('), Var(Name(self), $type=0.builtin.bool), Fixed(') or ('),
      Var(Name(other), $type=0.builtin.bool), Fixed(')')), NativeCase(rb,
      Fixed('('), Var(Name(self), $type=0.builtin.bool), Fixed(') || ('),
      Var(Name(other), $type=0.builtin.bool), Fixed(')')), NativeCase(js,
      Fixed('('), Var(Name(self), $type=0.builtin.bool), Fixed(') || ('),
      Var(Name(other), $type=0.builtin.bool), Fixed(')')))),

   MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
      Fixed('('), Var(Name(self), $type=0.builtin.bool),
      Fixed(').toString()')), NativeCase(py, Fixed('str('), Var(Name(self),
      $type=0.builtin.bool), Fixed(').lower()')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.bool), Fixed(').to_s')), NativeCase(js,
      Fixed('('), Var(Name(self), $type=0.builtin.bool),
      Fixed(').toString()')))),

   MethodMacro(Type(Name(JSONObject)), Name(toJSON),
    Call(Attr(Call(Type(Name(JSONObject)), $type=0.builtin.JSONObject),
      Name(setBool), $type=0.builtin.JSONObject.setBool), Var(Name(self),
     $type=0.builtin.bool), $type=0.builtin.JSONObject)),

   MethodMacro(Type(Name(JSONObject)), Name(__to_JSONObject),
    Call(Attr(Var(Name(self), $type=0.builtin.bool), Name(toJSON),
     $type=0.builtin.bool.toJSON), $type=0.builtin.JSONObject))),

  Primitive(Name(numeric), TypeParam(Name(T)),

   MethodMacro(Type(Name(T)), Name(__neg__), Native(NativeCase(Fixed('-('),
      Var(Name(self), $type=0.builtin.numeric<0.builtin.numeric.T>),
      Fixed(')')))),

   MethodMacro(Type(Name(T)), Name(__add__),
    Param(Type(Name(T)), Name(other), $type=0.builtin.numeric.T),
    Native(NativeCase(Fixed('('), Var(Name(self),
      $type=0.builtin.numeric<0.builtin.numeric.T>), Fixed(') + ('),
      Var(Name(other), $type=0.builtin.numeric.T), Fixed(')')))),

   MethodMacro(Type(Name(T)), Name(__sub__),
    Param(Type(Name(T)), Name(other), $type=0.builtin.numeric.T),
    Native(NativeCase(Fixed('('), Var(Name(self),
      $type=0.builtin.numeric<0.builtin.numeric.T>), Fixed(') - ('),
      Var(Name(other), $type=0.builtin.numeric.T), Fixed(')')))),

   MethodMacro(Type(Name(T)), Name(__mul__),
    Param(Type(Name(T)), Name(other), $type=0.builtin.numeric.T),
    Native(NativeCase(Fixed('('), Var(Name(self),
      $type=0.builtin.numeric<0.builtin.numeric.T>), Fixed(') * ('),
      Var(Name(other), $type=0.builtin.numeric.T), Fixed(')')))),

   MethodMacro(Type(Name(T)), Name(__div__),
    Param(Type(Name(T)), Name(other), $type=0.builtin.numeric.T),
    Native(NativeCase(Fixed('('), Var(Name(self),
      $type=0.builtin.numeric<0.builtin.numeric.T>), Fixed(') / ('),
      Var(Name(other), $type=0.builtin.numeric.T), Fixed(')')))),

   MethodMacro(Type(Name(bool)), Name(__lt__),
    Param(Type(Name(T)), Name(other), $type=0.builtin.numeric.T),
    Native(NativeCase(Fixed('('), Var(Name(self),
      $type=0.builtin.numeric<0.builtin.numeric.T>), Fixed(') < ('),
      Var(Name(other), $type=0.builtin.numeric.T), Fixed(')')))),

   MethodMacro(Type(Name(bool)), Name(__le__),
    Param(Type(Name(T)), Name(other), $type=0.builtin.numeric.T),
    Native(NativeCase(Fixed('('), Var(Name(self),
      $type=0.builtin.numeric<0.builtin.numeric.T>), Fixed(') <= ('),
      Var(Name(other), $type=0.builtin.numeric.T), Fixed(')')))),

   MethodMacro(Type(Name(bool)), Name(__gt__),
    Param(Type(Name(T)), Name(other), $type=0.builtin.numeric.T),
    Native(NativeCase(Fixed('('), Var(Name(self),
      $type=0.builtin.numeric<0.builtin.numeric.T>), Fixed(') > ('),
      Var(Name(other), $type=0.builtin.numeric.T), Fixed(')')))),

   MethodMacro(Type(Name(bool)), Name(__ge__),
    Param(Type(Name(T)), Name(other), $type=0.builtin.numeric.T),
    Native(NativeCase(Fixed('('), Var(Name(self),
      $type=0.builtin.numeric<0.builtin.numeric.T>), Fixed(') >= ('),
      Var(Name(other), $type=0.builtin.numeric.T), Fixed(')'))))),

  Primitive(Name(integral), TypeParam(Name(T)), Type(Name(numeric),
    Type(Name(T))),

   MethodMacro(Type(Name(T)), Name(__div__),
    Param(Type(Name(T)), Name(other), $type=0.builtin.integral.T),
    Native(NativeCase(java,
      Fixed('~((~('), Var(Name(self),
      $type=0.builtin.integral<0.builtin.integral.T>), Fixed(')) / ('),
      Var(Name(other), $type=0.builtin.integral.T), Fixed('))')),
     NativeCase(py, Fixed('('), Var(Name(self),
      $type=0.builtin.integral<0.builtin.integral.T>), Fixed(') / ('),
      Var(Name(other), $type=0.builtin.integral.T), Fixed(')')), NativeCase(rb,
      Fixed('('), Var(Name(self),
      $type=0.builtin.integral<0.builtin.integral.T>), Fixed(') / ('),
      Var(Name(other), $type=0.builtin.integral.T), Fixed(')')), NativeCase(js,
      Fixed('Math.floor(('), Var(Name(self),
      $type=0.builtin.integral<0.builtin.integral.T>), Fixed(') / ('),
      Var(Name(other), $type=0.builtin.integral.T), Fixed('))')))),

   MethodMacro(Type(Name(T)), Name(__mod__),
    Param(Type(Name(T)), Name(other), $type=0.builtin.integral.T),
    Native(NativeCase(java,
      Fixed('Math.floorMod(('), Var(Name(self),
      $type=0.builtin.integral<0.builtin.integral.T>), Fixed('), ('),
      Var(Name(other), $type=0.builtin.integral.T), Fixed('))')),
     NativeCase(py, Fixed('('), Var(Name(self),
      $type=0.builtin.integral<0.builtin.integral.T>), Fixed(') % ('),
      Var(Name(other), $type=0.builtin.integral.T), Fixed(')')), NativeCase(rb,
      Fixed('('), Var(Name(self),
      $type=0.builtin.integral<0.builtin.integral.T>), Fixed(') % ('),
      Var(Name(other), $type=0.builtin.integral.T), Fixed(')')), NativeCase(js,
      Fixed('_qrt.modulo(('), Var(Name(self),
      $type=0.builtin.integral<0.builtin.integral.T>), Fixed('), ('),
      Var(Name(other), $type=0.builtin.integral.T), Fixed('))')))),

   MethodMacro(Type(Name(float)), Name(toFloat), Native(NativeCase(java,
      Fixed('Double.valueOf('), Var(Name(self),
      $type=0.builtin.integral<0.builtin.integral.T>), Fixed(')')),
     NativeCase(py, Fixed('float('), Var(Name(self),
      $type=0.builtin.integral<0.builtin.integral.T>), Fixed(')')),
     NativeCase(rb, Fixed('('), Var(Name(self),
      $type=0.builtin.integral<0.builtin.integral.T>), Fixed(').to_f')),
     NativeCase(js, Fixed('('), Var(Name(self),
      $type=0.builtin.integral<0.builtin.integral.T>), Fixed(')')))),

   MethodMacro(Type(Name(JSONObject)), Name(toJSON),
    Call(Attr(Call(Type(Name(JSONObject)), $type=0.builtin.JSONObject),
      Name(setNumber), $type=0.builtin.JSONObject.setNumber), Var(Name(self),
     $type=0.builtin.integral<0.builtin.integral.T>),
    $type=0.builtin.JSONObject)),

   MethodMacro(Type(Name(JSONObject)), Name(__to_JSONObject),
    Call(Attr(Var(Name(self), $type=0.builtin.integral<0.builtin.integral.T>),
      Name(toJSON), $type=0.builtin.integral.toJSON),
    $type=0.builtin.JSONObject))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('Byte')),
     NativeCase(py, Fixed('int')), NativeCase(js, Fixed('Number')),
     NativeCase(rb, Fixed('Integer')))), Name(byte), Type(Name(integral),
    Type(Name(byte))),

   ConstructorMacro(Name(byte), Native(NativeCase(java, Fixed('new Byte()')),
     NativeCase(py, Fixed('int()')), NativeCase(rb, Fixed('0')), NativeCase(js,
      Fixed('Number()')))),

   MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
      Fixed('Byte.toString('), Var(Name(self), $type=0.builtin.byte),
      Fixed(')')), NativeCase(py, Fixed('str('), Var(Name(self),
      $type=0.builtin.byte), Fixed(')')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.byte), Fixed(').to_s')), NativeCase(js,
      Fixed('_qrt.toString('), Var(Name(self), $type=0.builtin.byte),
      Fixed(')')))),

   MethodMacro(Type(Name(short)), Name(__to_short), Var(Name(self),
    $type=0.builtin.byte)),

   MethodMacro(Type(Name(int)), Name(__to_int), Var(Name(self),
    $type=0.builtin.byte))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('Short')),
     NativeCase(py, Fixed('int')), NativeCase(js, Fixed('Number')),
     NativeCase(rb, Fixed('Integer')))), Name(short), Type(Name(integral),
    Type(Name(short))),

   ConstructorMacro(Name(short), Native(NativeCase(java, Fixed('new Short()')),
     NativeCase(py, Fixed('int()')), NativeCase(rb, Fixed('0')), NativeCase(js,
      Fixed('Number()')))),

   MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
      Fixed('Short.toString('), Var(Name(self), $type=0.builtin.short),
      Fixed(')')), NativeCase(py, Fixed('str('), Var(Name(self),
      $type=0.builtin.short), Fixed(')')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.short), Fixed(').to_s')), NativeCase(js,
      Fixed('_qrt.toString('), Var(Name(self), $type=0.builtin.short),
      Fixed(')')))),

   MethodMacro(Type(Name(byte)), Name(__to_byte), Var(Name(self),
    $type=0.builtin.short)),

   MethodMacro(Type(Name(int)), Name(__to_int), Var(Name(self),
    $type=0.builtin.short))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('Integer')), NativeCase(py, Fixed('int')), NativeCase(js,
      Fixed('Number')), NativeCase(rb, Fixed('Integer')))), Name(int),
   Type(Name(integral), Type(Name(int))),

   ConstructorMacro(Name(int), Native(NativeCase(java, Fixed('new Integer()')),
     NativeCase(py, Fixed('int()')), NativeCase(rb, Fixed('0')), NativeCase(js,
      Fixed('Number()')))),

   MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
      Fixed('Integer.toString('), Var(Name(self), $type=0.builtin.int),
      Fixed(')')), NativeCase(py, Fixed('str('), Var(Name(self),
      $type=0.builtin.int), Fixed(')')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.int), Fixed(').to_s')), NativeCase(js,
      Fixed('_qrt.toString('), Var(Name(self), $type=0.builtin.int),
      Fixed(')')))),

   MethodMacro(Type(Name(byte)), Name(__to_byte), Native(NativeCase(java,
      Fixed('(byte)((Integer) ('), Var(Name(self), $type=0.builtin.int),
      Fixed(')).intValue()')), NativeCase(py, Fixed('('), Var(Name(self),
      $type=0.builtin.int), Fixed(')')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.int), Fixed(')')), NativeCase(js,
      Fixed('('), Var(Name(self), $type=0.builtin.int), Fixed(')')))),

   MethodMacro(Type(Name(short)), Name(__to_short), Native(NativeCase(java,
      Fixed('(short) ((Integer) ('), Var(Name(self), $type=0.builtin.int),
      Fixed(')).intValue()')), NativeCase(py, Fixed('('), Var(Name(self),
      $type=0.builtin.int), Fixed(')')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.int), Fixed(')')), NativeCase(js,
      Fixed('('), Var(Name(self), $type=0.builtin.int), Fixed(')')))),

   MethodMacro(Type(Name(long)), Name(__to_long), Native(NativeCase(java,
      Fixed('new Long('), Var(Name(self), $type=0.builtin.int), Fixed(')')),
     NativeCase(py, Fixed('('), Var(Name(self), $type=0.builtin.int),
      Fixed(')')), NativeCase(rb, Fixed('('), Var(Name(self),
      $type=0.builtin.int), Fixed(')')), NativeCase(js, Fixed('('),
      Var(Name(self), $type=0.builtin.int), Fixed(')'))))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('Long')),
     NativeCase(py, Fixed('long')), NativeCase(js, Fixed('Number')),
     NativeCase(rb, Fixed('Integer')))), Name(long), Type(Name(integral),
    Type(Name(long))),

   ConstructorMacro(Name(long), Native(NativeCase(java, Fixed('new Long()')),
     NativeCase(py, Fixed('int()')), NativeCase(rb, Fixed('0')), NativeCase(js,
      Fixed('Number()')))),

   MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
      Fixed('Long.toString('), Var(Name(self), $type=0.builtin.long),
      Fixed(')')), NativeCase(py, Fixed('str('), Var(Name(self),
      $type=0.builtin.long), Fixed(')')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.long), Fixed(').to_s')), NativeCase(js,
      Fixed('_qrt.toString('), Var(Name(self), $type=0.builtin.long),
      Fixed(')'))))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('Double')),
     NativeCase(py, Fixed('float')), NativeCase(js, Fixed('Number')),
     NativeCase(rb, Fixed('Float')))), Name(float), Type(Name(numeric),
    Type(Name(float))),

   MethodMacro(Type(Name(float)), Name(__div__),
    Param(Type(Name(float)), Name(other), $type=0.builtin.float),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self), $type=0.builtin.float), Fixed(') / ('),
      Var(Name(other), $type=0.builtin.float), Fixed(')')), NativeCase(py,
      Fixed('float('), Var(Name(self), $type=0.builtin.float),
      Fixed(') / float('), Var(Name(other), $type=0.builtin.float),
      Fixed(')')), NativeCase(rb, Fixed('('), Var(Name(self),
      $type=0.builtin.float), Fixed(') / ('), Var(Name(other),
      $type=0.builtin.float), Fixed(')')), NativeCase(js, Fixed('('),
      Var(Name(self), $type=0.builtin.float), Fixed(') / ('), Var(Name(other),
      $type=0.builtin.float), Fixed(')')))),

   MethodMacro(Type(Name(long)), Name(round), Native(NativeCase(java,
      Fixed('Math.round('), Var(Name(self), $type=0.builtin.float),
      Fixed(')')), NativeCase(py, Fixed('long(round('), Var(Name(self),
      $type=0.builtin.float), Fixed('))')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.float), Fixed(').round()')),
     NativeCase(js, Fixed('Math.round('), Var(Name(self),
      $type=0.builtin.float), Fixed(')')))),

   MethodMacro(Type(Name(String)), Name(toString), Native(NativeCase(java,
      Fixed('Double.toString('), Var(Name(self), $type=0.builtin.float),
      Fixed(')')), NativeCase(py, Fixed('repr('), Var(Name(self),
      $type=0.builtin.float), Fixed(')')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.float), Fixed(').to_s')), NativeCase(js,
      Fixed('_qrt.toString('), Var(Name(self), $type=0.builtin.float),
      Fixed(')')))),

   MethodMacro(Type(Name(JSONObject)), Name(toJSON),
    Call(Attr(Call(Type(Name(JSONObject)), $type=0.builtin.JSONObject),
      Name(setNumber), $type=0.builtin.JSONObject.setNumber), Var(Name(self),
     $type=0.builtin.float), $type=0.builtin.JSONObject)),

   MethodMacro(Type(Name(JSONObject)), Name(__to_JSONObject),
    Call(Attr(Var(Name(self), $type=0.builtin.float), Name(toJSON),
     $type=0.builtin.float.toJSON), $type=0.builtin.JSONObject))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java, Fixed('String')),
     NativeCase(py, Fixed('str')), NativeCase(js, Fixed('String')),
     NativeCase(rb, Fixed('String')))), Name(String),

   MethodMacro(Type(Name(String)), Name(__add__),
    Param(Type(Name(String)), Name(other), $type=0.builtin.String),
    Native(NativeCase(Fixed('('), Var(Name(self), $type=0.builtin.String),
      Fixed(') + ('), Var(Name(other), $type=0.builtin.String), Fixed(')')))),

   MethodMacro(Type(Name(int)), Name(size), Native(NativeCase(java, Fixed('('),
      Var(Name(self), $type=0.builtin.String), Fixed(').length()')),
     NativeCase(py, Fixed('len('), Var(Name(self), $type=0.builtin.String),
      Fixed(')')), NativeCase(rb, Fixed('('), Var(Name(self),
      $type=0.builtin.String), Fixed(').size')), NativeCase(js, Fixed('('),
      Var(Name(self), $type=0.builtin.String), Fixed(').length')))),

   MethodMacro(Type(Name(bool)), Name(startsWith),
    Param(Type(Name(String)), Name(other), $type=0.builtin.String),
    Native(NativeCase(java,
      Fixed('Boolean.valueOf(('), Var(Name(self), $type=0.builtin.String),
      Fixed(').startsWith('), Var(Name(other), $type=0.builtin.String),
      Fixed('))')), NativeCase(py, Fixed('('), Var(Name(self),
      $type=0.builtin.String), Fixed(').startswith('), Var(Name(other),
      $type=0.builtin.String), Fixed(')')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.String), Fixed(').start_with?('),
      Var(Name(other), $type=0.builtin.String), Fixed(')')), NativeCase(js,
      Fixed('(('), Var(Name(self), $type=0.builtin.String),
      Fixed(').indexOf('), Var(Name(other), $type=0.builtin.String),
      Fixed(')===0)')))),

   MethodMacro(Type(Name(bool)), Name(endsWith),
    Param(Type(Name(String)), Name(other), $type=0.builtin.String),
    Native(NativeCase(java,
      Fixed('Boolean.valueOf(('), Var(Name(self), $type=0.builtin.String),
      Fixed(').endsWith('), Var(Name(other), $type=0.builtin.String),
      Fixed('))')), NativeCase(py, Fixed('('), Var(Name(self),
      $type=0.builtin.String), Fixed(').endswith('), Var(Name(other),
      $type=0.builtin.String), Fixed(')')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.String), Fixed(').end_with?('),
      Var(Name(other), $type=0.builtin.String), Fixed(')')), NativeCase(js,
      Fixed('(('), Var(Name(self), $type=0.builtin.String),
      Fixed(').indexOf(('), Var(Name(other), $type=0.builtin.String),
      Fixed('), ('), Var(Name(self), $type=0.builtin.String),
      Fixed(').length - ('), Var(Name(other), $type=0.builtin.String),
      Fixed(').length) !== -1)')))),

   MethodMacro(Type(Name(int)), Name(find),
    Param(Type(Name(String)), Name(other), $type=0.builtin.String),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self), $type=0.builtin.String), Fixed(').indexOf('),
      Var(Name(other), $type=0.builtin.String), Fixed(')')), NativeCase(py,
      Fixed('('), Var(Name(self), $type=0.builtin.String), Fixed(').find('),
      Var(Name(other), $type=0.builtin.String), Fixed(')')), NativeCase(rb,
      Fixed('(('), Var(Name(self), $type=0.builtin.String), Fixed(').index('),
      Var(Name(other), $type=0.builtin.String), Fixed(') or -1)')),
     NativeCase(js, Fixed('('), Var(Name(self), $type=0.builtin.String),
      Fixed(').indexOf('), Var(Name(other), $type=0.builtin.String),
      Fixed(')')))),

   MethodMacro(Type(Name(String)), Name(substring),
    Param(Type(Name(int)), Name(start), $type=0.builtin.int),
    Param(Type(Name(int)), Name(end), $type=0.builtin.int),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self), $type=0.builtin.String),
      Fixed(').substring(('), Var(Name(start), $type=0.builtin.int),
      Fixed('), ('), Var(Name(end), $type=0.builtin.int), Fixed('))')),
     NativeCase(py, Fixed('('), Var(Name(self), $type=0.builtin.String),
      Fixed(')[('), Var(Name(start), $type=0.builtin.int), Fixed('):('),
      Var(Name(end), $type=0.builtin.int), Fixed(')]')), NativeCase(rb,
      Fixed('('), Var(Name(self), $type=0.builtin.String), Fixed(')[('),
      Var(Name(start), $type=0.builtin.int), Fixed(')...('), Var(Name(end),
      $type=0.builtin.int), Fixed(')]')), NativeCase(js, Fixed('('),
      Var(Name(self), $type=0.builtin.String), Fixed(').substring(('),
      Var(Name(start), $type=0.builtin.int), Fixed('), ('), Var(Name(end),
      $type=0.builtin.int), Fixed('))')))),

   MethodMacro(Type(Name(String)), Name(replace),
    Param(Type(Name(String)), Name(from), $type=0.builtin.String),
    Param(Type(Name(String)), Name(to), $type=0.builtin.String),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self), $type=0.builtin.String),
      Fixed(').replaceFirst(java.util.regex.Pattern.quote('), Var(Name(from),
      $type=0.builtin.String), Fixed('), ('), Var(Name(to),
      $type=0.builtin.String), Fixed('))')), NativeCase(py, Fixed('('),
      Var(Name(self), $type=0.builtin.String), Fixed(').replace(('),
      Var(Name(from), $type=0.builtin.String), Fixed('), ('), Var(Name(to),
      $type=0.builtin.String), Fixed('), 1)')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.String), Fixed(').sub(('),
      Var(Name(from), $type=0.builtin.String), Fixed('), ('), Var(Name(to),
      $type=0.builtin.String), Fixed('))')), NativeCase(js, Fixed('('),
      Var(Name(self), $type=0.builtin.String), Fixed(').replace(('),
      Var(Name(from), $type=0.builtin.String), Fixed('), ('), Var(Name(to),
      $type=0.builtin.String), Fixed('))')))),

   MethodMacro(Type(Name(List), Type(Name(String))), Name(split),
    Param(Type(Name(String)), Name(sep), $type=0.builtin.String),
    Native(NativeCase(java,
      Fixed('new java.util.ArrayList<String>(java.util.Arrays.asList(('),
      Var(Name(self), $type=0.builtin.String),
      Fixed(').split(java.util.regex.Pattern.quote('), Var(Name(sep),
      $type=0.builtin.String), Fixed('), -1)))')), NativeCase(py, Fixed('('),
      Var(Name(self), $type=0.builtin.String), Fixed(').split('),
      Var(Name(sep), $type=0.builtin.String), Fixed(')')), NativeCase(rb,
      Fixed('::DatawireQuarkCore.split('), Var(Name(self),
      $type=0.builtin.String), Fixed(', '), Var(Name(sep),
      $type=0.builtin.String), Fixed(')')), NativeCase(js, Fixed('('),
      Var(Name(self), $type=0.builtin.String), Fixed(').split('),
      Var(Name(sep), $type=0.builtin.String), Fixed(')')))),

   MethodMacro(Type(Name(String)), Name(join),
    Param(Type(Name(List), Type(Name(String))), Name(parts),
    $type=0.builtin.List<0.builtin.String>),
    Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.Builtins.join(('), Var(Name(self),
      $type=0.builtin.String), Fixed('), ('), Var(Name(parts),
      $type=0.builtin.List<0.builtin.String>), Fixed('))')), NativeCase(py,
      Fixed('('), Var(Name(self), $type=0.builtin.String), Fixed(').join('),
      Var(Name(parts), $type=0.builtin.List<0.builtin.String>), Fixed(')')),
     NativeCase(rb, Fixed('('), Var(Name(parts),
      $type=0.builtin.List<0.builtin.String>), Fixed(').join('),
      Var(Name(self), $type=0.builtin.String), Fixed(')')), NativeCase(js,
      Fixed('('), Var(Name(parts), $type=0.builtin.List<0.builtin.String>),
      Fixed(').join('), Var(Name(self), $type=0.builtin.String), Fixed(')')))),

   MethodMacro(Type(Name(JSONObject)), Name(toJSON),
    Call(Attr(Call(Type(Name(JSONObject)), $type=0.builtin.JSONObject),
      Name(setString), $type=0.builtin.JSONObject.setString), Var(Name(self),
     $type=0.builtin.String), $type=0.builtin.JSONObject)),

   MethodMacro(Type(Name(JSONObject)), Name(__to_JSONObject),
    Call(Attr(Var(Name(self), $type=0.builtin.String), Name(toJSON),
     $type=0.builtin.String.toJSON), $type=0.builtin.JSONObject)),

   MethodMacro(Type(Name(JSONObject)), Name(parseJSON), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.JSONObject.parse('), Var(Name(self),
      $type=0.builtin.String), Fixed(')')), NativeCase(py,
      Fixed('_JSONObject.parse('), Var(Name(self), $type=0.builtin.String),
      Fixed(')')), NativeCase(rb,
      Fixed('::DatawireQuarkCore::JSONObject.parse('), Var(Name(self),
      $type=0.builtin.String), Fixed(')')), NativeCase(js,
      Fixed('_qrt.json_from_string('), Var(Name(self), $type=0.builtin.String),
      Fixed(')')))),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_List_builtin_String__ref), Attr(Attr(Var(Name(builtin_md),
      $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
     Name(builtin_List_builtin_String__md), $type=0.builtin.reflect.Class),
   $type=0.builtin.reflect.Class)),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('java.util.ArrayList')), NativeCase(py, Fixed('_List')),
     NativeCase(js, Fixed('Array')), NativeCase(rb,
      Fixed('::DatawireQuarkCore::List')))), Name(List), TypeParam(Name(T)),

   MethodMacro(Type(Name(void)), Name(add),
    Param(Type(Name(T)), Name(element), $type=0.builtin.List.T),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self), $type=0.builtin.List<0.builtin.List.T>),
      Fixed(').add('), Var(Name(element), $type=0.builtin.List.T), Fixed(')')),
     NativeCase(py, Fixed('('), Var(Name(self),
      $type=0.builtin.List<0.builtin.List.T>), Fixed(').append('),
      Var(Name(element), $type=0.builtin.List.T), Fixed(')')), NativeCase(rb,
      Fixed('('), Var(Name(self), $type=0.builtin.List<0.builtin.List.T>),
      Fixed(') << ('), Var(Name(element), $type=0.builtin.List.T), Fixed(')')),
     NativeCase(js, Fixed('('), Var(Name(self),
      $type=0.builtin.List<0.builtin.List.T>), Fixed(').push('),
      Var(Name(element), $type=0.builtin.List.T), Fixed(')')))),

   MethodMacro(Type(Name(T)), Name(__get__),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self), $type=0.builtin.List<0.builtin.List.T>),
      Fixed(').get('), Var(Name(index), $type=0.builtin.int), Fixed(')')),
     NativeCase(py, Fixed('('), Var(Name(self),
      $type=0.builtin.List<0.builtin.List.T>), Fixed(')['), Var(Name(index),
      $type=0.builtin.int), Fixed(']')), NativeCase(rb, Fixed('('),
      Var(Name(self), $type=0.builtin.List<0.builtin.List.T>), Fixed(')['),
      Var(Name(index), $type=0.builtin.int), Fixed(']')), NativeCase(js,
      Fixed('('), Var(Name(self), $type=0.builtin.List<0.builtin.List.T>),
      Fixed(')['), Var(Name(index), $type=0.builtin.int), Fixed(']')))),

   MethodMacro(Type(Name(void)), Name(__set__),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int),
    Param(Type(Name(T)), Name(value), $type=0.builtin.List.T),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self), $type=0.builtin.List<0.builtin.List.T>),
      Fixed(').set(('), Var(Name(index), $type=0.builtin.int), Fixed('), ('),
      Var(Name(value), $type=0.builtin.List.T), Fixed('))')), NativeCase(py,
      Fixed('('), Var(Name(self), $type=0.builtin.List<0.builtin.List.T>),
      Fixed(')['), Var(Name(index), $type=0.builtin.int), Fixed('] = ('),
      Var(Name(value), $type=0.builtin.List.T), Fixed(')')), NativeCase(rb,
      Fixed('('), Var(Name(self), $type=0.builtin.List<0.builtin.List.T>),
      Fixed(')['), Var(Name(index), $type=0.builtin.int), Fixed('] = ('),
      Var(Name(value), $type=0.builtin.List.T), Fixed(')')), NativeCase(js,
      Fixed('('), Var(Name(self), $type=0.builtin.List<0.builtin.List.T>),
      Fixed(')['), Var(Name(index), $type=0.builtin.int), Fixed('] = ('),
      Var(Name(value), $type=0.builtin.List.T), Fixed(')')))),

   MethodMacro(Type(Name(int)), Name(size), Native(NativeCase(java, Fixed('('),
      Var(Name(self), $type=0.builtin.List<0.builtin.List.T>),
      Fixed(').size()')), NativeCase(py, Fixed('len('), Var(Name(self),
      $type=0.builtin.List<0.builtin.List.T>), Fixed(')')), NativeCase(rb,
      Fixed('('), Var(Name(self), $type=0.builtin.List<0.builtin.List.T>),
      Fixed(').size')), NativeCase(js, Fixed('('), Var(Name(self),
      $type=0.builtin.List<0.builtin.List.T>), Fixed(').length')))),

   MethodMacro(Type(Name(void)), Name(sort), Native(NativeCase(java,
      Fixed('java.util.Collections.sort('), Var(Name(self),
      $type=0.builtin.List<0.builtin.List.T>), Fixed(', null)')),
     NativeCase(py, Fixed('('), Var(Name(self),
      $type=0.builtin.List<0.builtin.List.T>), Fixed(').sort()')),
     NativeCase(rb, Fixed('('), Var(Name(self),
      $type=0.builtin.List<0.builtin.List.T>), Fixed(').sort!')),
     NativeCase(js, Fixed('('), Var(Name(self),
      $type=0.builtin.List<0.builtin.List.T>), Fixed(').sort()')))),

   MethodMacro(Type(Name(JSONObject)), Name(toJSON),
    Call(Attr(Var(Name(builtin), $type=0.builtin), Name(toJSON),
     $type=0.builtin.toJSON), Var(Name(self),
     $type=0.builtin.List<0.builtin.List.T>), Call(Attr(Var(Name(self),
       $type=0.builtin.List<0.builtin.List.T>), Name(getClass),
      $type=0.builtin.Object.getClass), $type=0.builtin.reflect.Class),
    $type=0.builtin.JSONObject)),

   MethodMacro(Type(Name(JSONObject)), Name(__to_JSONObject),
    Call(Attr(Var(Name(self), $type=0.builtin.List<0.builtin.List.T>),
      Name(toJSON), $type=0.builtin.List.toJSON),
    $type=0.builtin.JSONObject))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('java.util.HashMap')), NativeCase(py, Fixed('_Map')),
     NativeCase(js, Fixed('Map')), NativeCase(rb, Fixed('::Hash')))),
   Name(Map), TypeParam(Name(K)), TypeParam(Name(V)),

   MethodMacro(Type(Name(void)), Name(__set__),
    Param(Type(Name(K)), Name(key), $type=0.builtin.Map.K),
    Param(Type(Name(V)), Name(value), $type=0.builtin.Map.V),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(').put(('),
      Var(Name(key), $type=0.builtin.Map.K), Fixed('), ('), Var(Name(value),
      $type=0.builtin.Map.V), Fixed('))')), NativeCase(py, Fixed('('),
      Var(Name(self), $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
      Fixed(')['), Var(Name(key), $type=0.builtin.Map.K), Fixed('] = ('),
      Var(Name(value), $type=0.builtin.Map.V), Fixed(')')), NativeCase(rb,
      Fixed('('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(')['),
      Var(Name(key), $type=0.builtin.Map.K), Fixed('] = ('), Var(Name(value),
      $type=0.builtin.Map.V), Fixed(')')), NativeCase(js, Fixed('('),
      Var(Name(self), $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
      Fixed(').set(('), Var(Name(key), $type=0.builtin.Map.K), Fixed('), ('),
      Var(Name(value), $type=0.builtin.Map.V), Fixed('))')))),

   MethodMacro(Type(Name(V)), Name(__get__),
    Param(Type(Name(K)), Name(key), $type=0.builtin.Map.K),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(').get('),
      Var(Name(key), $type=0.builtin.Map.K), Fixed(')')), NativeCase(py,
      Fixed('('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(').get('),
      Var(Name(key), $type=0.builtin.Map.K), Fixed(')')), NativeCase(rb,
      Fixed('('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(')['),
      Var(Name(key), $type=0.builtin.Map.K), Fixed(']')), NativeCase(js,
      Fixed('_qrt.map_get(('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed('), ('),
      Var(Name(key), $type=0.builtin.Map.K), Fixed('))')))),

   MethodMacro(Type(Name(bool)), Name(contains),
    Param(Type(Name(K)), Name(key), $type=0.builtin.Map.K),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
      Fixed(').containsKey('), Var(Name(key), $type=0.builtin.Map.K),
      Fixed(')')), NativeCase(py, Fixed('('), Var(Name(key),
      $type=0.builtin.Map.K), Fixed(') in ('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(')')),
     NativeCase(rb, Fixed('('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(').key?('),
      Var(Name(key), $type=0.builtin.Map.K), Fixed(')')), NativeCase(js,
      Fixed('('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(').has('),
      Var(Name(key), $type=0.builtin.Map.K), Fixed(')')))),

   MethodMacro(Type(Name(List), Type(Name(K))), Name(keys),
    Native(NativeCase(java, Fixed('new java.util.ArrayList(('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
      Fixed(').keySet())')), NativeCase(py, Fixed('_List(('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
      Fixed(').keys())')), NativeCase(rb, Fixed('('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(').keys')),
     NativeCase(js, Fixed('Array.from(('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
      Fixed(').keys())')))),

   MethodMacro(Type(Name(void)), Name(update),
    Param(Type(Name(Map), Type(Name(K)), Type(Name(V))), Name(other),
    $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
    Native(NativeCase(java,
      Fixed('('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
      Fixed(').putAll('), Var(Name(other),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(')')),
     NativeCase(py, Fixed('('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
      Fixed(').update('), Var(Name(other),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(')')),
     NativeCase(rb, Fixed('('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
      Fixed(').merge!('), Var(Name(other),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(')')),
     NativeCase(js, Fixed('('), Var(Name(other),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
      Fixed(').forEach(function (v, k) '), Fixed('{'), Fixed(' ('),
      Var(Name(self), $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
      Fixed(').set(k, v); '), Fixed('}'), Fixed(')')))),

   MethodMacro(Type(Name(String)), Name(urlencode), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.Builtins.urlencode('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(')')),
     NativeCase(py, Fixed('_urlencode('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(')')),
     NativeCase(rb, Fixed('::DatawireQuarkCore.urlencode('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(')')),
     NativeCase(js, Fixed('_qrt.urlencode('), Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Fixed(')')))),

   MethodMacro(Type(Name(JSONObject)), Name(toJSON),
    Call(Attr(Var(Name(builtin), $type=0.builtin), Name(toJSON),
     $type=0.builtin.toJSON), Var(Name(self),
     $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>),
     Call(Attr(Var(Name(self),
       $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Name(getClass),
      $type=0.builtin.Object.getClass), $type=0.builtin.reflect.Class),
    $type=0.builtin.JSONObject)),

   MethodMacro(Type(Name(JSONObject)), Name(__to_JSONObject),
    Call(Attr(Var(Name(self),
      $type=0.builtin.Map<0.builtin.Map.K,0.builtin.Map.V>), Name(toJSON),
     $type=0.builtin.Map.toJSON), $type=0.builtin.JSONObject)),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_List_builtin_Object__ref), Attr(Attr(Var(Name(builtin_md),
      $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
     Name(builtin_List_builtin_Object__md), $type=0.builtin.reflect.Class),
   $type=0.builtin.reflect.Class),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_Map_builtin_Object_builtin_Object__ref),
    Attr(Attr(Var(Name(builtin_md), $type=1.builtin_md), Name(Root),
     $type=1.builtin_md.Root),
     Name(builtin_Map_builtin_Object_builtin_Object__md),
    $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class)),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.JSONObject')), NativeCase(py,
      Fixed('_JSONObject')), NativeCase(rb,
      Fixed('::DatawireQuarkCore::JSONObject')), NativeCase(js,
      Fixed('_qrt.JSONObject')))), Name(JSONObject),

   ConstructorMacro(Name(JSONObject), Native(NativeCase(java,
      Fixed('new io.datawire.quark.runtime.JSONObject()')), NativeCase(py,
      Fixed('_JSONObject()')), NativeCase(rb,
      Fixed('::DatawireQuarkCore::JSONObject.new')), NativeCase(js,
      Fixed('new _qrt.JSONObject()')))),

   MethodMacro(Type(Name(String)), Name(__to_String), Call(Attr(Var(Name(self),
      $type=0.builtin.JSONObject), Name(getString),
     $type=0.builtin.JSONObject.getString), $type=0.builtin.String)),

   MethodMacro(Type(Name(float)), Name(__to_float), Call(Attr(Var(Name(self),
      $type=0.builtin.JSONObject), Name(getNumber),
     $type=0.builtin.JSONObject.getNumber), $type=0.builtin.float)),

   MethodMacro(Type(Name(int)), Name(__to_int), Native(NativeCase(java,
      Fixed('((int) Math.round(('), Var(Name(self),
      $type=0.builtin.JSONObject), Fixed(').getNumber()))')), NativeCase(py,
      Fixed('int(round(('), Var(Name(self), $type=0.builtin.JSONObject),
      Fixed(').getNumber()))')), NativeCase(rb, Fixed('('), Var(Name(self),
      $type=0.builtin.JSONObject), Fixed(').getNumber.round')), NativeCase(js,
      Fixed('Math.round(('), Var(Name(self), $type=0.builtin.JSONObject),
      Fixed(').getNumber())')))),

   MethodMacro(Type(Name(long)), Name(__to_long),
    Call(Attr(Call(Attr(Var(Name(self), $type=0.builtin.JSONObject),
        Name(getNumber), $type=0.builtin.JSONObject.getNumber),
      $type=0.builtin.float), Name(round), $type=0.builtin.float.round),
    $type=0.builtin.long)),

   MethodMacro(Type(Name(bool)), Name(__to_bool), Call(Attr(Var(Name(self),
      $type=0.builtin.JSONObject), Name(getBool),
     $type=0.builtin.JSONObject.getBool), $type=0.builtin.bool)),

   Method(static=False, Type(Name(String)), Name(getType)),

   Method(static=False, Type(Name(JSONObject)), Name(getObjectItem),
    Param(Type(Name(String)), Name(key), $type=0.builtin.String)),

   MethodMacro(Type(Name(JSONObject)), Name(__get__),
    Param(Type(Name(String)), Name(key), $type=0.builtin.String),
    Native(NativeCase(Fixed('('), Var(Name(self), $type=0.builtin.JSONObject),
      Fixed(').getObjectItem('), Var(Name(key), $type=0.builtin.String),
      Fixed(')')))),

   Method(static=False, Type(Name(JSONObject)), Name(getListItem),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int)),

   Method(static=False, Type(Name(int)), Name(size)),

   Method(static=False, Type(Name(String)), Name(getString)),

   Method(static=False, Type(Name(bool)), Name(isString)),

   Method(static=False, Type(Name(float)), Name(getNumber)),

   Method(static=False, Type(Name(bool)), Name(isNumber)),

   Method(static=False, Type(Name(bool)), Name(getBool)),

   Method(static=False, Type(Name(bool)), Name(isNull)),

   Method(static=False, Type(Name(bool)), Name(isDefined)),

   Method(static=False, Type(Name(bool)), Name(isUndefined)),

   Method(static=False, Type(Name(JSONObject)), Name(undefined)),

   Method(static=False, Type(Name(List), Type(Name(String))), Name(keys)),

   Method(static=False, Type(Name(String)), Name(toString)),

   Method(static=False, Type(Name(JSONObject)), Name(setString),
    Param(Type(Name(String)), Name(value), $type=0.builtin.String)),

   Method(static=False, Type(Name(JSONObject)), Name(setNumber),
    Param(Type(Name(Object)), Name(value), $type=0.builtin.Object)),

   Method(static=False, Type(Name(JSONObject)), Name(setBool),
    Param(Type(Name(bool)), Name(value), $type=0.builtin.bool)),

   Method(static=False, Type(Name(JSONObject)), Name(setNull)),

   Method(static=False, Type(Name(JSONObject)), Name(setObject)),

   Method(static=False, Type(Name(JSONObject)), Name(setList)),

   Method(static=False, Type(Name(JSONObject)), Name(setObjectItem),
    Param(Type(Name(String)), Name(key), $type=0.builtin.String),
    Param(Type(Name(JSONObject)), Name(value), $type=0.builtin.JSONObject)),

   Method(static=False, Type(Name(JSONObject)), Name(setListItem),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int),
    Param(Type(Name(JSONObject)), Name(value), $type=0.builtin.JSONObject)),

   MethodMacro(Type(Name(void)), Name(__set__),
    Param(Type(Name(String)), Name(key), $type=0.builtin.String),
    Param(Type(Name(JSONObject)), Name(value), $type=0.builtin.JSONObject),
    Native(NativeCase(Fixed('('), Var(Name(self), $type=0.builtin.JSONObject),
      Fixed(').setObjectItem(('), Var(Name(key), $type=0.builtin.String),
      Fixed('), ('), Var(Name(value), $type=0.builtin.JSONObject),
      Fixed('))'))))),

  Macro(Type(Name(void)), Name(print),
   Param(Type(Name(Object)), Name(msg), $type=0.builtin.Object),
   Native(NativeCase(java,
     Fixed('do'), Fixed('{'), Fixed('System.out.println('), Var(Name(msg),
     $type=0.builtin.Object), Fixed(');System.out.flush();'), Fixed('}'),
     Fixed('while(false)')), NativeCase(py, Fixed('_println('), Var(Name(msg),
     $type=0.builtin.Object), Fixed(')')), NativeCase(rb,
     Fixed('::DatawireQuarkCore.print('), Var(Name(msg),
     $type=0.builtin.Object), Fixed(')')), NativeCase(js, Fixed('_qrt.print('),
     Var(Name(msg), $type=0.builtin.Object), Fixed(')')))),

  Macro(Type(Name(long)), Name(now), Native(NativeCase(java,
     Fixed('System.currentTimeMillis()')), NativeCase(py,
     Fixed('long(time.time()*1000)')), NativeCase(rb,
     Fixed('::DatawireQuarkCore.now')), NativeCase(js, Fixed('Date.now()')))),

  Macro(Type(Name(void)), Name(sleep),
   Param(Type(Name(float)), Name(seconds), $type=0.builtin.float),
   Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.Builtins.sleep('), Var(Name(seconds),
     $type=0.builtin.float), Fixed(')')), NativeCase(py, Fixed('time.sleep('),
     Var(Name(seconds), $type=0.builtin.float), Fixed(')')), NativeCase(rb,
     Fixed('sleep('), Var(Name(seconds), $type=0.builtin.float), Fixed(')')),
    NativeCase(js, Fixed('_qrt.sleep('), Var(Name(seconds),
     $type=0.builtin.float), Fixed(')')))),

  Macro(Type(Name(String)), Name(url_get),
   Param(Type(Name(String)), Name(url), $type=0.builtin.String),
   Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.Builtins.url_get('), Var(Name(url),
     $type=0.builtin.String), Fixed(')')), NativeCase(py, Fixed('_url_get('),
     Var(Name(url), $type=0.builtin.String), Fixed(')')), NativeCase(rb,
     Fixed('::DatawireQuarkCore.url_get('), Var(Name(url),
     $type=0.builtin.String), Fixed(')')), NativeCase(js,
     Fixed('_qrt.url_get('), Var(Name(url), $type=0.builtin.String),
     Fixed(')')))),

  Macro(Type(Name(int)), Name(parseInt),
   Param(Type(Name(String)), Name(st), $type=0.builtin.String),
   Native(NativeCase(java,
     Fixed('Integer.parseInt('), Var(Name(st), $type=0.builtin.String),
     Fixed(')')), NativeCase(py, Fixed('int('), Var(Name(st),
     $type=0.builtin.String), Fixed(')')), NativeCase(rb, Fixed('Integer('),
     Var(Name(st), $type=0.builtin.String), Fixed(')')), NativeCase(js,
     Fixed('parseInt('), Var(Name(st), $type=0.builtin.String), Fixed(')')))),

  Macro(Type(Name(Codec)), Name(defaultCodec), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.Builtins.defaultCodec()')),
    NativeCase(py, Fixed('_default_codec()')), NativeCase(rb,
     Fixed('::DatawireQuarkCore.default_codec')), NativeCase(js,
     Fixed('_qrt.defaultCodec()')))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.WSHandler')))), Name(WSHandler),

   Method(static=False, Type(Name(void)), Name(onWSInit),
    Param(Type(Name(WebSocket)), Name(socket), $type=0.builtin.WebSocket),
    Block()),

   Method(static=False, Type(Name(void)), Name(onWSConnected),
    Param(Type(Name(WebSocket)), Name(socket), $type=0.builtin.WebSocket),
    Block()),

   Method(static=False, Type(Name(void)), Name(onWSMessage),
    Param(Type(Name(WebSocket)), Name(socket), $type=0.builtin.WebSocket),
    Param(Type(Name(String)), Name(message), $type=0.builtin.String),
    Block()),

   Method(static=False, Type(Name(void)), Name(onWSBinary),
    Param(Type(Name(WebSocket)), Name(socket), $type=0.builtin.WebSocket),
    Param(Type(Name(Buffer)), Name(message), $type=0.builtin.Buffer),
    Block()),

   Method(static=False, Type(Name(void)), Name(onWSClosed),
    Param(Type(Name(WebSocket)), Name(socket), $type=0.builtin.WebSocket),
    Block()),

   Method(static=False, Type(Name(void)), Name(onWSError),
    Param(Type(Name(WebSocket)), Name(socket), $type=0.builtin.WebSocket),
    Block()),

   Method(static=False, Type(Name(void)), Name(onWSFinal),
    Param(Type(Name(WebSocket)), Name(socket), $type=0.builtin.WebSocket),
    Block())),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.WebSocket')))), Name(WebSocket),

   Method(static=False, Type(Name(bool)), Name(send),
    Param(Type(Name(String)), Name(message), $type=0.builtin.String)),

   Method(static=False, Type(Name(bool)), Name(sendBinary),
    Param(Type(Name(Buffer)), Name(bytes), $type=0.builtin.Buffer)),

   Method(static=False, Type(Name(bool)), Name(close))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.HTTPHandler')))), Name(HTTPHandler),

   Method(static=False, Type(Name(void)), Name(onHTTPInit),
    Param(Type(Name(HTTPRequest)), Name(request), $type=0.builtin.HTTPRequest),
    Block()),

   Method(static=False, Type(Name(void)), Name(onHTTPResponse),
    Param(Type(Name(HTTPRequest)), Name(request), $type=0.builtin.HTTPRequest),
    Param(Type(Name(HTTPResponse)), Name(response),
    $type=0.builtin.HTTPResponse),
    Block()),

   Method(static=False, Type(Name(void)), Name(onHTTPError),
    Param(Type(Name(HTTPRequest)), Name(request), $type=0.builtin.HTTPRequest),
    Param(Type(Name(String)), Name(message), $type=0.builtin.String),
    Block()),

   Method(static=False, Type(Name(void)), Name(onHTTPFinal),
    Param(Type(Name(HTTPRequest)), Name(request), $type=0.builtin.HTTPRequest),
    Block())),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.HTTPRequest')), NativeCase(rb,
      Fixed('::DatawireQuarkCore::HTTP::Request')))), Name(HTTPRequest),

   ConstructorMacro(Name(HTTPRequest),
    Param(Type(Name(String)), Name(url), $type=0.builtin.String),
    Native(NativeCase(java,
      Fixed('new io.datawire.quark.runtime.ClientHTTPRequest('), Var(Name(url),
      $type=0.builtin.String), Fixed(')')), NativeCase(py,
      Fixed('_HTTPRequest('), Var(Name(url), $type=0.builtin.String),
      Fixed(')')), NativeCase(rb,
      Fixed('::DatawireQuarkCore::HTTP::Request.new('), Var(Name(url),
      $type=0.builtin.String), Fixed(')')), NativeCase(js,
      Fixed('new _qrt.HTTPRequest('), Var(Name(url), $type=0.builtin.String),
      Fixed(')')))),

   Method(static=False, Type(Name(String)), Name(getUrl)),

   Method(static=False, Type(Name(void)), Name(setMethod),
    Param(Type(Name(String)), Name(method), $type=0.builtin.String)),

   Method(static=False, Type(Name(String)), Name(getMethod)),

   Method(static=False, Type(Name(void)), Name(setBody),
    Param(Type(Name(String)), Name(data), $type=0.builtin.String)),

   Method(static=False, Type(Name(String)), Name(getBody)),

   Method(static=False, Type(Name(void)), Name(setHeader),
    Param(Type(Name(String)), Name(key), $type=0.builtin.String),
    Param(Type(Name(String)), Name(value), $type=0.builtin.String)),

   Method(static=False, Type(Name(String)), Name(getHeader),
    Param(Type(Name(String)), Name(key), $type=0.builtin.String)),

   Method(static=False, Type(Name(List), Type(Name(String))),
    Name(getHeaders))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.HTTPResponse')), NativeCase(rb,
      Fixed('::DatawireQuarkCore::HTTP::Response')))), Name(HTTPResponse),

   Method(static=False, Type(Name(int)), Name(getCode)),

   Method(static=False, Type(Name(void)), Name(setCode),
    Param(Type(Name(int)), Name(code), $type=0.builtin.int)),

   Method(static=False, Type(Name(String)), Name(getBody)),

   Method(static=False, Type(Name(void)), Name(setBody),
    Param(Type(Name(String)), Name(body), $type=0.builtin.String)),

   Method(static=False, Type(Name(void)), Name(setHeader),
    Param(Type(Name(String)), Name(key), $type=0.builtin.String),
    Param(Type(Name(String)), Name(value), $type=0.builtin.String)),

   Method(static=False, Type(Name(String)), Name(getHeader),
    Param(Type(Name(String)), Name(key), $type=0.builtin.String)),

   Method(static=False, Type(Name(List), Type(Name(String))),
    Name(getHeaders))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.Task')))), Name(Task),

   Method(static=False, Type(Name(void)), Name(onExecute),
    Param(Type(Name(Runtime)), Name(runtime), $type=0.builtin.Runtime))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.Runtime')))), Name(Runtime),

   ConstructorMacro(Name(Runtime), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.Runtime.Factory.create()')),
     NativeCase(py, Fixed('_RuntimeFactory.create()')), NativeCase(js,
      Fixed('_qrt.RuntimeFactory.create()')), NativeCase(rb,
      Fixed('::DatawireQuarkCore::Runtime.new')))),

   Method(static=False, Type(Name(void)), Name(open),
    Param(Type(Name(String)), Name(url), $type=0.builtin.String),
    Param(Type(Name(WSHandler)), Name(handler), $type=0.builtin.WSHandler)),

   Method(static=False, Type(Name(void)), Name(request),
    Param(Type(Name(HTTPRequest)), Name(request), $type=0.builtin.HTTPRequest),
    Param(Type(Name(HTTPHandler)), Name(handler),
    $type=0.builtin.HTTPHandler)),

   Method(static=False, Type(Name(void)), Name(schedule),
    Param(Type(Name(Task)), Name(handler), $type=0.builtin.Task),
    Param(Type(Name(float)), Name(delayInSeconds), $type=0.builtin.float)),

   Method(static=False, Type(Name(Codec)), Name(codec)),

   Method(static=False, Type(Name(void)), Name(serveHTTP),
    Param(Type(Name(String)), Name(url), $type=0.builtin.String),
    Param(Type(Name(HTTPServlet)), Name(servlet),
    $type=0.builtin.HTTPServlet)),

   Method(static=False, Type(Name(void)), Name(serveWS),
    Param(Type(Name(String)), Name(url), $type=0.builtin.String),
    Param(Type(Name(WSServlet)), Name(servlet), $type=0.builtin.WSServlet)),

   Method(static=False, Type(Name(void)), Name(respond),
    Param(Type(Name(HTTPRequest)), Name(request), $type=0.builtin.HTTPRequest),
    Param(Type(Name(HTTPResponse)), Name(response),
    $type=0.builtin.HTTPResponse)),

   Method(static=False, Annotation(Name(doc),
     String("Display the explanatory message and then terminate the program",
     $type=0.builtin.String)), Type(Name(void)), Name(fail),
    Param(Type(Name(String)), Name(message), $type=0.builtin.String)),

   Method(static=False, Annotation(Name(doc),
     String("Get a logger for the specified topic.", $type=0.builtin.String)),
    Type(Name(Logger)), Name(logger),
    Param(Type(Name(String)), Name(topic), $type=0.builtin.String))),

  Primitive(Annotation(Name(doc), String("A logging facility",
    $type=0.builtin.String)), Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.Logger')))), Name(Logger),

   ConstructorMacro(Name(Logger),
    Param(Type(Name(String)), Name(topic), $type=0.builtin.String),
    Call(Attr(Call(Attr(Call(Attr(Attr(Attr(Var(Name(builtin),
            $type=0.builtin), Name(concurrent), $type=0.builtin.concurrent),
           Name(Context), $type=0.builtin.concurrent.Context), Name(current),
         $type=0.builtin.concurrent.Context.current),
        $type=0.builtin.concurrent.Context), Name(runtime),
       $type=0.builtin.concurrent.Context.runtime), $type=0.builtin.Runtime),
      Name(logger), $type=0.builtin.Runtime.logger), Var(Name(topic),
     $type=0.builtin.String), $type=0.builtin.Logger)),

   Method(static=False, Annotation(Name(doc),
     String("emit a log at trace level", $type=0.builtin.String)),
    Type(Name(void)), Name(trace),
    Param(Type(Name(String)), Name(msg), $type=0.builtin.String)),

   Method(static=False, Annotation(Name(doc),
     String("emit a log at debug level", $type=0.builtin.String)),
    Type(Name(void)), Name(debug),
    Param(Type(Name(String)), Name(msg), $type=0.builtin.String)),

   Method(static=False, Annotation(Name(doc),
     String("emit a log at info level", $type=0.builtin.String)),
    Type(Name(void)), Name(info),
    Param(Type(Name(String)), Name(msg), $type=0.builtin.String)),

   Method(static=False, Annotation(Name(doc),
     String("emit a log at warn level", $type=0.builtin.String)),
    Type(Name(void)), Name(warn),
    Param(Type(Name(String)), Name(msg), $type=0.builtin.String)),

   Method(static=False, Annotation(Name(doc),
     String("emit a log at error level", $type=0.builtin.String)),
    Type(Name(void)), Name(error),
    Param(Type(Name(String)), Name(msg), $type=0.builtin.String))),

  Primitive(Annotation(Name(doc),
    String("A stateless buffer of bytes. Default byte order is network byte order.",
    $type=0.builtin.String)), Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.Buffer')))), Name(Buffer),

   Method(static=False, Annotation(Name(doc), String("capacity of the buffer",
     $type=0.builtin.String)), Type(Name(int)), Name(capacity)),

   Method(static=False, Annotation(Name(doc),
     String("read a byte at the specified index", $type=0.builtin.String)),
    Type(Name(byte)), Name(getByte),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int)),

   Method(static=False, Annotation(Name(doc),
     String("write a byte at the specified index", $type=0.builtin.String)),
    Type(Name(void)), Name(putByte),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int),
    Param(Type(Name(byte)), Name(value), $type=0.builtin.byte)),

   Method(static=False, Annotation(Name(doc),
     String("read a short at the specified index", $type=0.builtin.String)),
    Type(Name(short)), Name(getShort),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int)),

   Method(static=False, Annotation(Name(doc),
     String("write a short at the specified index", $type=0.builtin.String)),
    Type(Name(void)), Name(putShort),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int),
    Param(Type(Name(short)), Name(value), $type=0.builtin.short)),

   Method(static=False, Annotation(Name(doc),
     String("read an int at the specified index", $type=0.builtin.String)),
    Type(Name(int)), Name(getInt),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int)),

   Method(static=False, Annotation(Name(doc),
     String("write an int at the specified index", $type=0.builtin.String)),
    Type(Name(void)), Name(putInt),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int),
    Param(Type(Name(int)), Name(value), $type=0.builtin.int)),

   Method(static=False, Annotation(Name(doc),
     String("read a long at the specified index", $type=0.builtin.String)),
    Type(Name(long)), Name(getLong),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int)),

   Method(static=False, Annotation(Name(doc),
     String("write a long at the specified index", $type=0.builtin.String)),
    Type(Name(void)), Name(putLong),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int),
    Param(Type(Name(long)), Name(value), $type=0.builtin.long)),

   Method(static=False, Annotation(Name(doc),
     String("read a float at the specified index", $type=0.builtin.String)),
    Type(Name(float)), Name(getFloat),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int)),

   Method(static=False, Annotation(Name(doc),
     String("write a float at the specified index", $type=0.builtin.String)),
    Type(Name(void)), Name(putFloat),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int),
    Param(Type(Name(float)), Name(value), $type=0.builtin.float)),

   Method(static=False, Annotation(Name(doc),
     String("decode length bytes as a UTF8 string at the specified index",
     $type=0.builtin.String)), Type(Name(String)), Name(getStringUTF8),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int),
    Param(Type(Name(int)), Name(length), $type=0.builtin.int)),

   Method(static=False, Annotation(Name(doc),
     String("write a string encoded in UTF8 at the specified index and return encoded length",
     $type=0.builtin.String)), Type(Name(int)), Name(putStringUTF8),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int),
    Param(Type(Name(String)), Name(value), $type=0.builtin.String)),

   Method(static=False, Annotation(Name(doc), String("get a view of the range",
     $type=0.builtin.String)), Type(Name(Buffer)), Name(getSlice),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int),
    Param(Type(Name(int)), Name(length), $type=0.builtin.int)),

   Method(static=False, Annotation(Name(doc),
     String("copy length bytes from the source buffer starting at offset to the specified index",
     $type=0.builtin.String)), Type(Name(void)), Name(putSlice),
    Param(Type(Name(int)), Name(index), $type=0.builtin.int),
    Param(Type(Name(Buffer)), Name(source), $type=0.builtin.Buffer),
    Param(Type(Name(int)), Name(offset), $type=0.builtin.int),
    Param(Type(Name(int)), Name(length), $type=0.builtin.int)),

   Method(static=False, Annotation(Name(doc),
     String("get a littleEndian view of the same buffer",
     $type=0.builtin.String)), Type(Name(Buffer)), Name(littleEndian)),

   Method(static=False, Annotation(Name(doc),
     String("true if the buffer decodes in network byte order",
     $type=0.builtin.String)), Type(Name(bool)), Name(isNetworkByteOrder))),

  Primitive(Annotation(Name(doc),
    String("Various String and Buffer conversion routines",
    $type=0.builtin.String)), Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.Codec')))), Name(Codec),

   Method(static=False, Annotation(Name(doc),
     String("Create an empty buffer with the specified capacity",
     $type=0.builtin.String)), Type(Name(Buffer)), Name(buffer),
    Param(Type(Name(int)), Name(capacity), $type=0.builtin.int)),

   Method(static=False, Annotation(Name(doc),
     String("Encode the specified slice of the buffer and insert a space every 2^spaceScale bytes",
     $type=0.builtin.String)), Type(Name(String)), Name(toHexdump),
    Param(Type(Name(Buffer)), Name(buffer), $type=0.builtin.Buffer),
    Param(Type(Name(int)), Name(offeset), $type=0.builtin.int),
    Param(Type(Name(int)), Name(length), $type=0.builtin.int),
    Param(Type(Name(int)), Name(spaceScale), $type=0.builtin.int)),

   Method(static=False, Annotation(Name(doc),
     String("decode the hexdump ignoring leading 0x and any intervening spaces",
     $type=0.builtin.String)), Type(Name(Buffer)), Name(fromHexdump),
    Param(Type(Name(String)), Name(hex), $type=0.builtin.String)),

   Method(static=False, Annotation(Name(doc),
     String("Encode the specified slice of the buffer as Base64",
     $type=0.builtin.String)), Type(Name(String)), Name(toBase64),
    Param(Type(Name(Buffer)), Name(buffer), $type=0.builtin.Buffer),
    Param(Type(Name(int)), Name(offset), $type=0.builtin.int),
    Param(Type(Name(int)), Name(length), $type=0.builtin.int)),

   Method(static=False, Annotation(Name(doc),
     String("decode the Base64 enccoded string", $type=0.builtin.String)),
    Type(Name(Buffer)), Name(fromBase64),
    Param(Type(Name(String)), Name(base64), $type=0.builtin.String))),

  Primitive(Annotation(Name(doc), String("A service addresable with an url",
    $type=0.builtin.String)), Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.Servlet')))), Name(Servlet),

   Method(static=False, Annotation(Name(doc),
     String("called after the servlet is successfully installed. The url will be the actual url used, important especially if ephemeral port was requested",
     $type=0.builtin.String)), Type(Name(void)), Name(onServletInit),
    Param(Type(Name(String)), Name(url), $type=0.builtin.String),
    Param(Type(Name(Runtime)), Name(runtime), $type=0.builtin.Runtime),
    Block()),

   Method(static=False, Annotation(Name(doc),
     String("called if the servlet could not be installed",
     $type=0.builtin.String)), Type(Name(void)), Name(onServletError),
    Param(Type(Name(String)), Name(url), $type=0.builtin.String),
    Param(Type(Name(String)), Name(error), $type=0.builtin.String),
    Block()),

   Method(static=False, Annotation(Name(doc),
     String("called when the servlet is removed", $type=0.builtin.String)),
    Type(Name(void)), Name(onServletEnd),
    Param(Type(Name(String)), Name(url), $type=0.builtin.String),
    Block())),

  Primitive(Annotation(Name(doc), String("Http servlet",
    $type=0.builtin.String)), Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.HTTPServlet')))), Name(HTTPServlet),
   Type(Name(Servlet)),

   Method(static=False, Annotation(Name(doc),
     String("incoming request. respond with Runtime.respond(). After responding the objects may get recycled by the runtime",
     $type=0.builtin.String)), Type(Name(void)), Name(onHTTPRequest),
    Param(Type(Name(HTTPRequest)), Name(request), $type=0.builtin.HTTPRequest),
    Param(Type(Name(HTTPResponse)), Name(response),
    $type=0.builtin.HTTPResponse),
    Block()),

   Method(static=False, Type(Name(void)), Name(serveHTTP),
    Param(Type(Name(String)), Name(url), $type=0.builtin.String),
    Block(
     ExprStmt(Call(Attr(Call(Attr(Attr(Var(Name(concurrent),
           $type=0.builtin.concurrent), Name(Context),
          $type=0.builtin.concurrent.Context), Name(runtime),
         $type=0.builtin.concurrent.Context.runtime), $type=0.builtin.Runtime),
        Name(serveHTTP), $type=0.builtin.Runtime.serveHTTP), Var(Name(url),
       $type=0.builtin.String), Var(Name(self), $type=0.builtin.HTTPServlet),
      $type=0.builtin.void))))),

  Primitive(Annotation(Name(doc), String("Websocket servlet",
    $type=0.builtin.String)), Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.WSServlet')))), Name(WSServlet),
   Type(Name(Servlet)),

   Method(static=False, Annotation(Name(doc),
     String("called for each new incoming WebSocket connection",
     $type=0.builtin.String)), Type(Name(WSHandler)), Name(onWSConnect),
    Param(Type(Name(HTTPRequest)), Name(upgrade_request),
    $type=0.builtin.HTTPRequest),
    Block(
     Return(Null(null, $type=0.builtin.Object)))),

   Method(static=False, Type(Name(void)), Name(serveWS),
    Param(Type(Name(String)), Name(url), $type=0.builtin.String),
    Block(
     ExprStmt(Call(Attr(Call(Attr(Attr(Var(Name(concurrent),
           $type=0.builtin.concurrent), Name(Context),
          $type=0.builtin.concurrent.Context), Name(runtime),
         $type=0.builtin.concurrent.Context.runtime), $type=0.builtin.Runtime),
        Name(serveWS), $type=0.builtin.Runtime.serveWS), Var(Name(url),
       $type=0.builtin.String), Var(Name(self), $type=0.builtin.WSServlet),
      $type=0.builtin.void))))),

  Function(Annotation(Name(doc),
    String("Serializes object tree into JSON. skips over fields starting with underscore",
    $type=0.builtin.String)), Type(Name(JSONObject)), Name(toJSON),
   Param(Type(Name(Object)), Name(obj), $type=0.builtin.Object),
   Param(Type(Name(reflect), Name(Class)), Name(cls),
   $type=0.builtin.reflect.Class),
   Block(
    Local(
     Declaration(Type(Name(JSONObject)), Name(result),
      Call(Type(Name(JSONObject)), $type=0.builtin.JSONObject),
     $type=0.builtin.JSONObject)),
    If(Call(Attr(Var(Name(obj), $type=0.builtin.Object), Name(__eq__),
      $type=0.builtin.Object.__eq__), Null(null, $type=0.builtin.Object),
     $type=0.builtin.bool), Block(
      ExprStmt(Call(Attr(Var(Name(result), $type=0.builtin.JSONObject),
         Name(setNull), $type=0.builtin.JSONObject.setNull),
       $type=0.builtin.JSONObject)),
      Return(Var(Name(result), $type=0.builtin.JSONObject)))),
    If(Call(Attr(Var(Name(cls), $type=0.builtin.reflect.Class), Name(__eq__),
      $type=0.builtin.Object.__eq__), Null(null, $type=0.builtin.Object),
     $type=0.builtin.bool), Block(
      Assign(Var(Name(cls), $type=0.builtin.reflect.Class),
       Call(Attr(Var(Name(obj), $type=0.builtin.Object), Name(getClass),
        $type=0.builtin.Object.getClass), $type=0.builtin.reflect.Class)))),
    Local(
     Declaration(Type(Name(int)), Name(idx), Number(0, $type=0.builtin.int),
     $type=0.builtin.int)),
    If(Call(Attr(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
        Name(name), $type=0.builtin.String), Name(__eq__),
      $type=0.builtin.Object.__eq__), String("builtin.String",
      $type=0.builtin.String), $type=0.builtin.bool), Block(
      ExprStmt(Call(Attr(Var(Name(result), $type=0.builtin.JSONObject),
         Name(setString), $type=0.builtin.JSONObject.setString),
        Cast(Var(Name(obj), $type=0.builtin.Object), $type=0.builtin.String),
       $type=0.builtin.JSONObject)),
      Return(Var(Name(result), $type=0.builtin.JSONObject)))),
    If(Call(Attr(Call(Attr(Call(Attr(Call(Attr(Call(Attr(Attr(Var(Name(cls),
                $type=0.builtin.reflect.Class), Name(name),
               $type=0.builtin.String), Name(__eq__),
              $type=0.builtin.Object.__eq__), String("builtin.byte",
              $type=0.builtin.String), $type=0.builtin.bool), Name(__or__),
            $type=0.builtin.bool.__or__), Call(Attr(Attr(Var(Name(cls),
               $type=0.builtin.reflect.Class), Name(name),
              $type=0.builtin.String), Name(__eq__),
             $type=0.builtin.Object.__eq__), String("builtin.short",
             $type=0.builtin.String), $type=0.builtin.bool),
           $type=0.builtin.bool), Name(__or__), $type=0.builtin.bool.__or__),
          Call(Attr(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
             Name(name), $type=0.builtin.String), Name(__eq__),
           $type=0.builtin.Object.__eq__), String("builtin.int",
           $type=0.builtin.String), $type=0.builtin.bool),
         $type=0.builtin.bool), Name(__or__), $type=0.builtin.bool.__or__),
        Call(Attr(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
           Name(name), $type=0.builtin.String), Name(__eq__),
         $type=0.builtin.Object.__eq__), String("builtin.long",
         $type=0.builtin.String), $type=0.builtin.bool), $type=0.builtin.bool),
       Name(__or__), $type=0.builtin.bool.__or__),
      Call(Attr(Attr(Var(Name(cls), $type=0.builtin.reflect.Class), Name(name),
        $type=0.builtin.String), Name(__eq__), $type=0.builtin.Object.__eq__),
       String("builtin.float", $type=0.builtin.String), $type=0.builtin.bool),
     $type=0.builtin.bool), Block(
      ExprStmt(Call(Attr(Var(Name(result), $type=0.builtin.JSONObject),
         Name(setNumber), $type=0.builtin.JSONObject.setNumber), Var(Name(obj),
        $type=0.builtin.Object), $type=0.builtin.JSONObject)),
      Return(Var(Name(result), $type=0.builtin.JSONObject)))),
    If(Call(Attr(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
        Name(name), $type=0.builtin.String), Name(__eq__),
      $type=0.builtin.Object.__eq__), String("builtin.List",
      $type=0.builtin.String), $type=0.builtin.bool), Block(
      ExprStmt(Call(Attr(Var(Name(result), $type=0.builtin.JSONObject),
         Name(setList), $type=0.builtin.JSONObject.setList),
       $type=0.builtin.JSONObject)),
      Local(
       Declaration(Type(Name(List), Type(Name(Object))), Name(list),
        Cast(Var(Name(obj), $type=0.builtin.Object),
        $type=0.builtin.List<0.builtin.Object>),
       $type=0.builtin.List<0.builtin.Object>)),
      While(Call(Attr(Var(Name(idx), $type=0.builtin.int), Name(__lt__),
        $type=0.builtin.numeric.__lt__), Call(Attr(Var(Name(list),
          $type=0.builtin.List<0.builtin.Object>), Name(size),
         $type=0.builtin.List.size), $type=0.builtin.int),
       $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Var(Name(result), $type=0.builtin.JSONObject),
           Name(setListItem), $type=0.builtin.JSONObject.setListItem),
          Var(Name(idx), $type=0.builtin.int), Call(Var(Name(toJSON),
           $type=0.builtin.toJSON), Call(Attr(Var(Name(list),
             $type=0.builtin.List<0.builtin.Object>), Name(__get__),
            $type=0.builtin.List.__get__), Var(Name(idx), $type=0.builtin.int),
           $type=0.builtin.Object), Null(null, $type=0.builtin.Object),
          $type=0.builtin.JSONObject), $type=0.builtin.JSONObject)),
        Assign(Var(Name(idx), $type=0.builtin.int), Call(Attr(Var(Name(idx),
           $type=0.builtin.int), Name(__add__),
          $type=0.builtin.numeric.__add__), Number(1, $type=0.builtin.int),
         $type=0.builtin.int)))),
      Return(Var(Name(result), $type=0.builtin.JSONObject)))),
    If(Call(Attr(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
        Name(name), $type=0.builtin.String), Name(__eq__),
      $type=0.builtin.Object.__eq__), String("builtin.Map",
      $type=0.builtin.String), $type=0.builtin.bool), Block(
      ExprStmt(Call(Attr(Var(Name(result), $type=0.builtin.JSONObject),
         Name(setObject), $type=0.builtin.JSONObject.setObject),
       $type=0.builtin.JSONObject)),
      Local(
       Declaration(Type(Name(Map), Type(Name(String)), Type(Name(Object))),
        Name(map), Cast(Var(Name(obj), $type=0.builtin.Object),
        $type=0.builtin.Map<0.builtin.String,0.builtin.Object>),
       $type=0.builtin.Map<0.builtin.String,0.builtin.Object>)),
      Return(Var(Name(result), $type=0.builtin.JSONObject)))),
    ExprStmt(Call(Attr(Var(Name(result), $type=0.builtin.JSONObject),
       Name(__set__), $type=0.builtin.JSONObject.__set__), String("$class",
      $type=0.builtin.String), Var(Name(cls), $type=0.builtin.reflect.Class),
     $type=0.builtin.void)),
    Local(
     Declaration(Type(Name(List), Type(Name(reflect), Name(Field))),
      Name(fields), Call(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
        Name(getFields), $type=0.builtin.reflect.Class.getFields),
      $type=0.builtin.List<0.builtin.reflect.Field>),
     $type=0.builtin.List<0.builtin.reflect.Field>)),
    While(Call(Attr(Var(Name(idx), $type=0.builtin.int), Name(__lt__),
      $type=0.builtin.numeric.__lt__), Call(Attr(Var(Name(fields),
        $type=0.builtin.List<0.builtin.reflect.Field>), Name(size),
       $type=0.builtin.List.size), $type=0.builtin.int), $type=0.builtin.bool),
     Block(
      Local(
       Declaration(Type(Name(String)), Name(fieldName),
        Attr(Call(Attr(Var(Name(fields),
           $type=0.builtin.List<0.builtin.reflect.Field>), Name(__get__),
          $type=0.builtin.List.__get__), Var(Name(idx), $type=0.builtin.int),
         $type=0.builtin.reflect.Field), Name(name), $type=0.builtin.String),
       $type=0.builtin.String)),
      If(Call(Attr(Call(Attr(Var(Name(fieldName), $type=0.builtin.String),
           Name(startsWith), $type=0.builtin.String.startsWith), String("_",
          $type=0.builtin.String), $type=0.builtin.bool), Name(__not__),
        $type=0.builtin.bool.__not__), $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Var(Name(result), $type=0.builtin.JSONObject),
           Name(__set__), $type=0.builtin.JSONObject.__set__),
          Var(Name(fieldName), $type=0.builtin.String), Call(Var(Name(toJSON),
           $type=0.builtin.toJSON), Call(Attr(Var(Name(obj),
             $type=0.builtin.Object), Name(getField),
            $type=0.builtin.Object.getField), Var(Name(fieldName),
            $type=0.builtin.String), $type=0.builtin.Object),
           Call(Attr(Call(Attr(Var(Name(fields),
               $type=0.builtin.List<0.builtin.reflect.Field>), Name(__get__),
              $type=0.builtin.List.__get__), Var(Name(idx),
              $type=0.builtin.int), $type=0.builtin.reflect.Field),
             Name(getType), $type=0.builtin.reflect.Field.getType),
           $type=0.builtin.reflect.Class), $type=0.builtin.JSONObject),
         $type=0.builtin.void)))),
      Assign(Var(Name(idx), $type=0.builtin.int), Call(Attr(Var(Name(idx),
         $type=0.builtin.int), Name(__add__), $type=0.builtin.numeric.__add__),
        Number(1, $type=0.builtin.int), $type=0.builtin.int)))),
    Return(Var(Name(result), $type=0.builtin.JSONObject)))),

  Function(Annotation(Name(doc),
    String("deserialize json into provided result object. Skip over fields starting with underscore",
    $type=0.builtin.String)), Type(Name(Object)), Name(fromJSON),
   Param(Type(Name(reflect), Name(Class)), Name(cls),
   $type=0.builtin.reflect.Class),
   Param(Type(Name(Object)), Name(result), $type=0.builtin.Object),
   Param(Type(Name(JSONObject)), Name(json), $type=0.builtin.JSONObject),
   Block(
    If(Call(Attr(Call(Attr(Var(Name(json), $type=0.builtin.JSONObject),
         Name(__eq__), $type=0.builtin.Object.__eq__), Null(null,
        $type=0.builtin.Object), $type=0.builtin.bool), Name(__or__),
      $type=0.builtin.bool.__or__), Call(Attr(Var(Name(json),
        $type=0.builtin.JSONObject), Name(isNull),
       $type=0.builtin.JSONObject.isNull), $type=0.builtin.bool),
     $type=0.builtin.bool), Block(
      Return(Null(null, $type=0.builtin.Object)))),
    Local(
     Declaration(Type(Name(int)), Name(idx), Number(0, $type=0.builtin.int),
     $type=0.builtin.int)),
    If(Call(Attr(Var(Name(result), $type=0.builtin.Object), Name(__eq__),
      $type=0.builtin.Object.__eq__), Null(null, $type=0.builtin.Object),
     $type=0.builtin.bool), Block(
      If(Call(Attr(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
          Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("builtin.String",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Local(
         Declaration(Type(Name(String)), Name(s), Var(Name(json),
          $type=0.builtin.JSONObject), $type=0.builtin.String)),
        Return(Var(Name(s), $type=0.builtin.String)))),
      If(Call(Attr(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
          Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("builtin.float",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Local(
         Declaration(Type(Name(float)), Name(flt), Var(Name(json),
          $type=0.builtin.JSONObject), $type=0.builtin.float)),
        Return(Var(Name(flt), $type=0.builtin.float)))),
      If(Call(Attr(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
          Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("builtin.int",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Local(
         Declaration(Type(Name(int)), Name(i), Var(Name(json),
          $type=0.builtin.JSONObject), $type=0.builtin.int)),
        Return(Var(Name(i), $type=0.builtin.int)))),
      If(Call(Attr(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
          Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("builtin.bool",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Local(
         Declaration(Type(Name(bool)), Name(b), Var(Name(json),
          $type=0.builtin.JSONObject), $type=0.builtin.bool)),
        Return(Var(Name(b), $type=0.builtin.bool)))),
      Assign(Var(Name(result), $type=0.builtin.Object),
       Call(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
         Name(construct), $type=0.builtin.reflect.Class.construct), List(,
        $type=0.builtin.List<0.builtin.Object>), $type=0.builtin.Object)))),
    If(Call(Attr(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
        Name(name), $type=0.builtin.String), Name(__eq__),
      $type=0.builtin.Object.__eq__), String("builtin.List",
      $type=0.builtin.String), $type=0.builtin.bool), Block(
      Local(
       Declaration(Type(Name(List), Type(Name(Object))), Name(list),
        Cast(Var(Name(result), $type=0.builtin.Object),
        $type=0.builtin.List<0.builtin.Object>),
       $type=0.builtin.List<0.builtin.Object>)),
      While(Call(Attr(Var(Name(idx), $type=0.builtin.int), Name(__lt__),
        $type=0.builtin.numeric.__lt__), Call(Attr(Var(Name(json),
          $type=0.builtin.JSONObject), Name(size),
         $type=0.builtin.JSONObject.size), $type=0.builtin.int),
       $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Var(Name(list),
           $type=0.builtin.List<0.builtin.Object>), Name(add),
          $type=0.builtin.List.add), Call(Var(Name(fromJSON),
           $type=0.builtin.fromJSON), Call(Attr(Call(Attr(Var(Name(cls),
               $type=0.builtin.reflect.Class), Name(getParameters),
              $type=0.builtin.reflect.Class.getParameters),
             $type=0.builtin.List<0.builtin.reflect.Class>), Name(__get__),
            $type=0.builtin.List.__get__), Number(0, $type=0.builtin.int),
           $type=0.builtin.reflect.Class), Null(null, $type=0.builtin.Object),
           Call(Attr(Var(Name(json), $type=0.builtin.JSONObject),
             Name(getListItem), $type=0.builtin.JSONObject.getListItem),
            Var(Name(idx), $type=0.builtin.int), $type=0.builtin.JSONObject),
          $type=0.builtin.Object), $type=0.builtin.void)),
        Assign(Var(Name(idx), $type=0.builtin.int), Call(Attr(Var(Name(idx),
           $type=0.builtin.int), Name(__add__),
          $type=0.builtin.numeric.__add__), Number(1, $type=0.builtin.int),
         $type=0.builtin.int)))),
      Return(Var(Name(list), $type=0.builtin.List<0.builtin.Object>)))),
    Local(
     Declaration(Type(Name(List), Type(Name(reflect), Name(Field))),
      Name(fields), Call(Attr(Var(Name(cls), $type=0.builtin.reflect.Class),
        Name(getFields), $type=0.builtin.reflect.Class.getFields),
      $type=0.builtin.List<0.builtin.reflect.Field>),
     $type=0.builtin.List<0.builtin.reflect.Field>)),
    While(Call(Attr(Var(Name(idx), $type=0.builtin.int), Name(__lt__),
      $type=0.builtin.numeric.__lt__), Call(Attr(Var(Name(fields),
        $type=0.builtin.List<0.builtin.reflect.Field>), Name(size),
       $type=0.builtin.List.size), $type=0.builtin.int), $type=0.builtin.bool),
     Block(
      Local(
       Declaration(Type(Name(reflect), Name(Field)), Name(f),
        Call(Attr(Var(Name(fields),
          $type=0.builtin.List<0.builtin.reflect.Field>), Name(__get__),
         $type=0.builtin.List.__get__), Var(Name(idx), $type=0.builtin.int),
        $type=0.builtin.reflect.Field), $type=0.builtin.reflect.Field)),
      Assign(Var(Name(idx), $type=0.builtin.int), Call(Attr(Var(Name(idx),
         $type=0.builtin.int), Name(__add__), $type=0.builtin.numeric.__add__),
        Number(1, $type=0.builtin.int), $type=0.builtin.int)),
      If(Call(Attr(Attr(Var(Name(f), $type=0.builtin.reflect.Field),
          Name(name), $type=0.builtin.String), Name(startsWith),
        $type=0.builtin.String.startsWith), String("_",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Continue())),
      If(Call(Attr(Call(Attr(Call(Attr(Var(Name(json),
             $type=0.builtin.JSONObject), Name(__get__),
            $type=0.builtin.JSONObject.__get__), Attr(Var(Name(f),
             $type=0.builtin.reflect.Field), Name(name),
            $type=0.builtin.String), $type=0.builtin.JSONObject), Name(isNull),
          $type=0.builtin.JSONObject.isNull), $type=0.builtin.bool),
         Name(__not__), $type=0.builtin.bool.__not__), $type=0.builtin.bool),
       Block(
        ExprStmt(Call(Attr(Var(Name(result), $type=0.builtin.Object),
           Name(setField), $type=0.builtin.Object.setField), Attr(Var(Name(f),
           $type=0.builtin.reflect.Field), Name(name), $type=0.builtin.String),
          Call(Var(Name(fromJSON), $type=0.builtin.fromJSON),
           Call(Attr(Var(Name(f), $type=0.builtin.reflect.Field),
             Name(getType), $type=0.builtin.reflect.Field.getType),
           $type=0.builtin.reflect.Class), Null(null, $type=0.builtin.Object),
           Call(Attr(Var(Name(json), $type=0.builtin.JSONObject),
             Name(__get__), $type=0.builtin.JSONObject.__get__),
            Attr(Var(Name(f), $type=0.builtin.reflect.Field), Name(name),
            $type=0.builtin.String), $type=0.builtin.JSONObject),
          $type=0.builtin.Object), $type=0.builtin.void)))))),
    Return(Var(Name(result), $type=0.builtin.Object)))),

  Interface(Name(Resolver),

   Method(static=False, Type(Name(List), Type(Name(String))), Name(resolve),
    Param(Type(Name(String)), Name(serviceName), $type=0.builtin.String)),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_Resolver_ref), Attr(Attr(Var(Name(builtin_md),
      $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
     Name(builtin_Resolver_md), $type=0.builtin.reflect.Class),
   $type=0.builtin.reflect.Class)),

  Class(Name(ResponseHolder), Type(Name(HTTPHandler)),
   Field(static=False, Type(Name(HTTPResponse)), Name(response),
   $type=0.builtin.HTTPResponse),
   Field(static=False, Type(Name(String)), Name(failure), Null(null,
    $type=0.builtin.Object), $type=0.builtin.String),

   Method(static=False, Type(Name(void)), Name(onHTTPResponse),
    Param(Type(Name(HTTPRequest)), Name(request), $type=0.builtin.HTTPRequest),
    Param(Type(Name(HTTPResponse)), Name(response),
    $type=0.builtin.HTTPResponse),
    Block(
     Assign(Attr(Var(Name(self), $type=0.builtin.ResponseHolder),
       Name(response), $type=0.builtin.HTTPResponse), Var(Name(response),
      $type=0.builtin.HTTPResponse)))),

   Method(static=False, Type(Name(void)), Name(onHTTPError),
    Param(Type(Name(HTTPRequest)), Name(request), $type=0.builtin.HTTPRequest),
    Param(Type(Name(String)), Name(message), $type=0.builtin.String),
    Block(
     Assign(Var(Name(failure), $type=0.builtin.String), Var(Name(message),
      $type=0.builtin.String)))),

   Method(static=False, Type(Name(String)), Name(_getClass), Block(
     Return(String("builtin.ResponseHolder", $type=0.builtin.String)))),

   Method(static=False, Type(Name(Object)), Name(_getField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Block(
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("response",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.ResponseHolder),
         Name(response), $type=0.builtin.HTTPResponse)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("failure",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.ResponseHolder),
         Name(failure), $type=0.builtin.String)))),
     Return(Null(null, $type=0.builtin.Object)))),

   Method(static=False, Type(Name(void)), Name(_setField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
    Block(
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("response",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.ResponseHolder),
         Name(response), $type=0.builtin.HTTPResponse), Cast(Var(Name(value),
         $type=0.builtin.Object), $type=0.builtin.HTTPResponse)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("failure",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.ResponseHolder),
         Name(failure), $type=0.builtin.String), Cast(Var(Name(value),
         $type=0.builtin.Object), $type=0.builtin.String)))))),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_ResponseHolder_ref), Attr(Attr(Var(Name(builtin_md),
      $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
     Name(builtin_ResponseHolder_md), $type=0.builtin.reflect.Class),
   $type=0.builtin.reflect.Class)),

  Interface(Name(Service),

   Method(static=False, Type(Name(String)), Name(getName)),

   Method(static=False, Type(Name(ServiceInstance)), Name(getInstance)),

   Method(static=False, Type(Name(float)), Name(getTimeout)),

   Method(static=False, Type(Name(concurrent), Name(Future)), Name(rpc),
    Param(Type(Name(String)), Name(methodName), $type=0.builtin.String),
    Param(Type(Name(List), Type(Name(Object))), Name(args),
    $type=0.builtin.List<0.builtin.Object>),
    Block(
     Local(
      Declaration(Type(Name(behaviors), Name(RPC)), Name(rpc),
       Call(Type(Name(behaviors), Name(RPC)), Var(Name(self),
        $type=0.builtin.Service), Var(Name(methodName),
        $type=0.builtin.String), $type=0.builtin.behaviors.RPC),
      $type=0.builtin.behaviors.RPC)),
     Return(Call(Attr(Var(Name(rpc), $type=0.builtin.behaviors.RPC),
        Name(call), $type=0.builtin.behaviors.RPC.call), Var(Name(args),
       $type=0.builtin.List<0.builtin.Object>),
      $type=0.builtin.concurrent.Future)))),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_Service_ref), Attr(Attr(Var(Name(builtin_md),
      $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
     Name(builtin_Service_md), $type=0.builtin.reflect.Class),
   $type=0.builtin.reflect.Class)),

  Class(Name(BaseService), Type(Name(Service)),

   Method(static=False, Type(Name(String)), Name(getName), Block(
     Return(Null(null, $type=0.builtin.Object)))),

   Method(static=False, Type(Name(ServiceInstance)), Name(getInstance), Block(
     Return(Null(null, $type=0.builtin.Object)))),

   Method(static=False, Type(Name(float)), Name(getTimeout), Block(
     Return(Call(Attr(Number(1.0, $type=0.builtin.float), Name(__neg__),
       $type=0.builtin.numeric.__neg__), $type=0.builtin.float)))),

   Method(static=False, Type(Name(String)), Name(_getClass), Block(
     Return(String("builtin.BaseService", $type=0.builtin.String)))),

   Method(static=False, Type(Name(Object)), Name(_getField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Block(
     Return(Null(null, $type=0.builtin.Object)))),

   Method(static=False, Type(Name(void)), Name(_setField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
    Block()),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_BaseService_ref), Attr(Attr(Var(Name(builtin_md),
      $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
     Name(builtin_BaseService_md), $type=0.builtin.reflect.Class),
   $type=0.builtin.reflect.Class)),

  Class(Name(ServiceInstance),
   Field(static=False, Type(Name(String)), Name(serviceName),
   $type=0.builtin.String),
   Field(static=False, Type(Name(String)), Name(url), $type=0.builtin.String),
   Field(static=False, Type(Name(behaviors), Name(CircuitBreaker)),
    Name(breaker), $type=0.builtin.behaviors.CircuitBreaker),

   Constructor(Name(ServiceInstance),
    Param(Type(Name(String)), Name(serviceName), $type=0.builtin.String),
    Param(Type(Name(String)), Name(url), $type=0.builtin.String),
    Param(Type(Name(int)), Name(failureLimit), $type=0.builtin.int),
    Param(Type(Name(float)), Name(retestDelay), $type=0.builtin.float),
    Block(
     Assign(Attr(Var(Name(self), $type=0.builtin.ServiceInstance),
       Name(serviceName), $type=0.builtin.String), Var(Name(serviceName),
      $type=0.builtin.String)),
     Assign(Attr(Var(Name(self), $type=0.builtin.ServiceInstance), Name(url),
      $type=0.builtin.String), Var(Name(url), $type=0.builtin.String)),
     Assign(Attr(Var(Name(self), $type=0.builtin.ServiceInstance),
       Name(breaker), $type=0.builtin.behaviors.CircuitBreaker),
      Call(Type(Name(behaviors), Name(CircuitBreaker)),
       Call(Attr(Call(Attr(Call(Attr(Call(Attr(String("[",
               $type=0.builtin.String), Name(__add__),
              $type=0.builtin.String.__add__), Var(Name(serviceName),
              $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
            $type=0.builtin.String.__add__), String(" at ",
            $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
          $type=0.builtin.String.__add__), Var(Name(url),
          $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
        $type=0.builtin.String.__add__), String("]", $type=0.builtin.String),
       $type=0.builtin.String), Var(Name(failureLimit), $type=0.builtin.int),
       Var(Name(retestDelay), $type=0.builtin.float),
      $type=0.builtin.behaviors.CircuitBreaker)))),

   Method(static=False, Type(Name(bool)), Name(isActive), Block(
     Return(Attr(Attr(Var(Name(self), $type=0.builtin.ServiceInstance),
        Name(breaker), $type=0.builtin.behaviors.CircuitBreaker), Name(active),
      $type=0.builtin.bool)))),

   Method(static=False, Type(Name(String)), Name(getURL), Block(
     Return(Attr(Var(Name(self), $type=0.builtin.ServiceInstance), Name(url),
      $type=0.builtin.String)))),

   Method(static=False, Type(Name(void)), Name(succeed),
    Param(Type(Name(String)), Name(info), $type=0.builtin.String),
    Block(
     If(Call(Attr(Call(Attr(Var(Name(self), $type=0.builtin.ServiceInstance),
          Name(isActive), $type=0.builtin.ServiceInstance.isActive),
        $type=0.builtin.bool), Name(__not__), $type=0.builtin.bool.__not__),
      $type=0.builtin.bool), Block(
       ExprStmt(Call(Attr(Attr(Var(Name(Client), $type=0.builtin.Client),
           Name(logger), $type=0.builtin.Logger), Name(info),
         $type=0.builtin.Logger.info),
         Call(Attr(Call(Attr(Call(Attr(String("- CLOSE breaker for ",
               $type=0.builtin.String), Name(__add__),
              $type=0.builtin.String.__add__), Attr(Var(Name(self),
               $type=0.builtin.ServiceInstance), Name(serviceName),
              $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
            $type=0.builtin.String.__add__), String(" at ",
            $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
          $type=0.builtin.String.__add__), Attr(Var(Name(self),
           $type=0.builtin.ServiceInstance), Name(url),
          $type=0.builtin.String), $type=0.builtin.String),
        $type=0.builtin.void)))),
     ExprStmt(Call(Attr(Attr(Var(Name(self), $type=0.builtin.ServiceInstance),
         Name(breaker), $type=0.builtin.behaviors.CircuitBreaker),
        Name(succeed), $type=0.builtin.behaviors.CircuitBreaker.succeed),
      $type=0.builtin.void)))),

   Method(static=False, Type(Name(void)), Name(fail),
    Param(Type(Name(String)), Name(info), $type=0.builtin.String),
    Block(
     If(Call(Attr(Call(Attr(Var(Name(self), $type=0.builtin.ServiceInstance),
          Name(isActive), $type=0.builtin.ServiceInstance.isActive),
        $type=0.builtin.bool), Name(__not__), $type=0.builtin.bool.__not__),
      $type=0.builtin.bool), Block(
       ExprStmt(Call(Attr(Attr(Var(Name(Client), $type=0.builtin.Client),
           Name(logger), $type=0.builtin.Logger), Name(warn),
         $type=0.builtin.Logger.warn),
         Call(Attr(Call(Attr(Call(Attr(String("- OPEN breaker for ",
               $type=0.builtin.String), Name(__add__),
              $type=0.builtin.String.__add__), Attr(Var(Name(self),
               $type=0.builtin.ServiceInstance), Name(serviceName),
              $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
            $type=0.builtin.String.__add__), String(" at ",
            $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
          $type=0.builtin.String.__add__), Attr(Var(Name(self),
           $type=0.builtin.ServiceInstance), Name(url),
          $type=0.builtin.String), $type=0.builtin.String),
        $type=0.builtin.void)))),
     ExprStmt(Call(Attr(Attr(Var(Name(self), $type=0.builtin.ServiceInstance),
         Name(breaker), $type=0.builtin.behaviors.CircuitBreaker), Name(fail),
       $type=0.builtin.behaviors.CircuitBreaker.fail),
      $type=0.builtin.void)))),

   Method(static=False, Type(Name(String)), Name(_getClass), Block(
     Return(String("builtin.ServiceInstance", $type=0.builtin.String)))),

   Method(static=False, Type(Name(Object)), Name(_getField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Block(
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("serviceName",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.ServiceInstance),
         Name(serviceName), $type=0.builtin.String)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("url", $type=0.builtin.String),
      $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.ServiceInstance), Name(url),
        $type=0.builtin.String)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("breaker",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.ServiceInstance),
         Name(breaker), $type=0.builtin.behaviors.CircuitBreaker)))),
     Return(Null(null, $type=0.builtin.Object)))),

   Method(static=False, Type(Name(void)), Name(_setField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
    Block(
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("serviceName",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.ServiceInstance),
         Name(serviceName), $type=0.builtin.String), Cast(Var(Name(value),
         $type=0.builtin.Object), $type=0.builtin.String)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("url", $type=0.builtin.String),
      $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.ServiceInstance), Name(url),
        $type=0.builtin.String), Cast(Var(Name(value), $type=0.builtin.Object),
        $type=0.builtin.String)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("breaker",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.ServiceInstance),
         Name(breaker), $type=0.builtin.behaviors.CircuitBreaker),
        Cast(Var(Name(value), $type=0.builtin.Object),
        $type=0.builtin.behaviors.CircuitBreaker)))))),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_ServiceInstance_ref), Attr(Attr(Var(Name(builtin_md),
      $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
     Name(builtin_ServiceInstance_md), $type=0.builtin.reflect.Class),
   $type=0.builtin.reflect.Class)),

  Class(Annotation(Name(doc),
    String("DegenerateResolver assumes that the serviceName is an URL.",
    $type=0.builtin.String)), Name(DegenerateResolver), Type(Name(Resolver)),

   Method(static=False, Type(Name(List), Type(Name(String))), Name(resolve),
    Param(Type(Name(String)), Name(serviceName), $type=0.builtin.String),
    Block(
     Return(List(Var(Name(serviceName), $type=0.builtin.String),
      $type=0.builtin.List<0.builtin.String>)))),

   Method(static=False, Type(Name(String)), Name(_getClass), Block(
     Return(String("builtin.DegenerateResolver", $type=0.builtin.String)))),

   Method(static=False, Type(Name(Object)), Name(_getField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Block(
     Return(Null(null, $type=0.builtin.Object)))),

   Method(static=False, Type(Name(void)), Name(_setField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
    Block()),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_DegenerateResolver_ref), Attr(Attr(Var(Name(builtin_md),
      $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
     Name(builtin_DegenerateResolver_md), $type=0.builtin.reflect.Class),
   $type=0.builtin.reflect.Class)),

  Class(Name(Client),
   Field(static=True, Type(Name(Logger)), Name(logger),
    Call(Type(Name(Logger)), String("quark.client", $type=0.builtin.String),
    $type=0.builtin.Logger), $type=0.builtin.Logger),
   Field(static=False, Type(Name(Resolver)), Name(resolver),
   $type=0.builtin.Resolver),
   Field(static=False, Type(Name(String)), Name(serviceName),
   $type=0.builtin.String),
   Field(static=False, Type(Name(float)), Name(_timeout),
   $type=0.builtin.float),
   Field(static=False, Type(Name(int)), Name(_failureLimit), Number(3,
    $type=0.builtin.int), $type=0.builtin.int),
   Field(static=False, Type(Name(float)), Name(_retestDelay), Number(30.0,
    $type=0.builtin.float), $type=0.builtin.float),
   Field(static=False, Type(Name(concurrent), Name(Lock)), Name(mutex),
   $type=0.builtin.concurrent.Lock),
   Field(static=False, Type(Name(Map), Type(Name(String)),
     Type(Name(ServiceInstance))), Name(instanceMap),
   $type=0.builtin.Map<0.builtin.String,0.builtin.ServiceInstance>),
   Field(static=False, Type(Name(int)), Name(counter), $type=0.builtin.int),

   Constructor(Name(Client),
    Param(Type(Name(String)), Name(serviceName), $type=0.builtin.String),
    Block(
     Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(serviceName),
      $type=0.builtin.String), Var(Name(serviceName), $type=0.builtin.String)),
     Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(resolver),
      $type=0.builtin.Resolver), Call(Type(Name(DegenerateResolver)),
      $type=0.builtin.DegenerateResolver)),
     Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(_timeout),
      $type=0.builtin.float), Number(0.0, $type=0.builtin.float)),
     Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(mutex),
      $type=0.builtin.concurrent.Lock), Call(Type(Name(concurrent),
        Name(Lock)), $type=0.builtin.concurrent.Lock)),
     Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(instanceMap),
      $type=0.builtin.Map<0.builtin.String,0.builtin.ServiceInstance>), Map(,
      $type=0.builtin.Map<0.builtin.String,0.builtin.ServiceInstance>)),
     Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(counter),
      $type=0.builtin.int), Number(0, $type=0.builtin.int)),
     Local(
      Declaration(Type(Name(int)), Name(failureLimit),
       Cast(Call(Attr(Var(Name(self), $type=0.builtin.Client), Name(getField),
         $type=0.builtin.Object.getField), String("failureLimit",
         $type=0.builtin.String), $type=0.builtin.Object),
       $type=0.builtin.int), $type=0.builtin.int)),
     If(Call(Attr(Var(Name(failureLimit), $type=0.builtin.int), Name(__ne__),
       $type=0.builtin.Object.__ne__), Null(null, $type=0.builtin.Object),
      $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.Client),
         Name(_failureLimit), $type=0.builtin.int), Var(Name(failureLimit),
        $type=0.builtin.int)))),
     ExprStmt(Call(Attr(Var(Name(logger), $type=0.builtin.Logger), Name(info),
       $type=0.builtin.Logger.info),
       Call(Attr(Call(Attr(Call(Attr(Var(Name(self), $type=0.builtin.Client),
             Name(toString), $type=0.builtin.Object.toString),
           $type=0.builtin.String), Name(__add__),
          $type=0.builtin.String.__add__), String(" failureLimit ",
          $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
        $type=0.builtin.String.__add__), Call(Attr(Attr(Var(Name(self),
           $type=0.builtin.Client), Name(_failureLimit), $type=0.builtin.int),
          Name(toString), $type=0.builtin.int.toString),
        $type=0.builtin.String), $type=0.builtin.String),
      $type=0.builtin.void)),
     Local(
      Declaration(Type(Name(float)), Name(retestDelay),
       Cast(Call(Attr(Var(Name(self), $type=0.builtin.Client), Name(getField),
         $type=0.builtin.Object.getField), String("retestDelay",
         $type=0.builtin.String), $type=0.builtin.Object),
       $type=0.builtin.float), $type=0.builtin.float)),
     If(Call(Attr(Var(Name(retestDelay), $type=0.builtin.float), Name(__ne__),
       $type=0.builtin.Object.__ne__), Null(null, $type=0.builtin.Object),
      $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(_retestDelay),
        $type=0.builtin.float), Var(Name(retestDelay),
        $type=0.builtin.float)))),
     ExprStmt(Call(Attr(Var(Name(logger), $type=0.builtin.Logger), Name(info),
       $type=0.builtin.Logger.info),
       Call(Attr(Call(Attr(Call(Attr(Var(Name(self), $type=0.builtin.Client),
             Name(toString), $type=0.builtin.Object.toString),
           $type=0.builtin.String), Name(__add__),
          $type=0.builtin.String.__add__), String(" retestDelay ",
          $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
        $type=0.builtin.String.__add__), Call(Attr(Attr(Var(Name(self),
           $type=0.builtin.Client), Name(_retestDelay), $type=0.builtin.float),
          Name(toString), $type=0.builtin.float.toString),
        $type=0.builtin.String), $type=0.builtin.String),
      $type=0.builtin.void)))),

   Method(static=False, Type(Name(void)), Name(setResolver),
    Param(Type(Name(Resolver)), Name(resolver), $type=0.builtin.Resolver),
    Block(
     Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(resolver),
      $type=0.builtin.Resolver), Var(Name(resolver),
      $type=0.builtin.Resolver)))),

   Method(static=False, Type(Name(ServiceInstance)), Name(getInstance), Block(
     Local(
      Declaration(Type(Name(List), Type(Name(String))), Name(urls),
       Call(Attr(Attr(Var(Name(self), $type=0.builtin.Client), Name(resolver),
         $type=0.builtin.Resolver), Name(resolve),
        $type=0.builtin.Resolver.resolve), Attr(Var(Name(self),
         $type=0.builtin.Client), Name(serviceName), $type=0.builtin.String),
       $type=0.builtin.List<0.builtin.String>),
      $type=0.builtin.List<0.builtin.String>)),
     If(Call(Attr(Call(Attr(Var(Name(urls),
          $type=0.builtin.List<0.builtin.String>), Name(size),
         $type=0.builtin.List.size), $type=0.builtin.int), Name(__le__),
       $type=0.builtin.numeric.__le__), Number(0, $type=0.builtin.int),
      $type=0.builtin.bool), Block(
       Return(Null(null, $type=0.builtin.Object)))),
     ExprStmt(Call(Attr(Var(Name(urls),
        $type=0.builtin.List<0.builtin.String>), Name(sort),
       $type=0.builtin.List.sort), $type=0.builtin.void)),
     ExprStmt(Call(Attr(Attr(Var(Name(self), $type=0.builtin.Client),
         Name(mutex), $type=0.builtin.concurrent.Lock), Name(acquire),
       $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
     Local(
      Declaration(Type(Name(ServiceInstance)), Name(result), Null(null,
       $type=0.builtin.Object), $type=0.builtin.ServiceInstance)),
     Local(
      Declaration(Type(Name(int)), Name(next), Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.Client), Name(counter), $type=0.builtin.int),
         Name(__mod__), $type=0.builtin.integral.__mod__),
        Call(Attr(Var(Name(urls), $type=0.builtin.List<0.builtin.String>),
          Name(size), $type=0.builtin.List.size), $type=0.builtin.int),
       $type=0.builtin.int), $type=0.builtin.int)),
     Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(counter),
      $type=0.builtin.int), Call(Attr(Attr(Var(Name(self),
         $type=0.builtin.Client), Name(counter), $type=0.builtin.int),
        Name(__add__), $type=0.builtin.numeric.__add__), Number(1,
       $type=0.builtin.int), $type=0.builtin.int)),
     Local(
      Declaration(Type(Name(int)), Name(idx), Var(Name(next),
       $type=0.builtin.int), $type=0.builtin.int)),
     While(Bool(true, $type=0.builtin.bool), Block(
       Local(
        Declaration(Type(Name(String)), Name(url), Call(Attr(Var(Name(urls),
           $type=0.builtin.List<0.builtin.String>), Name(__get__),
          $type=0.builtin.List.__get__), Var(Name(idx), $type=0.builtin.int),
         $type=0.builtin.String), $type=0.builtin.String)),
       Local(
        Declaration(Type(Name(ServiceInstance)), Name(instance),
         Call(Attr(Attr(Var(Name(self), $type=0.builtin.Client),
            Name(instanceMap),
           $type=0.builtin.Map<0.builtin.String,0.builtin.ServiceInstance>),
           Name(__get__), $type=0.builtin.Map.__get__), Var(Name(url),
          $type=0.builtin.String), $type=0.builtin.ServiceInstance),
        $type=0.builtin.ServiceInstance)),
       If(Call(Attr(Var(Name(instance), $type=0.builtin.ServiceInstance),
          Name(__eq__), $type=0.builtin.Object.__eq__), Null(null,
         $type=0.builtin.Object), $type=0.builtin.bool), Block(
         Assign(Var(Name(instance), $type=0.builtin.ServiceInstance),
          Call(Type(Name(ServiceInstance)), Attr(Var(Name(self),
            $type=0.builtin.Client), Name(serviceName),
           $type=0.builtin.String), Var(Name(url), $type=0.builtin.String),
           Var(Name(_failureLimit), $type=0.builtin.int),
           Var(Name(_retestDelay), $type=0.builtin.float),
          $type=0.builtin.ServiceInstance)),
         ExprStmt(Call(Attr(Attr(Var(Name(self), $type=0.builtin.Client),
             Name(instanceMap),
            $type=0.builtin.Map<0.builtin.String,0.builtin.ServiceInstance>),
            Name(__set__), $type=0.builtin.Map.__set__), Var(Name(url),
           $type=0.builtin.String), Var(Name(instance),
           $type=0.builtin.ServiceInstance), $type=0.builtin.void)))),
       If(Call(Attr(Var(Name(instance), $type=0.builtin.ServiceInstance),
          Name(isActive), $type=0.builtin.ServiceInstance.isActive),
        $type=0.builtin.bool), Block(
         ExprStmt(Call(Attr(Attr(Var(Name(Client), $type=0.builtin.Client),
             Name(logger), $type=0.builtin.Logger), Name(info),
           $type=0.builtin.Logger.info),
           Call(Attr(Call(Attr(Call(Attr(Call(Attr(Call(Attr(String("- ",
                     $type=0.builtin.String), Name(__add__),
                    $type=0.builtin.String.__add__), Attr(Var(Name(self),
                     $type=0.builtin.Client), Name(serviceName),
                    $type=0.builtin.String), $type=0.builtin.String),
                   Name(__add__), $type=0.builtin.String.__add__),
                  String(" using instance ", $type=0.builtin.String),
                 $type=0.builtin.String), Name(__add__),
                $type=0.builtin.String.__add__),
                Call(Attr(Call(Attr(Var(Name(idx), $type=0.builtin.int),
                    Name(__add__), $type=0.builtin.numeric.__add__), Number(1,
                   $type=0.builtin.int), $type=0.builtin.int), Name(toString),
                 $type=0.builtin.int.toString), $type=0.builtin.String),
               $type=0.builtin.String), Name(__add__),
              $type=0.builtin.String.__add__), String(": ",
              $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
            $type=0.builtin.String.__add__), Var(Name(url),
            $type=0.builtin.String), $type=0.builtin.String),
          $type=0.builtin.void)),
         Assign(Var(Name(result), $type=0.builtin.ServiceInstance),
          Var(Name(instance), $type=0.builtin.ServiceInstance)),
         Break())),
       Assign(Var(Name(idx), $type=0.builtin.int),
        Call(Attr(Call(Attr(Var(Name(idx), $type=0.builtin.int), Name(__add__),
           $type=0.builtin.numeric.__add__), Number(1, $type=0.builtin.int),
          $type=0.builtin.int), Name(__mod__),
         $type=0.builtin.integral.__mod__), Call(Attr(Var(Name(urls),
           $type=0.builtin.List<0.builtin.String>), Name(size),
          $type=0.builtin.List.size), $type=0.builtin.int),
        $type=0.builtin.int)),
       If(Call(Attr(Var(Name(idx), $type=0.builtin.int), Name(__eq__),
         $type=0.builtin.Object.__eq__), Var(Name(next), $type=0.builtin.int),
        $type=0.builtin.bool), Block(
         ExprStmt(Call(Attr(Attr(Var(Name(Client), $type=0.builtin.Client),
             Name(logger), $type=0.builtin.Logger), Name(info),
           $type=0.builtin.Logger.info), Call(Attr(Call(Attr(String("- ",
               $type=0.builtin.String), Name(__add__),
              $type=0.builtin.String.__add__), Attr(Var(Name(self),
               $type=0.builtin.Client), Name(serviceName),
              $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
            $type=0.builtin.String.__add__),
            String(": no live instances! giving up.", $type=0.builtin.String),
           $type=0.builtin.String), $type=0.builtin.void)),
         Break())))),
     ExprStmt(Call(Attr(Attr(Var(Name(self), $type=0.builtin.Client),
         Name(mutex), $type=0.builtin.concurrent.Lock), Name(release),
       $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)),
     Return(Var(Name(result), $type=0.builtin.ServiceInstance)))),

   Method(static=False, Type(Name(String)), Name(getName), Block(
     Return(Attr(Var(Name(self), $type=0.builtin.Client), Name(serviceName),
      $type=0.builtin.String)))),

   Method(static=False, Type(Name(float)), Name(getTimeout), Block(
     Return(Attr(Var(Name(self), $type=0.builtin.Client), Name(_timeout),
      $type=0.builtin.float)))),

   Method(static=False, Type(Name(void)), Name(setTimeout),
    Param(Type(Name(float)), Name(timeout), $type=0.builtin.float),
    Block(
     Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(_timeout),
      $type=0.builtin.float), Var(Name(timeout), $type=0.builtin.float)))),

   Method(static=False, Type(Name(String)), Name(_getClass), Block(
     Return(String("builtin.Client", $type=0.builtin.String)))),

   Method(static=False, Type(Name(Object)), Name(_getField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Block(
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("logger",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.Client), Name(logger),
        $type=0.builtin.Logger)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("resolver",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.Client), Name(resolver),
        $type=0.builtin.Resolver)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("serviceName",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.Client), Name(serviceName),
        $type=0.builtin.String)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("_timeout",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.Client), Name(_timeout),
        $type=0.builtin.float)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("_failureLimit",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.Client),
         Name(_failureLimit), $type=0.builtin.int)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("_retestDelay",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.Client), Name(_retestDelay),
        $type=0.builtin.float)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("mutex", $type=0.builtin.String),
      $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.Client), Name(mutex),
        $type=0.builtin.concurrent.Lock)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("instanceMap",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.Client), Name(instanceMap),
        $type=0.builtin.Map<0.builtin.String,0.builtin.ServiceInstance>)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("counter",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.Client), Name(counter),
        $type=0.builtin.int)))),
     Return(Null(null, $type=0.builtin.Object)))),

   Method(static=False, Type(Name(void)), Name(_setField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
    Block(
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("logger",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(logger),
        $type=0.builtin.Logger), Cast(Var(Name(value), $type=0.builtin.Object),
        $type=0.builtin.Logger)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("resolver",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(resolver),
        $type=0.builtin.Resolver), Cast(Var(Name(value),
         $type=0.builtin.Object), $type=0.builtin.Resolver)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("serviceName",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(serviceName),
        $type=0.builtin.String), Cast(Var(Name(value), $type=0.builtin.Object),
        $type=0.builtin.String)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("_timeout",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(_timeout),
        $type=0.builtin.float), Cast(Var(Name(value), $type=0.builtin.Object),
        $type=0.builtin.float)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("_failureLimit",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.Client),
         Name(_failureLimit), $type=0.builtin.int), Cast(Var(Name(value),
         $type=0.builtin.Object), $type=0.builtin.int)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("_retestDelay",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(_retestDelay),
        $type=0.builtin.float), Cast(Var(Name(value), $type=0.builtin.Object),
        $type=0.builtin.float)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("mutex", $type=0.builtin.String),
      $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(mutex),
        $type=0.builtin.concurrent.Lock), Cast(Var(Name(value),
         $type=0.builtin.Object), $type=0.builtin.concurrent.Lock)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("instanceMap",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(instanceMap),
        $type=0.builtin.Map<0.builtin.String,0.builtin.ServiceInstance>),
        Cast(Var(Name(value), $type=0.builtin.Object),
        $type=0.builtin.Map<0.builtin.String,0.builtin.ServiceInstance>)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("counter",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.Client), Name(counter),
        $type=0.builtin.int), Cast(Var(Name(value), $type=0.builtin.Object),
        $type=0.builtin.int)))))),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_Map_builtin_String_builtin_ServiceInstance__ref),
    Attr(Attr(Var(Name(builtin_md), $type=1.builtin_md), Name(Root),
     $type=1.builtin_md.Root),
     Name(builtin_Map_builtin_String_builtin_ServiceInstance__md),
    $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_Client_ref), Attr(Attr(Var(Name(builtin_md),
      $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
     Name(builtin_Client_md), $type=0.builtin.reflect.Class),
   $type=0.builtin.reflect.Class)),

  Class(Name(ServerResponder), Type(Name(concurrent), Name(FutureListener)),
   Field(static=False, Type(Name(HTTPRequest)), Name(request),
   $type=0.builtin.HTTPRequest),
   Field(static=False, Type(Name(HTTPResponse)), Name(response),
   $type=0.builtin.HTTPResponse),

   Constructor(Name(ServerResponder),
    Param(Type(Name(HTTPRequest)), Name(request), $type=0.builtin.HTTPRequest),
    Param(Type(Name(HTTPResponse)), Name(response),
    $type=0.builtin.HTTPResponse),
    Block(
     Assign(Attr(Var(Name(self), $type=0.builtin.ServerResponder),
       Name(request), $type=0.builtin.HTTPRequest), Var(Name(request),
      $type=0.builtin.HTTPRequest)),
     Assign(Attr(Var(Name(self), $type=0.builtin.ServerResponder),
       Name(response), $type=0.builtin.HTTPResponse), Var(Name(response),
      $type=0.builtin.HTTPResponse)))),

   Method(static=False, Type(Name(void)), Name(onFuture),
    Param(Type(Name(concurrent), Name(Future)), Name(result),
    $type=0.builtin.concurrent.Future),
    Block(
     Local(
      Declaration(Type(Name(String)), Name(error), Call(Attr(Var(Name(result),
         $type=0.builtin.concurrent.Future), Name(getError),
        $type=0.builtin.concurrent.Future.getError), $type=0.builtin.String),
      $type=0.builtin.String)),
     If(Call(Attr(Var(Name(error), $type=0.builtin.String), Name(__ne__),
       $type=0.builtin.Object.__ne__), Null(null, $type=0.builtin.Object),
      $type=0.builtin.bool), Block(
       ExprStmt(Call(Attr(Var(Name(response), $type=0.builtin.HTTPResponse),
          Name(setCode), $type=0.builtin.HTTPResponse.setCode), Number(404,
         $type=0.builtin.int), $type=0.builtin.void))), Block(
       ExprStmt(Call(Attr(Attr(Var(Name(self),
           $type=0.builtin.ServerResponder), Name(response),
          $type=0.builtin.HTTPResponse), Name(setBody),
         $type=0.builtin.HTTPResponse.setBody),
         Call(Attr(Call(Var(Name(toJSON), $type=0.builtin.toJSON),
            Var(Name(result), $type=0.builtin.concurrent.Future), Null(null,
            $type=0.builtin.Object), $type=0.builtin.JSONObject),
           Name(toString), $type=0.builtin.JSONObject.toString),
         $type=0.builtin.String), $type=0.builtin.void)),
       ExprStmt(Call(Attr(Attr(Var(Name(self),
           $type=0.builtin.ServerResponder), Name(response),
          $type=0.builtin.HTTPResponse), Name(setCode),
         $type=0.builtin.HTTPResponse.setCode), Number(200,
         $type=0.builtin.int), $type=0.builtin.void)))),
     ExprStmt(Call(Attr(Call(Attr(Attr(Var(Name(concurrent),
           $type=0.builtin.concurrent), Name(Context),
          $type=0.builtin.concurrent.Context), Name(runtime),
         $type=0.builtin.concurrent.Context.runtime), $type=0.builtin.Runtime),
        Name(respond), $type=0.builtin.Runtime.respond), Var(Name(request),
       $type=0.builtin.HTTPRequest), Var(Name(response),
       $type=0.builtin.HTTPResponse), $type=0.builtin.void)))),

   Method(static=False, Type(Name(String)), Name(_getClass), Block(
     Return(String("builtin.ServerResponder", $type=0.builtin.String)))),

   Method(static=False, Type(Name(Object)), Name(_getField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Block(
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("request",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.ServerResponder),
         Name(request), $type=0.builtin.HTTPRequest)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("response",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.ServerResponder),
         Name(response), $type=0.builtin.HTTPResponse)))),
     Return(Null(null, $type=0.builtin.Object)))),

   Method(static=False, Type(Name(void)), Name(_setField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
    Block(
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("request",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.ServerResponder),
         Name(request), $type=0.builtin.HTTPRequest), Cast(Var(Name(value),
         $type=0.builtin.Object), $type=0.builtin.HTTPRequest)))),
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("response",
       $type=0.builtin.String), $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.ServerResponder),
         Name(response), $type=0.builtin.HTTPResponse), Cast(Var(Name(value),
         $type=0.builtin.Object), $type=0.builtin.HTTPResponse)))))),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_ServerResponder_ref), Attr(Attr(Var(Name(builtin_md),
      $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
     Name(builtin_ServerResponder_md), $type=0.builtin.reflect.Class),
   $type=0.builtin.reflect.Class)),

  Class(Name(Server), TypeParam(Name(T)), Type(Name(HTTPServlet)),
   Field(static=False, Type(Name(T)), Name(impl), $type=0.builtin.Server.T),

   Constructor(Name(Server),
    Param(Type(Name(T)), Name(impl), $type=0.builtin.Server.T),
    Block(
     Assign(Attr(Var(Name(self), $type=0.builtin.Server<0.builtin.Server.T>),
       Name(impl), $type=0.builtin.Server.T), Var(Name(impl),
      $type=0.builtin.Server.T)))),

   Method(static=False, Type(Name(void)), Name(onHTTPRequest),
    Param(Type(Name(HTTPRequest)), Name(request), $type=0.builtin.HTTPRequest),
    Param(Type(Name(HTTPResponse)), Name(response),
    $type=0.builtin.HTTPResponse),
    Block(
     Local(
      Declaration(Type(Name(String)), Name(body), Call(Attr(Var(Name(request),
         $type=0.builtin.HTTPRequest), Name(getBody),
        $type=0.builtin.HTTPRequest.getBody), $type=0.builtin.String),
      $type=0.builtin.String)),
     Local(
      Declaration(Type(Name(JSONObject)), Name(envelope),
       Call(Attr(Var(Name(body), $type=0.builtin.String), Name(parseJSON),
        $type=0.builtin.String.parseJSON), $type=0.builtin.JSONObject),
      $type=0.builtin.JSONObject)),
     If(Call(Attr(Call(Attr(Call(Attr(Var(Name(envelope),
            $type=0.builtin.JSONObject), Name(__get__),
           $type=0.builtin.JSONObject.__get__), String("$method",
           $type=0.builtin.String), $type=0.builtin.JSONObject), Name(__eq__),
         $type=0.builtin.Object.__eq__), Call(Attr(Var(Name(envelope),
           $type=0.builtin.JSONObject), Name(undefined),
          $type=0.builtin.JSONObject.undefined), $type=0.builtin.JSONObject),
        $type=0.builtin.bool), Name(__or__), $type=0.builtin.bool.__or__),
       Call(Attr(Call(Attr(Var(Name(envelope), $type=0.builtin.JSONObject),
           Name(__get__), $type=0.builtin.JSONObject.__get__), String("rpc",
          $type=0.builtin.String), $type=0.builtin.JSONObject), Name(__eq__),
        $type=0.builtin.Object.__eq__), Call(Attr(Var(Name(envelope),
          $type=0.builtin.JSONObject), Name(undefined),
         $type=0.builtin.JSONObject.undefined), $type=0.builtin.JSONObject),
       $type=0.builtin.bool), $type=0.builtin.bool), Block(
       ExprStmt(Call(Attr(Var(Name(response), $type=0.builtin.HTTPResponse),
          Name(setBody), $type=0.builtin.HTTPResponse.setBody),
         Call(Attr(Call(Attr(String("Failed to understand request.\n\n",
             $type=0.builtin.String), Name(__add__),
            $type=0.builtin.String.__add__), Var(Name(body),
            $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
          $type=0.builtin.String.__add__), String("\n",
          $type=0.builtin.String), $type=0.builtin.String),
        $type=0.builtin.void)),
       ExprStmt(Call(Attr(Var(Name(response), $type=0.builtin.HTTPResponse),
          Name(setCode), $type=0.builtin.HTTPResponse.setCode), Number(400,
         $type=0.builtin.int), $type=0.builtin.void)),
       ExprStmt(Call(Attr(Call(Attr(Attr(Var(Name(concurrent),
             $type=0.builtin.concurrent), Name(Context),
            $type=0.builtin.concurrent.Context), Name(runtime),
           $type=0.builtin.concurrent.Context.runtime),
          $type=0.builtin.Runtime), Name(respond),
         $type=0.builtin.Runtime.respond), Var(Name(request),
         $type=0.builtin.HTTPRequest), Var(Name(response),
         $type=0.builtin.HTTPResponse), $type=0.builtin.void))), Block(
       Local(
        Declaration(Type(Name(String)), Name(methodName),
         Call(Attr(Var(Name(envelope), $type=0.builtin.JSONObject),
           Name(__get__), $type=0.builtin.JSONObject.__get__),
          String("$method", $type=0.builtin.String),
         $type=0.builtin.JSONObject), $type=0.builtin.String)),
       Local(
        Declaration(Type(Name(JSONObject)), Name(json),
         Call(Attr(Var(Name(envelope), $type=0.builtin.JSONObject),
           Name(__get__), $type=0.builtin.JSONObject.__get__), String("rpc",
          $type=0.builtin.String), $type=0.builtin.JSONObject),
        $type=0.builtin.JSONObject)),
       Local(
        Declaration(Type(Name(reflect), Name(Method)), Name(method),
         Call(Attr(Call(Attr(Call(Attr(Call(Attr(Var(Name(self),
                 $type=0.builtin.Server<0.builtin.Server.T>), Name(getClass),
                $type=0.builtin.Object.getClass),
               $type=0.builtin.reflect.Class), Name(getField),
              $type=0.builtin.reflect.Class.getField), String("impl",
              $type=0.builtin.String), $type=0.builtin.reflect.Field),
             Name(getType), $type=0.builtin.reflect.Field.getType),
           $type=0.builtin.reflect.Class), Name(getMethod),
          $type=0.builtin.reflect.Class.getMethod), Var(Name(methodName),
          $type=0.builtin.String), $type=0.builtin.reflect.Method),
        $type=0.builtin.reflect.Method)),
       Local(
        Declaration(Type(Name(List), Type(Name(reflect), Name(Class))),
         Name(params), Call(Attr(Var(Name(method),
           $type=0.builtin.reflect.Method), Name(getParameters),
          $type=0.builtin.reflect.Method.getParameters),
         $type=0.builtin.List<0.builtin.reflect.Class>),
        $type=0.builtin.List<0.builtin.reflect.Class>)),
       Local(
        Declaration(Type(Name(List), Type(Name(Object))), Name(args), List(,
         $type=0.builtin.List<0.builtin.Object>),
        $type=0.builtin.List<0.builtin.Object>)),
       Local(
        Declaration(Type(Name(int)), Name(idx), Number(0, $type=0.builtin.int),
        $type=0.builtin.int)),
       While(Call(Attr(Var(Name(idx), $type=0.builtin.int), Name(__lt__),
         $type=0.builtin.numeric.__lt__), Call(Attr(Var(Name(params),
           $type=0.builtin.List<0.builtin.reflect.Class>), Name(size),
          $type=0.builtin.List.size), $type=0.builtin.int),
        $type=0.builtin.bool), Block(
         ExprStmt(Call(Attr(Var(Name(args),
            $type=0.builtin.List<0.builtin.Object>), Name(add),
           $type=0.builtin.List.add), Call(Var(Name(fromJSON),
            $type=0.builtin.fromJSON), Call(Attr(Var(Name(params),
              $type=0.builtin.List<0.builtin.reflect.Class>), Name(__get__),
             $type=0.builtin.List.__get__), Var(Name(idx),
             $type=0.builtin.int), $type=0.builtin.reflect.Class), Null(null,
            $type=0.builtin.Object), Call(Attr(Var(Name(json),
              $type=0.builtin.JSONObject), Name(getListItem),
             $type=0.builtin.JSONObject.getListItem), Var(Name(idx),
             $type=0.builtin.int), $type=0.builtin.JSONObject),
           $type=0.builtin.Object), $type=0.builtin.void)),
         Assign(Var(Name(idx), $type=0.builtin.int), Call(Attr(Var(Name(idx),
            $type=0.builtin.int), Name(__add__),
           $type=0.builtin.numeric.__add__), Number(1, $type=0.builtin.int),
          $type=0.builtin.int)))),
       Local(
        Declaration(Type(Name(concurrent), Name(Future)), Name(result),
         Cast(Call(Attr(Var(Name(method), $type=0.builtin.reflect.Method),
            Name(invoke), $type=0.builtin.reflect.Method.invoke),
           Var(Name(impl), $type=0.builtin.Server.T), Var(Name(args),
           $type=0.builtin.List<0.builtin.Object>), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Future),
        $type=0.builtin.concurrent.Future)),
       ExprStmt(Call(Attr(Var(Name(result), $type=0.builtin.concurrent.Future),
          Name(onFinished), $type=0.builtin.concurrent.Future.onFinished),
         Call(Type(Name(ServerResponder)), Var(Name(request),
          $type=0.builtin.HTTPRequest), Var(Name(response),
          $type=0.builtin.HTTPResponse), $type=0.builtin.ServerResponder),
        $type=0.builtin.void)))))),

   Method(static=False, Type(Name(void)), Name(onServletError),
    Param(Type(Name(String)), Name(url), $type=0.builtin.String),
    Param(Type(Name(String)), Name(message), $type=0.builtin.String),
    Block(
     ExprStmt(Call(Attr(Call(Attr(Attr(Var(Name(concurrent),
           $type=0.builtin.concurrent), Name(Context),
          $type=0.builtin.concurrent.Context), Name(runtime),
         $type=0.builtin.concurrent.Context.runtime), $type=0.builtin.Runtime),
        Name(fail), $type=0.builtin.Runtime.fail),
       Call(Attr(Call(Attr(Call(Attr(String("RPC Server failed to register ",
             $type=0.builtin.String), Name(__add__),
            $type=0.builtin.String.__add__), Var(Name(url),
            $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
          $type=0.builtin.String.__add__), String(" due to: ",
          $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
        $type=0.builtin.String.__add__), Var(Name(message),
        $type=0.builtin.String), $type=0.builtin.String),
      $type=0.builtin.void)))),

   Method(static=False, Type(Name(String)), Name(_getClass), Block(
     Return(String("builtin.Server<builtin.Object>",
      $type=0.builtin.String)))),

   Method(static=False, Type(Name(Object)), Name(_getField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Block(
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("impl", $type=0.builtin.String),
      $type=0.builtin.bool), Block(
       Return(Attr(Var(Name(self), $type=0.builtin.Server<0.builtin.Server.T>),
         Name(impl), $type=0.builtin.Server.T)))),
     Return(Null(null, $type=0.builtin.Object)))),

   Method(static=False, Type(Name(void)), Name(_setField),
    Param(Type(Name(String)), Name(name), $type=0.builtin.String),
    Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
    Block(
     If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
       $type=0.builtin.Object.__eq__), String("impl", $type=0.builtin.String),
      $type=0.builtin.bool), Block(
       Assign(Attr(Var(Name(self), $type=0.builtin.Server<0.builtin.Server.T>),
         Name(impl), $type=0.builtin.Server.T), Cast(Var(Name(value),
         $type=0.builtin.Object), $type=0.builtin.Server.T)))))),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_List_builtin_reflect_Class__ref),
    Attr(Attr(Var(Name(builtin_md), $type=1.builtin_md), Name(Root),
     $type=1.builtin_md.Root), Name(builtin_List_builtin_reflect_Class__md),
    $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class),
   Field(static=True, Type(Name(reflect), Name(Class)),
    Name(builtin_Server_builtin_Object__ref), Attr(Attr(Var(Name(builtin_md),
      $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
     Name(builtin_Server_builtin_Object__md), $type=0.builtin.reflect.Class),
   $type=0.builtin.reflect.Class)),

  Package(Name(reflect),

   Class(Name(Class),
    Field(static=True, Type(Name(Map), Type(Name(String)), Type(Name(Class))),
     Name(classes), Map(,
     $type=0.builtin.Map<0.builtin.String,0.builtin.reflect.Class>),
    $type=0.builtin.Map<0.builtin.String,0.builtin.reflect.Class>),
    Field(static=True, Type(Name(Class)), Name(VOID), Call(Type(Name(Class)),
      String("builtin.void", $type=0.builtin.String),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class),
    Field(static=True, Type(Name(Class)), Name(BOOL), Call(Type(Name(Class)),
      String("builtin.bool", $type=0.builtin.String),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class),
    Field(static=True, Type(Name(Class)), Name(INT), Call(Type(Name(Class)),
      String("builtin.int", $type=0.builtin.String),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class),
    Field(static=True, Type(Name(Class)), Name(LONG), Call(Type(Name(Class)),
      String("builtin.long", $type=0.builtin.String),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class),
    Field(static=True, Type(Name(Class)), Name(STRING), Call(Type(Name(Class)),
      String("builtin.String", $type=0.builtin.String),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class),

    Method(static=True, Type(Name(Class)), Name(get),
     Param(Type(Name(String)), Name(id), $type=0.builtin.String),
     Block(
      If(Call(Attr(Call(Attr(Var(Name(classes),
           $type=0.builtin.Map<0.builtin.String,0.builtin.reflect.Class>),
           Name(contains), $type=0.builtin.Map.contains), Var(Name(id),
          $type=0.builtin.String), $type=0.builtin.bool), Name(__not__),
        $type=0.builtin.bool.__not__), $type=0.builtin.bool), Block(
        ExprStmt(Call(Var(Name(print), $type=0.builtin.print),
          Call(Attr(Call(Attr(Call(Attr(String("Cannot find ",
                $type=0.builtin.String), Name(__add__),
               $type=0.builtin.String.__add__), Var(Name(id),
               $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
             $type=0.builtin.String.__add__), String(" in ",
             $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
           $type=0.builtin.String.__add__),
           Call(Attr(Call(Attr(Var(Name(classes),
               $type=0.builtin.Map<0.builtin.String,0.builtin.reflect.Class>),
               Name(keys), $type=0.builtin.Map.keys),
             $type=0.builtin.List<0.builtin.String>), Name(toString),
            $type=0.builtin.Object.toString), $type=0.builtin.String),
          $type=0.builtin.String), $type=0.builtin.void)))),
      Return(Call(Attr(Var(Name(classes),
         $type=0.builtin.Map<0.builtin.String,0.builtin.reflect.Class>),
         Name(__get__), $type=0.builtin.Map.__get__), Var(Name(id),
        $type=0.builtin.String), $type=0.builtin.reflect.Class)))),
    Field(static=False, Type(Name(String)), Name(id), $type=0.builtin.String),
    Field(static=False, Type(Name(String)), Name(name),
    $type=0.builtin.String),
    Field(static=False, Type(Name(List), Type(Name(String))), Name(parameters),
     List(, $type=0.builtin.List<0.builtin.String>),
    $type=0.builtin.List<0.builtin.String>),
    Field(static=False, Type(Name(List), Type(Name(Field))), Name(fields),
     List(, $type=0.builtin.List<0.builtin.reflect.Field>),
    $type=0.builtin.List<0.builtin.reflect.Field>),
    Field(static=False, Type(Name(List), Type(Name(Method))), Name(methods),
     List(, $type=0.builtin.List<0.builtin.reflect.Method>),
    $type=0.builtin.List<0.builtin.reflect.Method>),

    Constructor(Name(Class),
     Param(Type(Name(String)), Name(id), $type=0.builtin.String),
     Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(id),
       $type=0.builtin.String), Var(Name(id), $type=0.builtin.String)),
      ExprStmt(Call(Attr(Var(Name(classes),
         $type=0.builtin.Map<0.builtin.String,0.builtin.reflect.Class>),
         Name(__set__), $type=0.builtin.Map.__set__), Var(Name(id),
        $type=0.builtin.String), Var(Name(self),
        $type=0.builtin.reflect.Class), $type=0.builtin.void)),
      Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(name),
       $type=0.builtin.String), Var(Name(id), $type=0.builtin.String)))),

    Method(static=False, Type(Name(String)), Name(getId), Block(
      Return(Var(Name(id), $type=0.builtin.String)))),

    Method(static=False, Type(Name(String)), Name(getName), Block(
      Return(Var(Name(name), $type=0.builtin.String)))),

    Method(static=False, Type(Name(List), Type(Name(Class))),
     Name(getParameters), Block(
      Local(
       Declaration(Type(Name(List), Type(Name(Class))), Name(result), List(,
        $type=0.builtin.List<0.builtin.reflect.Class>),
       $type=0.builtin.List<0.builtin.reflect.Class>)),
      Local(
       Declaration(Type(Name(int)), Name(idx), Number(0, $type=0.builtin.int),
       $type=0.builtin.int)),
      While(Call(Attr(Var(Name(idx), $type=0.builtin.int), Name(__lt__),
        $type=0.builtin.numeric.__lt__), Call(Attr(Var(Name(parameters),
          $type=0.builtin.List<0.builtin.String>), Name(size),
         $type=0.builtin.List.size), $type=0.builtin.int),
       $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Var(Name(result),
           $type=0.builtin.List<0.builtin.reflect.Class>), Name(add),
          $type=0.builtin.List.add), Call(Attr(Var(Name(Class),
            $type=0.builtin.reflect.Class), Name(get),
           $type=0.builtin.reflect.Class.get), Call(Attr(Var(Name(parameters),
             $type=0.builtin.List<0.builtin.String>), Name(__get__),
            $type=0.builtin.List.__get__), Var(Name(idx), $type=0.builtin.int),
           $type=0.builtin.String), $type=0.builtin.reflect.Class),
         $type=0.builtin.void)),
        Assign(Var(Name(idx), $type=0.builtin.int), Call(Attr(Var(Name(idx),
           $type=0.builtin.int), Name(__add__),
          $type=0.builtin.numeric.__add__), Number(1, $type=0.builtin.int),
         $type=0.builtin.int)))),
      Return(Var(Name(result),
       $type=0.builtin.List<0.builtin.reflect.Class>)))),

    Method(static=False, Type(Name(Object)), Name(construct),
     Param(Type(Name(List), Type(Name(Object))), Name(args),
     $type=0.builtin.List<0.builtin.Object>),
     Block(
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(List), Type(Name(Field))), Name(getFields),
     Block(
      Return(Var(Name(fields),
       $type=0.builtin.List<0.builtin.reflect.Field>)))),

    Method(static=False, Type(Name(Field)), Name(getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      Local(
       Declaration(Type(Name(int)), Name(idx), Number(0, $type=0.builtin.int),
       $type=0.builtin.int)),
      While(Call(Attr(Var(Name(idx), $type=0.builtin.int), Name(__lt__),
        $type=0.builtin.numeric.__lt__), Call(Attr(Var(Name(fields),
          $type=0.builtin.List<0.builtin.reflect.Field>), Name(size),
         $type=0.builtin.List.size), $type=0.builtin.int),
       $type=0.builtin.bool), Block(
        If(Call(Attr(Attr(Call(Attr(Var(Name(fields),
              $type=0.builtin.List<0.builtin.reflect.Field>), Name(__get__),
             $type=0.builtin.List.__get__), Var(Name(idx),
             $type=0.builtin.int), $type=0.builtin.reflect.Field), Name(name),
           $type=0.builtin.String), Name(__eq__),
          $type=0.builtin.Object.__eq__), Var(Name(name),
          $type=0.builtin.String), $type=0.builtin.bool), Block(
          Return(Call(Attr(Var(Name(fields),
             $type=0.builtin.List<0.builtin.reflect.Field>), Name(__get__),
            $type=0.builtin.List.__get__), Var(Name(idx), $type=0.builtin.int),
           $type=0.builtin.reflect.Field)))),
        Assign(Var(Name(idx), $type=0.builtin.int), Call(Attr(Var(Name(idx),
           $type=0.builtin.int), Name(__add__),
          $type=0.builtin.numeric.__add__), Number(1, $type=0.builtin.int),
         $type=0.builtin.int)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(List), Type(Name(Method))),
     Name(getMethods), Block(
      Return(Var(Name(methods),
       $type=0.builtin.List<0.builtin.reflect.Method>)))),

    Method(static=False, Type(Name(Method)), Name(getMethod),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      Local(
       Declaration(Type(Name(int)), Name(idx), Number(0, $type=0.builtin.int),
       $type=0.builtin.int)),
      While(Call(Attr(Var(Name(idx), $type=0.builtin.int), Name(__lt__),
        $type=0.builtin.numeric.__lt__), Call(Attr(Var(Name(methods),
          $type=0.builtin.List<0.builtin.reflect.Method>), Name(size),
         $type=0.builtin.List.size), $type=0.builtin.int),
       $type=0.builtin.bool), Block(
        If(Call(Attr(Attr(Call(Attr(Var(Name(methods),
              $type=0.builtin.List<0.builtin.reflect.Method>), Name(__get__),
             $type=0.builtin.List.__get__), Var(Name(idx),
             $type=0.builtin.int), $type=0.builtin.reflect.Method), Name(name),
           $type=0.builtin.String), Name(__eq__),
          $type=0.builtin.Object.__eq__), Var(Name(name),
          $type=0.builtin.String), $type=0.builtin.bool), Block(
          Return(Call(Attr(Var(Name(methods),
             $type=0.builtin.List<0.builtin.reflect.Method>), Name(__get__),
            $type=0.builtin.List.__get__), Var(Name(idx), $type=0.builtin.int),
           $type=0.builtin.reflect.Method)))),
        Assign(Var(Name(idx), $type=0.builtin.int), Call(Attr(Var(Name(idx),
           $type=0.builtin.int), Name(__add__),
          $type=0.builtin.numeric.__add__), Number(1, $type=0.builtin.int),
         $type=0.builtin.int)))),
      Return(Null(null, $type=0.builtin.Object)))),

    MethodMacro(Type(Name(JSONObject)), Name(toJSON),
     Call(Attr(Call(Type(Name(JSONObject)), $type=0.builtin.JSONObject),
       Name(setString), $type=0.builtin.JSONObject.setString),
      Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(id),
      $type=0.builtin.String), $type=0.builtin.JSONObject)),

    MethodMacro(Type(Name(JSONObject)), Name(__to_JSONObject),
     Call(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(toJSON),
      $type=0.builtin.reflect.Class.toJSON), $type=0.builtin.JSONObject)),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.reflect.Class", $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("classes",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Class),
          Name(classes),
         $type=0.builtin.Map<0.builtin.String,0.builtin.reflect.Class>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("VOID", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(VOID),
         $type=0.builtin.reflect.Class)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("BOOL", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(BOOL),
         $type=0.builtin.reflect.Class)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("INT", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(INT),
         $type=0.builtin.reflect.Class)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("LONG", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(LONG),
         $type=0.builtin.reflect.Class)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("STRING",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Class),
          Name(STRING), $type=0.builtin.reflect.Class)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("id", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(id),
         $type=0.builtin.String)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("name", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(name),
         $type=0.builtin.String)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("parameters",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Class),
          Name(parameters), $type=0.builtin.List<0.builtin.String>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("fields",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Class),
          Name(fields), $type=0.builtin.List<0.builtin.reflect.Field>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("methods",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Class),
          Name(methods), $type=0.builtin.List<0.builtin.reflect.Method>)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("classes",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class),
          Name(classes),
         $type=0.builtin.Map<0.builtin.String,0.builtin.reflect.Class>),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.Map<0.builtin.String,0.builtin.reflect.Class>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("VOID", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(VOID),
         $type=0.builtin.reflect.Class), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.reflect.Class)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("BOOL", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(BOOL),
         $type=0.builtin.reflect.Class), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.reflect.Class)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("INT", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(INT),
         $type=0.builtin.reflect.Class), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.reflect.Class)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("LONG", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(LONG),
         $type=0.builtin.reflect.Class), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.reflect.Class)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("STRING",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class),
          Name(STRING), $type=0.builtin.reflect.Class), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.reflect.Class)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("id", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(id),
         $type=0.builtin.String), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.String)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("name", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class), Name(name),
         $type=0.builtin.String), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.String)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("parameters",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class),
          Name(parameters), $type=0.builtin.List<0.builtin.String>),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.List<0.builtin.String>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("fields",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class),
          Name(fields), $type=0.builtin.List<0.builtin.reflect.Field>),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.List<0.builtin.reflect.Field>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("methods",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Class),
          Name(methods), $type=0.builtin.List<0.builtin.reflect.Method>),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.List<0.builtin.reflect.Method>))))))),

   Class(Name(Field),
    Field(static=False, Type(Name(String)), Name(type),
    $type=0.builtin.String),
    Field(static=False, Type(Name(String)), Name(name),
    $type=0.builtin.String),

    Constructor(Name(Field),
     Param(Type(Name(String)), Name(type), $type=0.builtin.String),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Field), Name(type),
       $type=0.builtin.String), Var(Name(type), $type=0.builtin.String)),
      Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Field), Name(name),
       $type=0.builtin.String), Var(Name(name), $type=0.builtin.String)))),

    Method(static=False, Type(Name(Class)), Name(getType), Block(
      Return(Call(Attr(Var(Name(Class), $type=0.builtin.reflect.Class),
         Name(get), $type=0.builtin.reflect.Class.get), Var(Name(type),
        $type=0.builtin.String), $type=0.builtin.reflect.Class)))),

    Method(static=False, Type(Name(String)), Name(getName), Block(
      Return(Var(Name(name), $type=0.builtin.String)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.reflect.Field", $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("type", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Field), Name(type),
         $type=0.builtin.String)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("name", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.reflect.Field), Name(name),
         $type=0.builtin.String)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("type", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Field), Name(type),
         $type=0.builtin.String), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.String)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("name", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Field), Name(name),
         $type=0.builtin.String), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.String))))))),

   Class(Name(Method),
    Field(static=False, Type(Name(String)), Name(type),
    $type=0.builtin.String),
    Field(static=False, Type(Name(String)), Name(name),
    $type=0.builtin.String),
    Field(static=False, Type(Name(List), Type(Name(String))), Name(parameters),
    $type=0.builtin.List<0.builtin.String>),

    Constructor(Name(Method),
     Param(Type(Name(String)), Name(type), $type=0.builtin.String),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(List), Type(Name(String))), Name(parameters),
     $type=0.builtin.List<0.builtin.String>),
     Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Method), Name(type),
       $type=0.builtin.String), Var(Name(type), $type=0.builtin.String)),
      Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Method), Name(name),
       $type=0.builtin.String), Var(Name(name), $type=0.builtin.String)),
      Assign(Attr(Var(Name(self), $type=0.builtin.reflect.Method),
        Name(parameters), $type=0.builtin.List<0.builtin.String>),
       Var(Name(parameters), $type=0.builtin.List<0.builtin.String>)))),

    Method(static=False, Type(Name(Class)), Name(getType), Block(
      Return(Call(Attr(Var(Name(Class), $type=0.builtin.reflect.Class),
         Name(get), $type=0.builtin.reflect.Class.get), Var(Name(type),
        $type=0.builtin.String), $type=0.builtin.reflect.Class)))),

    Method(static=False, Type(Name(String)), Name(getName), Block(
      Return(Var(Name(name), $type=0.builtin.String)))),

    Method(static=False, Type(Name(List), Type(Name(Class))),
     Name(getParameters), Block(
      Local(
       Declaration(Type(Name(List), Type(Name(Class))), Name(result), List(,
        $type=0.builtin.List<0.builtin.reflect.Class>),
       $type=0.builtin.List<0.builtin.reflect.Class>)),
      Local(
       Declaration(Type(Name(int)), Name(idx), Number(0, $type=0.builtin.int),
       $type=0.builtin.int)),
      While(Call(Attr(Var(Name(idx), $type=0.builtin.int), Name(__lt__),
        $type=0.builtin.numeric.__lt__), Call(Attr(Var(Name(parameters),
          $type=0.builtin.List<0.builtin.String>), Name(size),
         $type=0.builtin.List.size), $type=0.builtin.int),
       $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Var(Name(result),
           $type=0.builtin.List<0.builtin.reflect.Class>), Name(add),
          $type=0.builtin.List.add), Call(Attr(Var(Name(Class),
            $type=0.builtin.reflect.Class), Name(get),
           $type=0.builtin.reflect.Class.get), Call(Attr(Var(Name(parameters),
             $type=0.builtin.List<0.builtin.String>), Name(__get__),
            $type=0.builtin.List.__get__), Var(Name(idx), $type=0.builtin.int),
           $type=0.builtin.String), $type=0.builtin.reflect.Class),
         $type=0.builtin.void)),
        Assign(Var(Name(idx), $type=0.builtin.int), Call(Attr(Var(Name(idx),
           $type=0.builtin.int), Name(__add__),
          $type=0.builtin.numeric.__add__), Number(1, $type=0.builtin.int),
         $type=0.builtin.int)))),
      Return(Var(Name(result),
       $type=0.builtin.List<0.builtin.reflect.Class>)))),

    Method(static=False, Type(Name(Object)), Name(invoke),
     Param(Type(Name(Object)), Name(object), $type=0.builtin.Object),
     Param(Type(Name(List), Type(Name(Object))), Name(args),
     $type=0.builtin.List<0.builtin.Object>)))),

  Package(Name(behaviors),

   Class(Name(RPC),
    Field(static=False, Type(Name(Service)), Name(service),
    $type=0.builtin.Service),
    Field(static=False, Type(Name(reflect), Name(Class)), Name(returned),
    $type=0.builtin.reflect.Class),
    Field(static=False, Type(Name(float)), Name(timeout),
    $type=0.builtin.float),
    Field(static=False, Type(Name(String)), Name(methodName),
    $type=0.builtin.String),
    Field(static=False, Type(Name(ServiceInstance)), Name(instance),
    $type=0.builtin.ServiceInstance),

    Constructor(Name(RPC),
     Param(Type(Name(Service)), Name(service), $type=0.builtin.Service),
     Param(Type(Name(String)), Name(methodName), $type=0.builtin.String),
     Block(
      Local(
       Declaration(Type(Name(float)), Name(timeout),
        Cast(Call(Attr(Var(Name(service), $type=0.builtin.Service),
           Name(getField), $type=0.builtin.Object.getField), String("timeout",
          $type=0.builtin.String), $type=0.builtin.Object),
        $type=0.builtin.float), $type=0.builtin.float)),
      If(Call(Attr(Call(Attr(Var(Name(timeout), $type=0.builtin.float),
           Name(__eq__), $type=0.builtin.Object.__eq__), Null(null,
          $type=0.builtin.Object), $type=0.builtin.bool), Name(__or__),
        $type=0.builtin.bool.__or__), Call(Attr(Var(Name(timeout),
          $type=0.builtin.float), Name(__le__),
         $type=0.builtin.numeric.__le__), Number(0.0, $type=0.builtin.float),
        $type=0.builtin.bool), $type=0.builtin.bool), Block(
        Assign(Var(Name(timeout), $type=0.builtin.float), Number(10.0,
         $type=0.builtin.float)))),
      Local(
       Declaration(Type(Name(float)), Name(override),
        Call(Attr(Var(Name(service), $type=0.builtin.Service),
          Name(getTimeout), $type=0.builtin.Service.getTimeout),
        $type=0.builtin.float), $type=0.builtin.float)),
      If(Call(Attr(Call(Attr(Var(Name(override), $type=0.builtin.float),
           Name(__ne__), $type=0.builtin.Object.__ne__), Null(null,
          $type=0.builtin.Object), $type=0.builtin.bool), Name(__and__),
        $type=0.builtin.bool.__and__), Call(Attr(Var(Name(override),
          $type=0.builtin.float), Name(__gt__),
         $type=0.builtin.numeric.__gt__), Number(0.0, $type=0.builtin.float),
        $type=0.builtin.bool), $type=0.builtin.bool), Block(
        Assign(Var(Name(timeout), $type=0.builtin.float), Var(Name(override),
         $type=0.builtin.float)))),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
        Name(returned), $type=0.builtin.reflect.Class),
       Call(Attr(Call(Attr(Call(Attr(Var(Name(service),
             $type=0.builtin.Service), Name(getClass),
            $type=0.builtin.Object.getClass), $type=0.builtin.reflect.Class),
           Name(getMethod), $type=0.builtin.reflect.Class.getMethod),
          Var(Name(methodName), $type=0.builtin.String),
         $type=0.builtin.reflect.Method), Name(getType),
        $type=0.builtin.reflect.Method.getType),
       $type=0.builtin.reflect.Class)),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
        Name(timeout), $type=0.builtin.float), Var(Name(timeout),
       $type=0.builtin.float)),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
        Name(methodName), $type=0.builtin.String), Var(Name(methodName),
       $type=0.builtin.String)),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
        Name(service), $type=0.builtin.Service), Var(Name(service),
       $type=0.builtin.Service)))),

    Method(static=False, Type(Name(concurrent), Name(Future)), Name(call),
     Param(Type(Name(List), Type(Name(Object))), Name(args),
     $type=0.builtin.List<0.builtin.Object>),
     Block(
      Local(
       Declaration(Type(Name(concurrent), Name(Future)), Name(result),
        Null(null, $type=0.builtin.Object),
       $type=0.builtin.concurrent.Future)),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
        Name(instance), $type=0.builtin.ServiceInstance),
       Call(Attr(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(service), $type=0.builtin.Service), Name(getInstance),
        $type=0.builtin.Service.getInstance),
       $type=0.builtin.ServiceInstance)),
      If(Call(Attr(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(instance), $type=0.builtin.ServiceInstance), Name(__ne__),
        $type=0.builtin.Object.__ne__), Null(null, $type=0.builtin.Object),
       $type=0.builtin.bool), Block(
        Local(
         Declaration(Type(Name(HTTPRequest)), Name(request),
          Call(Type(Name(HTTPRequest)), Call(Attr(Attr(Var(Name(self),
              $type=0.builtin.behaviors.RPC), Name(instance),
             $type=0.builtin.ServiceInstance), Name(getURL),
            $type=0.builtin.ServiceInstance.getURL), $type=0.builtin.String),
          $type=0.builtin.HTTPRequest), $type=0.builtin.HTTPRequest)),
        Local(
         Declaration(Type(Name(JSONObject)), Name(json), Call(Var(Name(toJSON),
           $type=0.builtin.toJSON), Var(Name(args),
           $type=0.builtin.List<0.builtin.Object>), Null(null,
           $type=0.builtin.Object), $type=0.builtin.JSONObject),
         $type=0.builtin.JSONObject)),
        Local(
         Declaration(Type(Name(JSONObject)), Name(envelope),
          Call(Type(Name(JSONObject)), $type=0.builtin.JSONObject),
         $type=0.builtin.JSONObject)),
        ExprStmt(Call(Attr(Var(Name(envelope), $type=0.builtin.JSONObject),
           Name(__set__), $type=0.builtin.JSONObject.__set__),
          String("$method", $type=0.builtin.String), Attr(Var(Name(self),
           $type=0.builtin.behaviors.RPC), Name(methodName),
          $type=0.builtin.String), $type=0.builtin.void)),
        ExprStmt(Call(Attr(Var(Name(envelope), $type=0.builtin.JSONObject),
           Name(__set__), $type=0.builtin.JSONObject.__set__),
          String("$context", $type=0.builtin.String), String("TBD",
          $type=0.builtin.String), $type=0.builtin.void)),
        ExprStmt(Call(Attr(Var(Name(envelope), $type=0.builtin.JSONObject),
           Name(__set__), $type=0.builtin.JSONObject.__set__), String("rpc",
          $type=0.builtin.String), Var(Name(json), $type=0.builtin.JSONObject),
         $type=0.builtin.void)),
        Local(
         Declaration(Type(Name(String)), Name(body),
          Call(Attr(Var(Name(envelope), $type=0.builtin.JSONObject),
            Name(toString), $type=0.builtin.JSONObject.toString),
          $type=0.builtin.String), $type=0.builtin.String)),
        ExprStmt(Call(Attr(Var(Name(request), $type=0.builtin.HTTPRequest),
           Name(setBody), $type=0.builtin.HTTPRequest.setBody), Var(Name(body),
          $type=0.builtin.String), $type=0.builtin.void)),
        ExprStmt(Call(Attr(Var(Name(request), $type=0.builtin.HTTPRequest),
           Name(setMethod), $type=0.builtin.HTTPRequest.setMethod),
          String("POST", $type=0.builtin.String), $type=0.builtin.void)),
        Local(
         Declaration(Type(Name(RPCRequest)), Name(rpc),
          Call(Type(Name(RPCRequest)), Var(Name(args),
           $type=0.builtin.List<0.builtin.Object>), Var(Name(self),
           $type=0.builtin.behaviors.RPC),
          $type=0.builtin.behaviors.RPCRequest),
         $type=0.builtin.behaviors.RPCRequest)),
        Assign(Var(Name(result), $type=0.builtin.concurrent.Future),
         Call(Attr(Var(Name(rpc), $type=0.builtin.behaviors.RPCRequest),
           Name(call), $type=0.builtin.behaviors.RPCRequest.call),
          Var(Name(request), $type=0.builtin.HTTPRequest),
         $type=0.builtin.concurrent.Future))), Block(
        Assign(Var(Name(result), $type=0.builtin.concurrent.Future),
         Cast(Call(Attr(Var(Name(returned), $type=0.builtin.reflect.Class),
            Name(construct), $type=0.builtin.reflect.Class.construct), List(,
           $type=0.builtin.List<0.builtin.Object>), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Future)),
        ExprStmt(Call(Attr(Var(Name(result),
           $type=0.builtin.concurrent.Future), Name(finish),
          $type=0.builtin.concurrent.Future.finish),
          String("all services are down", $type=0.builtin.String),
         $type=0.builtin.void)))),
      ExprStmt(Call(Attr(Attr(Var(Name(concurrent),
          $type=0.builtin.concurrent), Name(FutureWait),
         $type=0.builtin.concurrent.FutureWait), Name(waitFor),
        $type=0.builtin.concurrent.FutureWait.waitFor), Var(Name(result),
        $type=0.builtin.concurrent.Future), Number(10.0,
        $type=0.builtin.float), $type=0.builtin.concurrent.Future)),
      Return(Var(Name(result), $type=0.builtin.concurrent.Future)))),

    Method(static=False, Type(Name(void)), Name(succeed),
     Param(Type(Name(String)), Name(info), $type=0.builtin.String),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(instance), $type=0.builtin.ServiceInstance), Name(succeed),
        $type=0.builtin.ServiceInstance.succeed), Var(Name(info),
        $type=0.builtin.String), $type=0.builtin.void)))),

    Method(static=False, Type(Name(void)), Name(fail),
     Param(Type(Name(String)), Name(info), $type=0.builtin.String),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(instance), $type=0.builtin.ServiceInstance), Name(fail),
        $type=0.builtin.ServiceInstance.fail), Var(Name(info),
        $type=0.builtin.String), $type=0.builtin.void)))),

    Method(static=False, Type(Name(String)), Name(toString), Block(

      Return(Call(Attr(Call(Attr(Call(Attr(Call(Attr(Call(Attr(Call(Attr(String("RPC ",
                   $type=0.builtin.String), Name(__add__),
                  $type=0.builtin.String.__add__),
                  Call(Attr(Attr(Var(Name(self),
                     $type=0.builtin.behaviors.RPC), Name(service),
                    $type=0.builtin.Service), Name(getName),
                   $type=0.builtin.Service.getName), $type=0.builtin.String),
                 $type=0.builtin.String), Name(__add__),
                $type=0.builtin.String.__add__), String(" at ",
                $type=0.builtin.String), $type=0.builtin.String),
               Name(__add__), $type=0.builtin.String.__add__),
              Call(Attr(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
                 Name(instance), $type=0.builtin.ServiceInstance),
                Name(getURL), $type=0.builtin.ServiceInstance.getURL),
              $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
            $type=0.builtin.String.__add__), String(": ",
            $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
          $type=0.builtin.String.__add__), Attr(Var(Name(self),
           $type=0.builtin.behaviors.RPC), Name(methodName),
          $type=0.builtin.String), $type=0.builtin.String), Name(__add__),
        $type=0.builtin.String.__add__), String("(...)",
        $type=0.builtin.String), $type=0.builtin.String)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.behaviors.RPC", $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("service",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(service), $type=0.builtin.Service)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("returned",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(returned), $type=0.builtin.reflect.Class)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("timeout",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(timeout), $type=0.builtin.float)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("methodName",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(methodName), $type=0.builtin.String)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("instance",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(instance), $type=0.builtin.ServiceInstance)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("service",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(service), $type=0.builtin.Service), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.Service)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("returned",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(returned), $type=0.builtin.reflect.Class), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.reflect.Class)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("timeout",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(timeout), $type=0.builtin.float), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.float)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("methodName",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(methodName), $type=0.builtin.String), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.String)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("instance",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPC),
          Name(instance), $type=0.builtin.ServiceInstance),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.ServiceInstance)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_behaviors_RPC_ref), Attr(Attr(Var(Name(builtin_md),
       $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
      Name(builtin_behaviors_RPC_md), $type=0.builtin.reflect.Class),
    $type=0.builtin.reflect.Class)),

   Class(Name(RPCRequest), Type(Name(HTTPHandler)), Type(Name(concurrent),
     Name(TimeoutListener)),
    Field(static=False, Type(Name(RPC)), Name(rpc),
    $type=0.builtin.behaviors.RPC),
    Field(static=False, Type(Name(concurrent), Name(Future)), Name(retval),
    $type=0.builtin.concurrent.Future),
    Field(static=False, Type(Name(List), Type(Name(Object))), Name(args),
    $type=0.builtin.List<0.builtin.Object>),
    Field(static=False, Type(Name(concurrent), Name(Timeout)), Name(timeout),
    $type=0.builtin.concurrent.Timeout),

    Constructor(Name(RPCRequest),
     Param(Type(Name(List), Type(Name(Object))), Name(args),
     $type=0.builtin.List<0.builtin.Object>),
     Param(Type(Name(RPC)), Name(rpc), $type=0.builtin.behaviors.RPC),
     Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
        Name(retval), $type=0.builtin.concurrent.Future),
       Cast(Call(Attr(Attr(Var(Name(rpc), $type=0.builtin.behaviors.RPC),
           Name(returned), $type=0.builtin.reflect.Class), Name(construct),
         $type=0.builtin.reflect.Class.construct), List(,
         $type=0.builtin.List<0.builtin.Object>), $type=0.builtin.Object),
       $type=0.builtin.concurrent.Future)),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
        Name(args), $type=0.builtin.List<0.builtin.Object>), Var(Name(args),
       $type=0.builtin.List<0.builtin.Object>)),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
        Name(timeout), $type=0.builtin.concurrent.Timeout),
       Call(Type(Name(concurrent), Name(Timeout)), Attr(Var(Name(rpc),
         $type=0.builtin.behaviors.RPC), Name(timeout), $type=0.builtin.float),
       $type=0.builtin.concurrent.Timeout)),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
        Name(rpc), $type=0.builtin.behaviors.RPC), Var(Name(rpc),
       $type=0.builtin.behaviors.RPC)))),

    Method(static=False, Type(Name(concurrent), Name(Future)), Name(call),
     Param(Type(Name(HTTPRequest)), Name(request),
     $type=0.builtin.HTTPRequest),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.RPCRequest), Name(timeout),
         $type=0.builtin.concurrent.Timeout), Name(start),
        $type=0.builtin.concurrent.Timeout.start), Var(Name(self),
        $type=0.builtin.behaviors.RPCRequest), $type=0.builtin.void)),
      ExprStmt(Call(Attr(Call(Attr(Attr(Var(Name(concurrent),
            $type=0.builtin.concurrent), Name(Context),
           $type=0.builtin.concurrent.Context), Name(runtime),
          $type=0.builtin.concurrent.Context.runtime),
         $type=0.builtin.Runtime), Name(request),
        $type=0.builtin.Runtime.request), Var(Name(request),
        $type=0.builtin.HTTPRequest), Var(Name(self),
        $type=0.builtin.behaviors.RPCRequest), $type=0.builtin.void)),
      Return(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
        Name(retval), $type=0.builtin.concurrent.Future)))),

    Method(static=False, Type(Name(void)), Name(onHTTPResponse),
     Param(Type(Name(HTTPRequest)), Name(rq), $type=0.builtin.HTTPRequest),
     Param(Type(Name(HTTPResponse)), Name(response),
     $type=0.builtin.HTTPResponse),
     Block(
      Local(
       Declaration(Type(Name(String)), Name(info), $type=0.builtin.String)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.RPCRequest), Name(timeout),
         $type=0.builtin.concurrent.Timeout), Name(cancel),
        $type=0.builtin.concurrent.Timeout.cancel), $type=0.builtin.void)),
      If(Call(Attr(Call(Attr(Var(Name(response), $type=0.builtin.HTTPResponse),
           Name(getCode), $type=0.builtin.HTTPResponse.getCode),
         $type=0.builtin.int), Name(__ne__), $type=0.builtin.Object.__ne__),
        Number(200, $type=0.builtin.int), $type=0.builtin.bool), Block(
        Assign(Var(Name(info), $type=0.builtin.String),
         Call(Attr(Call(Attr(Call(Attr(Attr(Var(Name(self),
                $type=0.builtin.behaviors.RPCRequest), Name(rpc),
               $type=0.builtin.behaviors.RPC), Name(toString),
              $type=0.builtin.behaviors.RPC.toString), $type=0.builtin.String),
             Name(__add__), $type=0.builtin.String.__add__),
            String(" failed: Server returned error ", $type=0.builtin.String),
           $type=0.builtin.String), Name(__add__),
          $type=0.builtin.String.__add__),
          Call(Attr(Call(Attr(Var(Name(response),
              $type=0.builtin.HTTPResponse), Name(getCode),
             $type=0.builtin.HTTPResponse.getCode), $type=0.builtin.int),
            Name(toString), $type=0.builtin.int.toString),
          $type=0.builtin.String), $type=0.builtin.String)),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.behaviors.RPCRequest), Name(retval),
           $type=0.builtin.concurrent.Future), Name(finish),
          $type=0.builtin.concurrent.Future.finish), Var(Name(info),
          $type=0.builtin.String), $type=0.builtin.void)),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.behaviors.RPCRequest), Name(rpc),
           $type=0.builtin.behaviors.RPC), Name(fail),
          $type=0.builtin.behaviors.RPC.fail), Var(Name(info),
          $type=0.builtin.String), $type=0.builtin.void)),
        Return())),
      Local(
       Declaration(Type(Name(String)), Name(body),
        Call(Attr(Var(Name(response), $type=0.builtin.HTTPResponse),
          Name(getBody), $type=0.builtin.HTTPResponse.getBody),
        $type=0.builtin.String), $type=0.builtin.String)),
      Local(
       Declaration(Type(Name(JSONObject)), Name(obj), Call(Attr(Var(Name(body),
          $type=0.builtin.String), Name(parseJSON),
         $type=0.builtin.String.parseJSON), $type=0.builtin.JSONObject),
       $type=0.builtin.JSONObject)),
      Local(
       Declaration(Type(Name(String)), Name(classname),
        Call(Attr(Var(Name(obj), $type=0.builtin.JSONObject), Name(__get__),
         $type=0.builtin.JSONObject.__get__), String("$class",
         $type=0.builtin.String), $type=0.builtin.JSONObject),
       $type=0.builtin.String)),
      If(Call(Attr(Var(Name(classname), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), Null(null, $type=0.builtin.Object),
       $type=0.builtin.bool), Block(
        Assign(Var(Name(info), $type=0.builtin.String),
         Call(Attr(Call(Attr(Attr(Var(Name(self),
              $type=0.builtin.behaviors.RPCRequest), Name(rpc),
             $type=0.builtin.behaviors.RPC), Name(toString),
            $type=0.builtin.behaviors.RPC.toString), $type=0.builtin.String),
           Name(__add__), $type=0.builtin.String.__add__),
          String(" failed: Server returned unrecognizable content",
          $type=0.builtin.String), $type=0.builtin.String)),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.behaviors.RPCRequest), Name(retval),
           $type=0.builtin.concurrent.Future), Name(finish),
          $type=0.builtin.concurrent.Future.finish), Var(Name(info),
          $type=0.builtin.String), $type=0.builtin.void)),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.behaviors.RPCRequest), Name(rpc),
           $type=0.builtin.behaviors.RPC), Name(fail),
          $type=0.builtin.behaviors.RPC.fail), Var(Name(info),
          $type=0.builtin.String), $type=0.builtin.void)),
        Return()), Block(
        ExprStmt(Call(Var(Name(fromJSON), $type=0.builtin.fromJSON),
          Attr(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
            Name(rpc), $type=0.builtin.behaviors.RPC), Name(returned),
          $type=0.builtin.reflect.Class), Attr(Var(Name(self),
           $type=0.builtin.behaviors.RPCRequest), Name(retval),
          $type=0.builtin.concurrent.Future), Var(Name(obj),
          $type=0.builtin.JSONObject), $type=0.builtin.Object)),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.behaviors.RPCRequest), Name(retval),
           $type=0.builtin.concurrent.Future), Name(finish),
          $type=0.builtin.concurrent.Future.finish), Null(null,
          $type=0.builtin.Object), $type=0.builtin.void)),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.behaviors.RPCRequest), Name(rpc),
           $type=0.builtin.behaviors.RPC), Name(succeed),
          $type=0.builtin.behaviors.RPC.succeed),
          String("Success in the future...", $type=0.builtin.String),
         $type=0.builtin.void)))))),

    Method(static=False, Type(Name(void)), Name(onTimeout),
     Param(Type(Name(concurrent), Name(Timeout)), Name(timeout),
     $type=0.builtin.concurrent.Timeout),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.RPCRequest), Name(retval),
         $type=0.builtin.concurrent.Future), Name(finish),
        $type=0.builtin.concurrent.Future.finish), String("request timed out",
        $type=0.builtin.String), $type=0.builtin.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.RPCRequest), Name(rpc),
         $type=0.builtin.behaviors.RPC), Name(fail),
        $type=0.builtin.behaviors.RPC.fail), String("request timed out",
        $type=0.builtin.String), $type=0.builtin.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.behaviors.RPCRequest", $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("rpc", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
          Name(rpc), $type=0.builtin.behaviors.RPC)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("retval",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
          Name(retval), $type=0.builtin.concurrent.Future)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("args", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
          Name(args), $type=0.builtin.List<0.builtin.Object>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("timeout",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
          Name(timeout), $type=0.builtin.concurrent.Timeout)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("rpc", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
          Name(rpc), $type=0.builtin.behaviors.RPC), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.behaviors.RPC)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("retval",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
          Name(retval), $type=0.builtin.concurrent.Future),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Future)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("args", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
          Name(args), $type=0.builtin.List<0.builtin.Object>),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.List<0.builtin.Object>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("timeout",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.RPCRequest),
          Name(timeout), $type=0.builtin.concurrent.Timeout),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Timeout)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_behaviors_RPCRequest_ref), Attr(Attr(Var(Name(builtin_md),
       $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
      Name(builtin_behaviors_RPCRequest_md), $type=0.builtin.reflect.Class),
    $type=0.builtin.reflect.Class)),

   Class(Name(CircuitBreaker), Type(Name(Task)),
    Field(static=False, Type(Name(String)), Name(id), $type=0.builtin.String),
    Field(static=False, Type(Name(int)), Name(failureLimit),
    $type=0.builtin.int),
    Field(static=False, Type(Name(float)), Name(retestDelay),
    $type=0.builtin.float),
    Field(static=False, Type(Name(bool)), Name(active), Bool(true,
     $type=0.builtin.bool), $type=0.builtin.bool),
    Field(static=False, Type(Name(int)), Name(failureCount), Number(0,
     $type=0.builtin.int), $type=0.builtin.int),
    Field(static=False, Type(Name(concurrent), Name(Lock)), Name(mutex),
     Call(Type(Name(concurrent), Name(Lock)), $type=0.builtin.concurrent.Lock),
    $type=0.builtin.concurrent.Lock),

    Constructor(Name(CircuitBreaker),
     Param(Type(Name(String)), Name(id), $type=0.builtin.String),
     Param(Type(Name(int)), Name(failureLimit), $type=0.builtin.int),
     Param(Type(Name(float)), Name(retestDelay), $type=0.builtin.float),
     Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
        Name(id), $type=0.builtin.String), Var(Name(id),
       $type=0.builtin.String)),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
        Name(failureLimit), $type=0.builtin.int), Var(Name(failureLimit),
       $type=0.builtin.int)),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
        Name(retestDelay), $type=0.builtin.float), Var(Name(retestDelay),
       $type=0.builtin.float)))),

    Method(static=False, Type(Name(void)), Name(succeed), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.CircuitBreaker), Name(mutex),
         $type=0.builtin.concurrent.Lock), Name(acquire),
        $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
      If(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.CircuitBreaker), Name(failureCount),
         $type=0.builtin.int), Name(__gt__), $type=0.builtin.numeric.__gt__),
        Number(0, $type=0.builtin.int), $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Attr(Var(Name(Client), $type=0.builtin.Client),
            Name(logger), $type=0.builtin.Logger), Name(info),
          $type=0.builtin.Logger.info), Call(Attr(String("- CLOSE breaker on ",
            $type=0.builtin.String), Name(__add__),
           $type=0.builtin.String.__add__), Attr(Var(Name(self),
            $type=0.builtin.behaviors.CircuitBreaker), Name(id),
           $type=0.builtin.String), $type=0.builtin.String),
         $type=0.builtin.void)))),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
        Name(failureCount), $type=0.builtin.int), Number(0,
       $type=0.builtin.int)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.CircuitBreaker), Name(mutex),
         $type=0.builtin.concurrent.Lock), Name(release),
        $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)))),

    Method(static=False, Type(Name(void)), Name(fail), Block(
      Local(
       Declaration(Type(Name(bool)), Name(doSchedule), Bool(false,
        $type=0.builtin.bool), $type=0.builtin.bool)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.CircuitBreaker), Name(mutex),
         $type=0.builtin.concurrent.Lock), Name(acquire),
        $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
        Name(failureCount), $type=0.builtin.int),
       Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.CircuitBreaker), Name(failureCount),
         $type=0.builtin.int), Name(__add__), $type=0.builtin.numeric.__add__),
        Number(1, $type=0.builtin.int), $type=0.builtin.int)),
      If(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.CircuitBreaker), Name(failureCount),
         $type=0.builtin.int), Name(__ge__), $type=0.builtin.numeric.__ge__),
        Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
         Name(failureLimit), $type=0.builtin.int), $type=0.builtin.bool),
       Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(active), $type=0.builtin.bool), Bool(false,
         $type=0.builtin.bool)),
        Assign(Var(Name(doSchedule), $type=0.builtin.bool), Bool(true,
         $type=0.builtin.bool)),
        ExprStmt(Call(Attr(Attr(Var(Name(Client), $type=0.builtin.Client),
            Name(logger), $type=0.builtin.Logger), Name(warn),
          $type=0.builtin.Logger.warn), Call(Attr(String("- OPEN breaker on ",
            $type=0.builtin.String), Name(__add__),
           $type=0.builtin.String.__add__), Attr(Var(Name(self),
            $type=0.builtin.behaviors.CircuitBreaker), Name(id),
           $type=0.builtin.String), $type=0.builtin.String),
         $type=0.builtin.void)))),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.CircuitBreaker), Name(mutex),
         $type=0.builtin.concurrent.Lock), Name(release),
        $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)),
      If(Var(Name(doSchedule), $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Call(Attr(Attr(Var(Name(concurrent),
              $type=0.builtin.concurrent), Name(Context),
             $type=0.builtin.concurrent.Context), Name(runtime),
            $type=0.builtin.concurrent.Context.runtime),
           $type=0.builtin.Runtime), Name(schedule),
          $type=0.builtin.Runtime.schedule), Var(Name(self),
          $type=0.builtin.behaviors.CircuitBreaker), Attr(Var(Name(self),
           $type=0.builtin.behaviors.CircuitBreaker), Name(retestDelay),
          $type=0.builtin.float), $type=0.builtin.void)))))),

    Method(static=False, Type(Name(void)), Name(onExecute),
     Param(Type(Name(Runtime)), Name(runtime), $type=0.builtin.Runtime),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.CircuitBreaker), Name(mutex),
         $type=0.builtin.concurrent.Lock), Name(acquire),
        $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
      Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
        Name(active), $type=0.builtin.bool), Bool(true, $type=0.builtin.bool)),
      ExprStmt(Call(Attr(Attr(Var(Name(Client), $type=0.builtin.Client),
          Name(logger), $type=0.builtin.Logger), Name(warn),
        $type=0.builtin.Logger.warn), Call(Attr(String("- RETEST breaker on ",
          $type=0.builtin.String), Name(__add__),
         $type=0.builtin.String.__add__), Attr(Var(Name(self),
          $type=0.builtin.behaviors.CircuitBreaker), Name(id),
         $type=0.builtin.String), $type=0.builtin.String),
       $type=0.builtin.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.behaviors.CircuitBreaker), Name(mutex),
         $type=0.builtin.concurrent.Lock), Name(release),
        $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.behaviors.CircuitBreaker",
       $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("id", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(id), $type=0.builtin.String)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("failureLimit",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(failureLimit), $type=0.builtin.int)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("retestDelay",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(retestDelay), $type=0.builtin.float)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("active",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(active), $type=0.builtin.bool)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("failureCount",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(failureCount), $type=0.builtin.int)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("mutex",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(mutex), $type=0.builtin.concurrent.Lock)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("id", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(id), $type=0.builtin.String), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.String)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("failureLimit",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(failureLimit), $type=0.builtin.int), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.int)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("retestDelay",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(retestDelay), $type=0.builtin.float), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.float)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("active",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(active), $type=0.builtin.bool), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.bool)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("failureCount",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(failureCount), $type=0.builtin.int), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.int)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("mutex",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.behaviors.CircuitBreaker),
          Name(mutex), $type=0.builtin.concurrent.Lock), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.concurrent.Lock)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_behaviors_CircuitBreaker_ref),
     Attr(Attr(Var(Name(builtin_md), $type=1.builtin_md), Name(Root),
      $type=1.builtin_md.Root), Name(builtin_behaviors_CircuitBreaker_md),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class))),

  Package(Name(concurrent),

   Interface(Annotation(Name(doc),
     String("The contract between event implementations and Collector",
     $type=0.builtin.String)), Name(Event),

    Method(static=False, Type(Name(EventContext)), Name(getContext)),

    Method(static=False, Type(Name(void)), Name(fireEvent)),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_Event_ref), Attr(Attr(Var(Name(builtin_md),
       $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
      Name(builtin_concurrent_Event_md), $type=0.builtin.reflect.Class),
    $type=0.builtin.reflect.Class)),

   Interface(Annotation(Name(doc),
     String("event handler for a future completion", $type=0.builtin.String)),
    Name(FutureListener),

    Method(static=False, Type(Name(void)), Name(onFuture),
     Param(Type(Name(Future)), Name(future),
     $type=0.builtin.concurrent.Future),
     Block()),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_FutureListener_ref),
     Attr(Attr(Var(Name(builtin_md), $type=1.builtin_md), Name(Root),
      $type=1.builtin_md.Root), Name(builtin_concurrent_FutureListener_md),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class)),

   Class(Annotation(Name(doc),
     String("internal class that binds a listener to a future",
     $type=0.builtin.String)), Name(FutureCompletion), Type(Name(Event)),
    Field(static=False, Type(Name(Future)), Name(future),
    $type=0.builtin.concurrent.Future),
    Field(static=False, Type(Name(FutureListener)), Name(listener),
    $type=0.builtin.concurrent.FutureListener),

    Constructor(Name(FutureCompletion),
     Param(Type(Name(Future)), Name(future),
     $type=0.builtin.concurrent.Future),
     Param(Type(Name(FutureListener)), Name(listener),
     $type=0.builtin.concurrent.FutureListener),
     Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.FutureCompletion),
        Name(future), $type=0.builtin.concurrent.Future), Var(Name(future),
       $type=0.builtin.concurrent.Future)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.FutureCompletion),
        Name(listener), $type=0.builtin.concurrent.FutureListener),
       Var(Name(listener), $type=0.builtin.concurrent.FutureListener)))),

    Method(static=False, Type(Name(EventContext)), Name(getContext), Block(
      Return(Attr(Var(Name(self), $type=0.builtin.concurrent.FutureCompletion),
        Name(future), $type=0.builtin.concurrent.Future)))),

    Method(static=False, Type(Name(void)), Name(fireEvent), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.FutureCompletion), Name(listener),
         $type=0.builtin.concurrent.FutureListener), Name(onFuture),
        $type=0.builtin.concurrent.FutureListener.onFuture),
        Attr(Var(Name(self), $type=0.builtin.concurrent.FutureCompletion),
         Name(future), $type=0.builtin.concurrent.Future),
       $type=0.builtin.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.concurrent.FutureCompletion",
       $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("future",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self),
          $type=0.builtin.concurrent.FutureCompletion), Name(future),
         $type=0.builtin.concurrent.Future)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("listener",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self),
          $type=0.builtin.concurrent.FutureCompletion), Name(listener),
         $type=0.builtin.concurrent.FutureListener)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("future",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self),
          $type=0.builtin.concurrent.FutureCompletion), Name(future),
         $type=0.builtin.concurrent.Future), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.concurrent.Future)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("listener",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self),
          $type=0.builtin.concurrent.FutureCompletion), Name(listener),
         $type=0.builtin.concurrent.FutureListener), Cast(Var(Name(value),
          $type=0.builtin.Object),
         $type=0.builtin.concurrent.FutureListener)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_FutureCompletion_ref),
     Attr(Attr(Var(Name(builtin_md), $type=1.builtin_md), Name(Root),
      $type=1.builtin_md.Root), Name(builtin_concurrent_FutureCompletion_md),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class)),

   Class(Annotation(Name(doc),
     String("Captures the current context, base class for all event source implementations",
     $type=0.builtin.String)), Name(EventContext),
    Field(static=False, Type(Name(Context)), Name(_context),
    $type=0.builtin.concurrent.Context),

    Constructor(Name(EventContext), Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.EventContext),
        Name(_context), $type=0.builtin.concurrent.Context),
       Call(Attr(Var(Name(Context), $type=0.builtin.concurrent.Context),
         Name(current), $type=0.builtin.concurrent.Context.current),
       $type=0.builtin.concurrent.Context)))),

    Method(static=False, Type(Name(Context)), Name(getContext), Block(
      Return(Attr(Var(Name(self), $type=0.builtin.concurrent.EventContext),
        Name(_context), $type=0.builtin.concurrent.Context)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.concurrent.EventContext",
       $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_context",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.EventContext),
          Name(_context), $type=0.builtin.concurrent.Context)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_context",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.EventContext),
          Name(_context), $type=0.builtin.concurrent.Context),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Context)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_EventContext_ref), Attr(Attr(Var(Name(builtin_md),
       $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
      Name(builtin_concurrent_EventContext_md), $type=0.builtin.reflect.Class),
    $type=0.builtin.reflect.Class)),

   Class(Annotation(Name(doc), String("The base class for value objects",
     $type=0.builtin.String)), Name(Future), Type(Name(EventContext)),
    Field(static=False, Type(Name(bool)), Name(_finished),
    $type=0.builtin.bool),
    Field(static=False, Type(Name(String)), Name(_error),
    $type=0.builtin.String),
    Field(static=False, Type(Name(List), Type(Name(FutureCompletion))),
     Name(_callbacks),
    $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>),
    Field(static=False, Type(Name(Lock)), Name(_lock),
    $type=0.builtin.concurrent.Lock),

    Constructor(Name(Future), Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
        Name(_finished), $type=0.builtin.bool), Bool(false,
       $type=0.builtin.bool)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
        Name(_callbacks),
       $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>), Null(null,
       $type=0.builtin.Object)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
        Name(_lock), $type=0.builtin.concurrent.Lock), Call(Type(Name(Lock)),
       $type=0.builtin.concurrent.Lock)))),

    Method(static=False, Type(Name(void)), Name(onFinished),
     Param(Type(Name(FutureListener)), Name(callback),
     $type=0.builtin.concurrent.FutureListener),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Future), Name(_lock),
         $type=0.builtin.concurrent.Lock), Name(acquire),
        $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
      If(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
        Name(_finished), $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Attr(Attr(Var(Name(self),
             $type=0.builtin.concurrent.Future), Name(_context),
            $type=0.builtin.concurrent.Context), Name(collector),
           $type=0.builtin.concurrent.Collector), Name(put),
          $type=0.builtin.concurrent.Collector.put),
          Call(Type(Name(FutureCompletion)), Var(Name(self),
           $type=0.builtin.concurrent.Future), Var(Name(callback),
           $type=0.builtin.concurrent.FutureListener),
          $type=0.builtin.concurrent.FutureCompletion),
         $type=0.builtin.void))), Block(
        If(Call(Attr(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
            Name(_callbacks),
           $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>),
           Name(__eq__), $type=0.builtin.Object.__eq__), Null(null,
          $type=0.builtin.Object), $type=0.builtin.bool), Block(
          Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
            Name(_callbacks),
           $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>), List(,
           $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>)))),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.Future), Name(_callbacks),
           $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>),
           Name(add), $type=0.builtin.List.add),
          Call(Type(Name(FutureCompletion)), Var(Name(self),
           $type=0.builtin.concurrent.Future), Var(Name(callback),
           $type=0.builtin.concurrent.FutureListener),
          $type=0.builtin.concurrent.FutureCompletion),
         $type=0.builtin.void)))),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Future), Name(_lock),
         $type=0.builtin.concurrent.Lock), Name(release),
        $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)))),

    Method(static=False, Type(Name(void)), Name(finish),
     Param(Type(Name(String)), Name(error), $type=0.builtin.String),
     Block(
      Local(
       Declaration(Type(Name(List), Type(Name(FutureCompletion))),
        Name(callbacks), Null(null, $type=0.builtin.Object),
       $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Future), Name(_lock),
         $type=0.builtin.concurrent.Lock), Name(acquire),
        $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
      If(Call(Attr(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_finished), $type=0.builtin.bool), Name(__not__),
        $type=0.builtin.bool.__not__), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_finished), $type=0.builtin.bool), Bool(true,
         $type=0.builtin.bool)),
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_error), $type=0.builtin.String), Var(Name(error),
         $type=0.builtin.String)),
        Assign(Var(Name(callbacks),
         $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>),
         Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_callbacks),
         $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>)),
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_callbacks),
         $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>),
         Null(null, $type=0.builtin.Object)))),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Future), Name(_lock),
         $type=0.builtin.concurrent.Lock), Name(release),
        $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)),
      If(Call(Attr(Var(Name(callbacks),
         $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>),
         Name(__ne__), $type=0.builtin.Object.__ne__), Null(null,
        $type=0.builtin.Object), $type=0.builtin.bool), Block(
        Local(
         Declaration(Type(Name(int)), Name(i), Number(0, $type=0.builtin.int),
         $type=0.builtin.int)),
        While(Call(Attr(Var(Name(i), $type=0.builtin.int), Name(__lt__),
          $type=0.builtin.numeric.__lt__), Call(Attr(Var(Name(callbacks),
            $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>),
            Name(size), $type=0.builtin.List.size), $type=0.builtin.int),
         $type=0.builtin.bool), Block(
          ExprStmt(Call(Attr(Attr(Attr(Var(Name(self),
               $type=0.builtin.concurrent.Future), Name(_context),
              $type=0.builtin.concurrent.Context), Name(collector),
             $type=0.builtin.concurrent.Collector), Name(put),
            $type=0.builtin.concurrent.Collector.put),
            Call(Attr(Var(Name(callbacks),
              $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>),
              Name(__get__), $type=0.builtin.List.__get__), Var(Name(i),
             $type=0.builtin.int),
            $type=0.builtin.concurrent.FutureCompletion),
           $type=0.builtin.void)),
          Assign(Var(Name(i), $type=0.builtin.int), Call(Attr(Var(Name(i),
             $type=0.builtin.int), Name(__add__),
            $type=0.builtin.numeric.__add__), Number(1, $type=0.builtin.int),
           $type=0.builtin.int)))))))),

    Method(static=False, Type(Name(bool)), Name(isFinished), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Future), Name(_lock),
         $type=0.builtin.concurrent.Lock), Name(acquire),
        $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
      Local(
       Declaration(Type(Name(bool)), Name(finished), Attr(Var(Name(self),
         $type=0.builtin.concurrent.Future), Name(_finished),
        $type=0.builtin.bool), $type=0.builtin.bool)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Future), Name(_lock),
         $type=0.builtin.concurrent.Lock), Name(release),
        $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)),
      Return(Var(Name(finished), $type=0.builtin.bool)))),

    Method(static=False, Type(Name(String)), Name(getError), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Future), Name(_lock),
         $type=0.builtin.concurrent.Lock), Name(acquire),
        $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
      Local(
       Declaration(Type(Name(String)), Name(error), Attr(Var(Name(self),
         $type=0.builtin.concurrent.Future), Name(_error),
        $type=0.builtin.String), $type=0.builtin.String)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Future), Name(_lock),
         $type=0.builtin.concurrent.Lock), Name(release),
        $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)),
      Return(Var(Name(error), $type=0.builtin.String)))),

    Method(static=False, Type(Name(void)), Name(await),
     Param(Type(Name(float)), Name(timeout), $type=0.builtin.float),
     Block(
      ExprStmt(Call(Attr(Call(Type(Name(FutureWait)),
         $type=0.builtin.concurrent.FutureWait), Name(wait),
        $type=0.builtin.concurrent.FutureWait.wait), Var(Name(self),
        $type=0.builtin.concurrent.Future), Var(Name(timeout),
        $type=0.builtin.float), $type=0.builtin.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.concurrent.Future", $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_context",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_context), $type=0.builtin.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_finished",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_finished), $type=0.builtin.bool)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_error",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_error), $type=0.builtin.String)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_callbacks",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_callbacks),
         $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_lock",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_lock), $type=0.builtin.concurrent.Lock)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_context",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_context), $type=0.builtin.concurrent.Context),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_finished",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_finished), $type=0.builtin.bool), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.bool)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_error",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_error), $type=0.builtin.String), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.String)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_callbacks",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_callbacks),
         $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.List<0.builtin.concurrent.FutureCompletion>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_lock",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Future),
          Name(_lock), $type=0.builtin.concurrent.Lock), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.concurrent.Lock)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_List_builtin_concurrent_FutureCompletion__ref),
     Attr(Attr(Var(Name(builtin_md), $type=1.builtin_md), Name(Root),
      $type=1.builtin_md.Root),
      Name(builtin_List_builtin_concurrent_FutureCompletion__md),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_Future_ref), Attr(Attr(Var(Name(builtin_md),
       $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
      Name(builtin_concurrent_Future_md), $type=0.builtin.reflect.Class),
    $type=0.builtin.reflect.Class)),

   Class(Annotation(Name(doc), String("Synchronization point for a Future.)",
     $type=0.builtin.String)), Name(FutureWait), Type(Name(FutureListener)),
    Field(static=False, Type(Name(Condition)), Name(_lock),
    $type=0.builtin.concurrent.Condition),
    Field(static=False, Type(Name(Future)), Name(_future),
    $type=0.builtin.concurrent.Future),

    Constructor(Name(FutureWait), Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.FutureWait),
        Name(_lock), $type=0.builtin.concurrent.Condition),
       Call(Type(Name(Condition)), $type=0.builtin.concurrent.Condition)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.FutureWait),
        Name(_future), $type=0.builtin.concurrent.Future), Null(null,
       $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(wait),
     Param(Type(Name(Future)), Name(future),
     $type=0.builtin.concurrent.Future),
     Param(Type(Name(float)), Name(timeout), $type=0.builtin.float),
     Block(
      If(Call(Attr(Var(Name(future), $type=0.builtin.concurrent.Future),
         Name(isFinished), $type=0.builtin.concurrent.Future.isFinished),
       $type=0.builtin.bool), Block(
        Return())),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.FutureWait),
        Name(_future), $type=0.builtin.concurrent.Future), Var(Name(future),
       $type=0.builtin.concurrent.Future)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.FutureWait), Name(_future),
         $type=0.builtin.concurrent.Future), Name(onFinished),
        $type=0.builtin.concurrent.Future.onFinished), Var(Name(self),
        $type=0.builtin.concurrent.FutureWait), $type=0.builtin.void)),
      Local(
       Declaration(Type(Name(long)), Name(rounded),
        Call(Attr(Call(Attr(Number(1000.0, $type=0.builtin.float),
            Name(__mul__), $type=0.builtin.numeric.__mul__), Var(Name(timeout),
           $type=0.builtin.float), $type=0.builtin.float), Name(round),
         $type=0.builtin.float.round), $type=0.builtin.long),
       $type=0.builtin.long)),
      Local(
       Declaration(Type(Name(long)), Name(deadline),
        Call(Attr(Call(Var(Name(now), $type=0.builtin.now),
          $type=0.builtin.long), Name(__add__),
         $type=0.builtin.numeric.__add__), Var(Name(rounded),
         $type=0.builtin.long), $type=0.builtin.long), $type=0.builtin.long)),
      While(Call(Attr(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.FutureWait), Name(_future),
           $type=0.builtin.concurrent.Future), Name(isFinished),
          $type=0.builtin.concurrent.Future.isFinished), $type=0.builtin.bool),
         Name(__not__), $type=0.builtin.bool.__not__), $type=0.builtin.bool),
       Block(
        Local(
         Declaration(Type(Name(long)), Name(remaining),
          Call(Attr(Var(Name(deadline), $type=0.builtin.long), Name(__sub__),
           $type=0.builtin.numeric.__sub__), Call(Var(Name(now),
            $type=0.builtin.now), $type=0.builtin.long), $type=0.builtin.long),
         $type=0.builtin.long)),
        If(Call(Attr(Var(Name(rounded), $type=0.builtin.long), Name(__ne__),
          $type=0.builtin.Object.__ne__), Number(0, $type=0.builtin.int),
         $type=0.builtin.bool), Block(
          If(Call(Attr(Var(Name(remaining), $type=0.builtin.long),
             Name(__le__), $type=0.builtin.numeric.__le__), Number(0,
            $type=0.builtin.int), $type=0.builtin.bool), Block(
            Break()))), Block(
          Assign(Var(Name(remaining), $type=0.builtin.long), Number(3141,
           $type=0.builtin.int)))),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.FutureWait), Name(_lock),
           $type=0.builtin.concurrent.Condition), Name(acquire),
          $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.FutureWait), Name(_lock),
           $type=0.builtin.concurrent.Condition), Name(waitWakeup),
          $type=0.builtin.concurrent.Condition.waitWakeup),
          Var(Name(remaining), $type=0.builtin.long), $type=0.builtin.void)),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.FutureWait), Name(_lock),
           $type=0.builtin.concurrent.Condition), Name(release),
          $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)))),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.FutureWait),
        Name(_future), $type=0.builtin.concurrent.Future), Null(null,
       $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(onFuture),
     Param(Type(Name(Future)), Name(future),
     $type=0.builtin.concurrent.Future),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.FutureWait), Name(_lock),
         $type=0.builtin.concurrent.Condition), Name(acquire),
        $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.FutureWait), Name(_lock),
         $type=0.builtin.concurrent.Condition), Name(wakeup),
        $type=0.builtin.concurrent.Condition.wakeup), $type=0.builtin.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.FutureWait), Name(_lock),
         $type=0.builtin.concurrent.Condition), Name(release),
        $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)))),

    Method(static=True, Type(Name(Future)), Name(waitFor),
     Param(Type(Name(Future)), Name(future),
     $type=0.builtin.concurrent.Future),
     Param(Type(Name(float)), Name(timeout), $type=0.builtin.float),
     Block(
      If(Bool(false, $type=0.builtin.bool), Block(
        Local(
         Declaration(Type(Name(FutureWait)), Name(w),
          Call(Type(Name(FutureWait)), $type=0.builtin.concurrent.FutureWait),
         $type=0.builtin.concurrent.FutureWait)),
        ExprStmt(Call(Attr(Var(Name(w), $type=0.builtin.concurrent.FutureWait),
           Name(wait), $type=0.builtin.concurrent.FutureWait.wait),
          Var(Name(future), $type=0.builtin.concurrent.Future),
          Var(Name(timeout), $type=0.builtin.float), $type=0.builtin.void)),
        If(Call(Attr(Call(Attr(Var(Name(future),
             $type=0.builtin.concurrent.Future), Name(isFinished),
            $type=0.builtin.concurrent.Future.isFinished),
           $type=0.builtin.bool), Name(__not__), $type=0.builtin.bool.__not__),
         $type=0.builtin.bool), Block()))),
      Return(Var(Name(future), $type=0.builtin.concurrent.Future)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.concurrent.FutureWait",
       $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_lock",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.FutureWait),
          Name(_lock), $type=0.builtin.concurrent.Condition)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_future",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.FutureWait),
          Name(_future), $type=0.builtin.concurrent.Future)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_lock",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.FutureWait),
          Name(_lock), $type=0.builtin.concurrent.Condition),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Condition)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_future",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.FutureWait),
          Name(_future), $type=0.builtin.concurrent.Future),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Future)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_FutureWait_ref), Attr(Attr(Var(Name(builtin_md),
       $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
      Name(builtin_concurrent_FutureWait_md), $type=0.builtin.reflect.Class),
    $type=0.builtin.reflect.Class)),

   Class(Annotation(Name(doc), String("A simple FIFO",
     $type=0.builtin.String)), Name(Queue), TypeParam(Name(T)),
    Field(static=False, Type(Name(List), Type(Name(T))), Name(items),
    $type=0.builtin.List<0.builtin.concurrent.Queue.T>),
    Field(static=False, Type(Name(int)), Name(head), $type=0.builtin.int),
    Field(static=False, Type(Name(int)), Name(tail), $type=0.builtin.int),

    Constructor(Name(Queue), Block(
      Assign(Attr(Var(Name(self),
        $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
        Name(items), $type=0.builtin.List<0.builtin.concurrent.Queue.T>),
       Call(Type(Name(List), Type(Name(T))),
       $type=0.builtin.List<0.builtin.concurrent.Queue.T>)),
      Assign(Attr(Var(Name(self),
        $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
        Name(head), $type=0.builtin.int), Number(0, $type=0.builtin.int)),
      Assign(Attr(Var(Name(self),
        $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
        Name(tail), $type=0.builtin.int), Number(0, $type=0.builtin.int)))),

    Method(static=False, Type(Name(void)), Name(put),
     Param(Type(Name(T)), Name(item), $type=0.builtin.concurrent.Queue.T),
     Block(
      If(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
          Name(tail), $type=0.builtin.int), Name(__lt__),
        $type=0.builtin.numeric.__lt__), Call(Attr(Attr(Var(Name(self),
           $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
           Name(items), $type=0.builtin.List<0.builtin.concurrent.Queue.T>),
          Name(size), $type=0.builtin.List.size), $type=0.builtin.int),
       $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
            Name(items), $type=0.builtin.List<0.builtin.concurrent.Queue.T>),
           Name(__set__), $type=0.builtin.List.__set__), Attr(Var(Name(self),
           $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
           Name(tail), $type=0.builtin.int), Var(Name(item),
          $type=0.builtin.concurrent.Queue.T), $type=0.builtin.void))), Block(
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
            Name(items), $type=0.builtin.List<0.builtin.concurrent.Queue.T>),
           Name(add), $type=0.builtin.List.add), Var(Name(item),
          $type=0.builtin.concurrent.Queue.T), $type=0.builtin.void)))),
      Assign(Attr(Var(Name(self),
        $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
        Name(tail), $type=0.builtin.int), Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
          Name(tail), $type=0.builtin.int), Name(__add__),
        $type=0.builtin.numeric.__add__), Number(1, $type=0.builtin.int),
       $type=0.builtin.int)))),

    Method(static=False, Type(Name(T)), Name(get), Block(
      Local(
       Declaration(Type(Name(T)), Name(item), Null(null,
        $type=0.builtin.Object), $type=0.builtin.concurrent.Queue.T)),
      If(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
          Name(head), $type=0.builtin.int), Name(__lt__),
        $type=0.builtin.numeric.__lt__), Attr(Var(Name(self),
         $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
         Name(tail), $type=0.builtin.int), $type=0.builtin.bool), Block(
        Assign(Var(Name(item), $type=0.builtin.concurrent.Queue.T),
         Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
            Name(items), $type=0.builtin.List<0.builtin.concurrent.Queue.T>),
           Name(__get__), $type=0.builtin.List.__get__), Attr(Var(Name(self),
           $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
           Name(head), $type=0.builtin.int),
         $type=0.builtin.concurrent.Queue.T)),
        Assign(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
          Name(head), $type=0.builtin.int), Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
            Name(head), $type=0.builtin.int), Name(__add__),
          $type=0.builtin.numeric.__add__), Number(1, $type=0.builtin.int),
         $type=0.builtin.int))), Block(
        If(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
            Name(head), $type=0.builtin.int), Name(__gt__),
          $type=0.builtin.numeric.__gt__), Number(0, $type=0.builtin.int),
         $type=0.builtin.bool), Block(
          Assign(Attr(Var(Name(self),
            $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
            Name(head), $type=0.builtin.int), Number(0, $type=0.builtin.int)),
          Assign(Attr(Var(Name(self),
            $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
            Name(tail), $type=0.builtin.int), Number(0,
           $type=0.builtin.int)))))),
      Return(Var(Name(item), $type=0.builtin.concurrent.Queue.T)))),

    Method(static=False, Type(Name(int)), Name(size), Block(
      Return(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
          Name(tail), $type=0.builtin.int), Name(__sub__),
        $type=0.builtin.numeric.__sub__), Attr(Var(Name(self),
         $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
         Name(head), $type=0.builtin.int), $type=0.builtin.int)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.concurrent.Queue<builtin.Object>",
       $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("items",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
          Name(items), $type=0.builtin.List<0.builtin.concurrent.Queue.T>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("head", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
          Name(head), $type=0.builtin.int)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("tail", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
          Name(tail), $type=0.builtin.int)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("items",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
          Name(items), $type=0.builtin.List<0.builtin.concurrent.Queue.T>),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.List<0.builtin.concurrent.Queue.T>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("head", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
          Name(head), $type=0.builtin.int), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.int)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("tail", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Queue.T>),
          Name(tail), $type=0.builtin.int), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.int))))))),

   Class(Annotation(Name(doc),
     String("Fire events one by one with no locks held",
     $type=0.builtin.String)), Name(CollectorExecutor), Type(Name(Task)),
    Field(static=False, Type(Name(Queue), Type(Name(Event))), Name(events),
    $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
    Field(static=False, Type(Name(Collector)), Name(collector),
    $type=0.builtin.concurrent.Collector),

    Constructor(Name(CollectorExecutor),
     Param(Type(Name(Collector)), Name(collector),
     $type=0.builtin.concurrent.Collector),
     Block(
      Assign(Attr(Var(Name(self),
        $type=0.builtin.concurrent.CollectorExecutor), Name(events),
       $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
       Call(Type(Name(Queue), Type(Name(Event))),
       $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>)),
      Assign(Attr(Var(Name(self),
        $type=0.builtin.concurrent.CollectorExecutor), Name(collector),
       $type=0.builtin.concurrent.Collector), Var(Name(collector),
       $type=0.builtin.concurrent.Collector)))),

    Method(static=False, Type(Name(void)), Name(_start), Block(
      Assign(Attr(Var(Name(self),
        $type=0.builtin.concurrent.CollectorExecutor), Name(events),
       $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
       Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.CollectorExecutor), Name(collector),
         $type=0.builtin.concurrent.Collector), Name(_swap),
        $type=0.builtin.concurrent.Collector._swap), Attr(Var(Name(self),
         $type=0.builtin.concurrent.CollectorExecutor), Name(events),
        $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
       $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>)),
      If(Call(Attr(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.CollectorExecutor), Name(events),
           $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
           Name(size), $type=0.builtin.concurrent.Queue.size),
         $type=0.builtin.int), Name(__gt__), $type=0.builtin.numeric.__gt__),
        Number(0, $type=0.builtin.int), $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Call(Attr(Attr(Var(Name(concurrent),
              $type=0.builtin.concurrent), Name(Context),
             $type=0.builtin.concurrent.Context), Name(runtime),
            $type=0.builtin.concurrent.Context.runtime),
           $type=0.builtin.Runtime), Name(schedule),
          $type=0.builtin.Runtime.schedule), Var(Name(self),
          $type=0.builtin.concurrent.CollectorExecutor), Number(0.0,
          $type=0.builtin.float), $type=0.builtin.void)))))),

    Method(static=False, Type(Name(void)), Name(onExecute),
     Param(Type(Name(Runtime)), Name(runtime), $type=0.builtin.Runtime),
     Block(
      Local(
       Declaration(Type(Name(Event)), Name(next),
        Call(Attr(Attr(Var(Name(self),
           $type=0.builtin.concurrent.CollectorExecutor), Name(events),
          $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
          Name(get), $type=0.builtin.concurrent.Queue.get),
        $type=0.builtin.concurrent.Event), $type=0.builtin.concurrent.Event)),
      Local(
       Declaration(Type(Name(Context)), Name(old), Call(Attr(Var(Name(Context),
          $type=0.builtin.concurrent.Context), Name(current),
         $type=0.builtin.concurrent.Context.current),
        $type=0.builtin.concurrent.Context),
       $type=0.builtin.concurrent.Context)),
      While(Call(Attr(Var(Name(next), $type=0.builtin.concurrent.Event),
         Name(__ne__), $type=0.builtin.Object.__ne__), Null(null,
        $type=0.builtin.Object), $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Var(Name(Context),
           $type=0.builtin.concurrent.Context), Name(swap),
          $type=0.builtin.concurrent.Context.swap),
          Call(Attr(Call(Attr(Var(Name(next),
              $type=0.builtin.concurrent.Event), Name(getContext),
             $type=0.builtin.concurrent.Event.getContext),
            $type=0.builtin.concurrent.EventContext), Name(getContext),
           $type=0.builtin.concurrent.EventContext.getContext),
          $type=0.builtin.concurrent.Context), $type=0.builtin.void)),
        ExprStmt(Call(Attr(Var(Name(next), $type=0.builtin.concurrent.Event),
           Name(fireEvent), $type=0.builtin.concurrent.Event.fireEvent),
         $type=0.builtin.void)),
        Assign(Var(Name(next), $type=0.builtin.concurrent.Event),
         Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.CollectorExecutor), Name(events),
           $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
           Name(get), $type=0.builtin.concurrent.Queue.get),
         $type=0.builtin.concurrent.Event)))),
      ExprStmt(Call(Attr(Var(Name(Context),
         $type=0.builtin.concurrent.Context), Name(swap),
        $type=0.builtin.concurrent.Context.swap), Var(Name(old),
        $type=0.builtin.concurrent.Context), $type=0.builtin.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.CollectorExecutor), Name(collector),
         $type=0.builtin.concurrent.Collector), Name(_poll),
        $type=0.builtin.concurrent.Collector._poll), $type=0.builtin.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.concurrent.CollectorExecutor",
       $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("events",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self),
          $type=0.builtin.concurrent.CollectorExecutor), Name(events),
         $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("collector",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self),
          $type=0.builtin.concurrent.CollectorExecutor), Name(collector),
         $type=0.builtin.concurrent.Collector)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("events",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self),
          $type=0.builtin.concurrent.CollectorExecutor), Name(events),
         $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("collector",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self),
          $type=0.builtin.concurrent.CollectorExecutor), Name(collector),
         $type=0.builtin.concurrent.Collector), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.concurrent.Collector)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_Queue_builtin_concurrent_Event__ref),
     Attr(Attr(Var(Name(builtin_md), $type=1.builtin_md), Name(Root),
      $type=1.builtin_md.Root),
      Name(builtin_concurrent_Queue_builtin_concurrent_Event__md),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_CollectorExecutor_ref),
     Attr(Attr(Var(Name(builtin_md), $type=1.builtin_md), Name(Root),
      $type=1.builtin_md.Root), Name(builtin_concurrent_CollectorExecutor_md),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class)),

   Class(Annotation(Name(doc),
     String("An active queue of events. Each event will fire sequentially, one by one. Multiple instances of Collector are not serialized with eachother and may run in parallel.",
     $type=0.builtin.String)), Name(Collector),
    Field(static=False, Type(Name(Lock)), Name(lock),
    $type=0.builtin.concurrent.Lock),
    Field(static=False, Type(Name(Queue), Type(Name(Event))), Name(pending),
    $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
    Field(static=False, Type(Name(CollectorExecutor)), Name(executor),
    $type=0.builtin.concurrent.CollectorExecutor),
    Field(static=False, Type(Name(bool)), Name(idle), $type=0.builtin.bool),

    Constructor(Name(Collector), Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
        Name(lock), $type=0.builtin.concurrent.Lock), Call(Type(Name(Lock)),
       $type=0.builtin.concurrent.Lock)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
        Name(pending),
       $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
       Call(Type(Name(Queue), Type(Name(Event))),
       $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
        Name(executor), $type=0.builtin.concurrent.CollectorExecutor),
       Call(Type(Name(CollectorExecutor)), Var(Name(self),
        $type=0.builtin.concurrent.Collector),
       $type=0.builtin.concurrent.CollectorExecutor)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
        Name(idle), $type=0.builtin.bool), Bool(true, $type=0.builtin.bool)))),

    Method(static=False, Type(Name(void)), Name(put),
     Param(Type(Name(Event)), Name(event), $type=0.builtin.concurrent.Event),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Collector), Name(lock),
         $type=0.builtin.concurrent.Lock), Name(acquire),
        $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Collector), Name(pending),
         $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
         Name(put), $type=0.builtin.concurrent.Queue.put), Var(Name(event),
        $type=0.builtin.concurrent.Event), $type=0.builtin.void)),
      If(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
        Name(idle), $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=0.builtin.concurrent.Collector), Name(executor),
           $type=0.builtin.concurrent.CollectorExecutor), Name(_start),
          $type=0.builtin.concurrent.CollectorExecutor._start),
         $type=0.builtin.void)))),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Collector), Name(lock),
         $type=0.builtin.concurrent.Lock), Name(release),
        $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)))),

    Method(static=False, Type(Name(Queue), Type(Name(Event))), Name(_swap),
     Param(Type(Name(Queue), Type(Name(Event))), Name(drained),
     $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
     Block(
      Local(
       Declaration(Type(Name(Queue), Type(Name(Event))), Name(pending),
        Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
         Name(pending),
        $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
       $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
        Name(idle), $type=0.builtin.bool),
       Call(Attr(Call(Attr(Var(Name(pending),
           $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
           Name(size), $type=0.builtin.concurrent.Queue.size),
         $type=0.builtin.int), Name(__eq__), $type=0.builtin.Object.__eq__),
        Number(0, $type=0.builtin.int), $type=0.builtin.bool)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
        Name(pending),
       $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
       Var(Name(drained),
       $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>)),
      Return(Var(Name(pending),
       $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>)))),

    Method(static=False, Type(Name(void)), Name(_poll), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Collector), Name(lock),
         $type=0.builtin.concurrent.Lock), Name(acquire),
        $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Collector), Name(executor),
         $type=0.builtin.concurrent.CollectorExecutor), Name(_start),
        $type=0.builtin.concurrent.CollectorExecutor._start),
       $type=0.builtin.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Collector), Name(lock),
         $type=0.builtin.concurrent.Lock), Name(release),
        $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.concurrent.Collector", $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("lock", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
          Name(lock), $type=0.builtin.concurrent.Lock)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("pending",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
          Name(pending),
         $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("executor",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
          Name(executor), $type=0.builtin.concurrent.CollectorExecutor)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("idle", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
          Name(idle), $type=0.builtin.bool)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("lock", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
          Name(lock), $type=0.builtin.concurrent.Lock), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.concurrent.Lock)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("pending",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
          Name(pending),
         $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Queue<0.builtin.concurrent.Event>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("executor",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
          Name(executor), $type=0.builtin.concurrent.CollectorExecutor),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.CollectorExecutor)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("idle", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Collector),
          Name(idle), $type=0.builtin.bool), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.bool)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_Collector_ref), Attr(Attr(Var(Name(builtin_md),
       $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
      Name(builtin_concurrent_Collector_md), $type=0.builtin.reflect.Class),
    $type=0.builtin.reflect.Class)),

   Interface(Annotation(Name(doc), String("Timeout expiry handler",
     $type=0.builtin.String)), Name(TimeoutListener),

    Method(static=False, Type(Name(void)), Name(onTimeout),
     Param(Type(Name(Timeout)), Name(timeout),
     $type=0.builtin.concurrent.Timeout)),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_TimeoutListener_ref),
     Attr(Attr(Var(Name(builtin_md), $type=1.builtin_md), Name(Root),
      $type=1.builtin_md.Root), Name(builtin_concurrent_TimeoutListener_md),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class)),

   Class(Annotation(Name(doc), String("Timeout expiry event",
     $type=0.builtin.String)), Name(TimeoutExpiry), Type(Name(Event)),
    Field(static=False, Type(Name(Timeout)), Name(timeout),
    $type=0.builtin.concurrent.Timeout),
    Field(static=False, Type(Name(TimeoutListener)), Name(listener),
    $type=0.builtin.concurrent.TimeoutListener),

    Constructor(Name(TimeoutExpiry),
     Param(Type(Name(Timeout)), Name(timeout),
     $type=0.builtin.concurrent.Timeout),
     Param(Type(Name(TimeoutListener)), Name(listener),
     $type=0.builtin.concurrent.TimeoutListener),
     Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.TimeoutExpiry),
        Name(timeout), $type=0.builtin.concurrent.Timeout), Var(Name(timeout),
       $type=0.builtin.concurrent.Timeout)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.TimeoutExpiry),
        Name(listener), $type=0.builtin.concurrent.TimeoutListener),
       Var(Name(listener), $type=0.builtin.concurrent.TimeoutListener)))),

    Method(static=False, Type(Name(EventContext)), Name(getContext), Block(
      Return(Attr(Var(Name(self), $type=0.builtin.concurrent.TimeoutExpiry),
        Name(timeout), $type=0.builtin.concurrent.Timeout)))),

    Method(static=False, Type(Name(void)), Name(fireEvent), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.TimeoutExpiry), Name(listener),
         $type=0.builtin.concurrent.TimeoutListener), Name(onTimeout),
        $type=0.builtin.concurrent.TimeoutListener.onTimeout),
        Attr(Var(Name(self), $type=0.builtin.concurrent.TimeoutExpiry),
         Name(timeout), $type=0.builtin.concurrent.Timeout),
       $type=0.builtin.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.concurrent.TimeoutExpiry",
       $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("timeout",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.TimeoutExpiry),
          Name(timeout), $type=0.builtin.concurrent.Timeout)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("listener",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.TimeoutExpiry),
          Name(listener), $type=0.builtin.concurrent.TimeoutListener)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("timeout",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.TimeoutExpiry),
          Name(timeout), $type=0.builtin.concurrent.Timeout),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Timeout)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("listener",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.TimeoutExpiry),
          Name(listener), $type=0.builtin.concurrent.TimeoutListener),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.TimeoutListener)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_TimeoutExpiry_ref),
     Attr(Attr(Var(Name(builtin_md), $type=1.builtin_md), Name(Root),
      $type=1.builtin_md.Root), Name(builtin_concurrent_TimeoutExpiry_md),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class)),

   Class(Annotation(Name(doc), String("Timeout", $type=0.builtin.String)),
    Name(Timeout), Type(Name(EventContext)), Type(Name(Task)),
    Field(static=False, Type(Name(float)), Name(timeout),
    $type=0.builtin.float),
    Field(static=False, Type(Name(Lock)), Name(lock),
    $type=0.builtin.concurrent.Lock),
    Field(static=False, Type(Name(TimeoutListener)), Name(listener),
    $type=0.builtin.concurrent.TimeoutListener),

    Constructor(Name(Timeout),
     Param(Type(Name(float)), Name(timeout), $type=0.builtin.float),
     Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
        Name(timeout), $type=0.builtin.float), Var(Name(timeout),
       $type=0.builtin.float)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
        Name(listener), $type=0.builtin.concurrent.TimeoutListener), Null(null,
       $type=0.builtin.Object)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
        Name(lock), $type=0.builtin.concurrent.Lock), Call(Type(Name(Lock)),
       $type=0.builtin.concurrent.Lock)))),

    Method(static=False, Type(Name(void)), Name(start),
     Param(Type(Name(TimeoutListener)), Name(listener),
     $type=0.builtin.concurrent.TimeoutListener),
     Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
        Name(listener), $type=0.builtin.concurrent.TimeoutListener),
       Var(Name(listener), $type=0.builtin.concurrent.TimeoutListener)),
      Local(
       Declaration(Type(Name(float)), Name(delay), Attr(Var(Name(self),
         $type=0.builtin.concurrent.Timeout), Name(timeout),
        $type=0.builtin.float), $type=0.builtin.float)),
      ExprStmt(Call(Attr(Call(Attr(Attr(Var(Name(concurrent),
            $type=0.builtin.concurrent), Name(Context),
           $type=0.builtin.concurrent.Context), Name(runtime),
          $type=0.builtin.concurrent.Context.runtime),
         $type=0.builtin.Runtime), Name(schedule),
        $type=0.builtin.Runtime.schedule), Var(Name(self),
        $type=0.builtin.concurrent.Timeout), Var(Name(delay),
        $type=0.builtin.float), $type=0.builtin.void)))),

    Method(static=False, Type(Name(void)), Name(cancel), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Timeout), Name(lock),
         $type=0.builtin.concurrent.Lock), Name(acquire),
        $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
        Name(listener), $type=0.builtin.concurrent.TimeoutListener), Null(null,
       $type=0.builtin.Object)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Timeout), Name(lock),
         $type=0.builtin.concurrent.Lock), Name(release),
        $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)))),

    Method(static=False, Type(Name(void)), Name(onExecute),
     Param(Type(Name(Runtime)), Name(runtime), $type=0.builtin.Runtime),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Timeout), Name(lock),
         $type=0.builtin.concurrent.Lock), Name(acquire),
        $type=0.builtin.concurrent.Mutex.acquire), $type=0.builtin.void)),
      If(Call(Attr(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
          Name(listener), $type=0.builtin.concurrent.TimeoutListener),
         Name(__ne__), $type=0.builtin.Object.__ne__), Null(null,
        $type=0.builtin.Object), $type=0.builtin.bool), Block(
        ExprStmt(Call(Attr(Attr(Attr(Var(Name(self),
             $type=0.builtin.concurrent.Timeout), Name(_context),
            $type=0.builtin.concurrent.Context), Name(collector),
           $type=0.builtin.concurrent.Collector), Name(put),
          $type=0.builtin.concurrent.Collector.put),
          Call(Type(Name(TimeoutExpiry)), Var(Name(self),
           $type=0.builtin.concurrent.Timeout), Attr(Var(Name(self),
            $type=0.builtin.concurrent.Timeout), Name(listener),
           $type=0.builtin.concurrent.TimeoutListener),
          $type=0.builtin.concurrent.TimeoutExpiry), $type=0.builtin.void)),
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
          Name(listener), $type=0.builtin.concurrent.TimeoutListener),
         Null(null, $type=0.builtin.Object)))),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=0.builtin.concurrent.Timeout), Name(lock),
         $type=0.builtin.concurrent.Lock), Name(release),
        $type=0.builtin.concurrent.Mutex.release), $type=0.builtin.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.concurrent.Timeout", $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_context",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
          Name(_context), $type=0.builtin.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("timeout",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
          Name(timeout), $type=0.builtin.float)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("lock", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
          Name(lock), $type=0.builtin.concurrent.Lock)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("listener",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
          Name(listener), $type=0.builtin.concurrent.TimeoutListener)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_context",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
          Name(_context), $type=0.builtin.concurrent.Context),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("timeout",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
          Name(timeout), $type=0.builtin.float), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.float)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("lock", $type=0.builtin.String),
       $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
          Name(lock), $type=0.builtin.concurrent.Lock), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.concurrent.Lock)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("listener",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Timeout),
          Name(listener), $type=0.builtin.concurrent.TimeoutListener),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.TimeoutListener)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_Timeout_ref), Attr(Attr(Var(Name(builtin_md),
       $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
      Name(builtin_concurrent_Timeout_md), $type=0.builtin.reflect.Class),
    $type=0.builtin.reflect.Class)),

   Class(Annotation(Name(doc), String("internal", $type=0.builtin.String)),
    Name(TLSContextInitializer), Type(Name(TLSInitializer),
     Type(Name(Context))),

    Method(static=False, Type(Name(Context)), Name(getValue), Block(
      Return(Call(Type(Name(Context)), Call(Attr(Var(Name(Context),
          $type=0.builtin.concurrent.Context), Name(global),
         $type=0.builtin.concurrent.Context.global),
        $type=0.builtin.concurrent.Context),
       $type=0.builtin.concurrent.Context)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.concurrent.TLSContextInitializer",
       $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block()),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_TLSContextInitializer_ref),
     Attr(Attr(Var(Name(builtin_md), $type=1.builtin_md), Name(Root),
      $type=1.builtin_md.Root),
      Name(builtin_concurrent_TLSContextInitializer_md),
     $type=0.builtin.reflect.Class), $type=0.builtin.reflect.Class)),

   Class(Annotation(Name(doc), String("The logical stack for async stuff.",
     $type=0.builtin.String)), Name(Context),
    Field(static=True, Type(Name(Context)), Name(_global),
     Call(Type(Name(Context)), Null(null, $type=0.builtin.Object),
     $type=0.builtin.concurrent.Context), $type=0.builtin.concurrent.Context),
    Field(static=True, Type(Name(TLS), Type(Name(Context))), Name(_current),
     Call(Type(Name(TLS), Type(Name(Context))),
      Call(Type(Name(TLSContextInitializer)),
      $type=0.builtin.concurrent.TLSContextInitializer),
     $type=0.builtin.concurrent.TLS<0.builtin.concurrent.Context>),
    $type=0.builtin.concurrent.TLS<0.builtin.concurrent.Context>),

    Method(static=True, Type(Name(Context)), Name(current), Block(
      Return(Call(Attr(Var(Name(_current),
         $type=0.builtin.concurrent.TLS<0.builtin.concurrent.Context>),
         Name(getValue), $type=0.builtin.concurrent.TLS.getValue),
       $type=0.builtin.concurrent.Context)))),

    Method(static=True, Type(Name(Context)), Name(global), Block(
      Return(Var(Name(_global), $type=0.builtin.concurrent.Context)))),

    Method(static=True, Type(Name(Runtime)), Name(runtime), Block(
      Return(Attr(Call(Var(Name(current),
         $type=0.builtin.concurrent.Context.current),
        $type=0.builtin.concurrent.Context), Name(_runtime),
       $type=0.builtin.Runtime)))),

    Method(static=True, Type(Name(void)), Name(swap),
     Param(Type(Name(Context)), Name(c), $type=0.builtin.concurrent.Context),
     Block(
      ExprStmt(Call(Attr(Var(Name(_current),
         $type=0.builtin.concurrent.TLS<0.builtin.concurrent.Context>),
         Name(setValue), $type=0.builtin.concurrent.TLS.setValue), Var(Name(c),
        $type=0.builtin.concurrent.Context), $type=0.builtin.void)))),

    Constructor(Name(Context),
     Param(Type(Name(Context)), Name(parent),
     $type=0.builtin.concurrent.Context),
     Block(
      Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
        Name(_parent), $type=0.builtin.concurrent.Context), Var(Name(parent),
       $type=0.builtin.concurrent.Context)),
      If(Call(Attr(Var(Name(parent), $type=0.builtin.concurrent.Context),
         Name(__eq__), $type=0.builtin.Object.__eq__), Null(null,
        $type=0.builtin.Object), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(_runtime), $type=0.builtin.Runtime), Call(Type(Name(Runtime)),
         $type=0.builtin.Runtime)),
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(collector), $type=0.builtin.concurrent.Collector),
         Call(Type(Name(Collector)), $type=0.builtin.concurrent.Collector))),
       Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(_runtime), $type=0.builtin.Runtime), Attr(Var(Name(parent),
          $type=0.builtin.concurrent.Context), Name(_runtime),
         $type=0.builtin.Runtime)),
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(collector), $type=0.builtin.concurrent.Collector),
         Attr(Var(Name(parent), $type=0.builtin.concurrent.Context),
          Name(collector), $type=0.builtin.concurrent.Collector)))))),
    Field(static=False, Type(Name(Context)), Name(_parent),
    $type=0.builtin.concurrent.Context),
    Field(static=False, Type(Name(Runtime)), Name(_runtime),
    $type=0.builtin.Runtime),
    Field(static=False, Type(Name(Collector)), Name(collector),
    $type=0.builtin.concurrent.Collector),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("builtin.concurrent.Context", $type=0.builtin.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_global",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(_global), $type=0.builtin.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_current",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(_current),
         $type=0.builtin.concurrent.TLS<0.builtin.concurrent.Context>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_parent",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(_parent), $type=0.builtin.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_runtime",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(_runtime), $type=0.builtin.Runtime)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("collector",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Return(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(collector), $type=0.builtin.concurrent.Collector)))),
      Return(Null(null, $type=0.builtin.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=0.builtin.String),
     Param(Type(Name(Object)), Name(value), $type=0.builtin.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_global",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(_global), $type=0.builtin.concurrent.Context),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_current",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(_current),
         $type=0.builtin.concurrent.TLS<0.builtin.concurrent.Context>),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.TLS<0.builtin.concurrent.Context>)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_parent",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(_parent), $type=0.builtin.concurrent.Context),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("_runtime",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(_runtime), $type=0.builtin.Runtime), Cast(Var(Name(value),
          $type=0.builtin.Object), $type=0.builtin.Runtime)))),
      If(Call(Attr(Var(Name(name), $type=0.builtin.String), Name(__eq__),
        $type=0.builtin.Object.__eq__), String("collector",
        $type=0.builtin.String), $type=0.builtin.bool), Block(
        Assign(Attr(Var(Name(self), $type=0.builtin.concurrent.Context),
          Name(collector), $type=0.builtin.concurrent.Collector),
         Cast(Var(Name(value), $type=0.builtin.Object),
         $type=0.builtin.concurrent.Collector)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(builtin_concurrent_Context_ref), Attr(Attr(Var(Name(builtin_md),
       $type=1.builtin_md), Name(Root), $type=1.builtin_md.Root),
      Name(builtin_concurrent_Context_md), $type=0.builtin.reflect.Class),
    $type=0.builtin.reflect.Class)),

   Primitive(Annotation(Name(mapping), Native(NativeCase(java,
       Fixed('io.datawire.quark.runtime.TLSInitializer')), NativeCase(py,
       Fixed('_TLSInitializer')), NativeCase(js, Fixed('_qrt.TLSInitializer')),
      NativeCase(rb, Fixed('::DatawireQuarkCore::TLSInitializer')))),
    Name(TLSInitializer), TypeParam(Name(T)),

    Method(static=False, Type(Name(T)), Name(getValue))),

   Primitive(Annotation(Name(mapping), Native(NativeCase(java,
       Fixed('io.datawire.quark.runtime.TLS')), NativeCase(py, Fixed('_TLS')),
      NativeCase(js, Fixed('_qrt.TLS')), NativeCase(rb,
       Fixed('::DatawireQuarkCore::TLS')))), Name(TLS),
    TypeParam(Name(Context)),

    ConstructorMacro(Name(TLS),
     Param(Type(Name(TLSInitializer), Type(Name(Context))), Name(initializer),
     $type=0.builtin.concurrent.TLSInitializer<0.builtin.concurrent.TLS.Context>),
     Native(NativeCase(java,
       Fixed('new io.datawire.quark.runtime.TLS('), Var(Name(initializer),
       $type=0.builtin.concurrent.TLSInitializer<0.builtin.concurrent.TLS.Context>),
       Fixed(')')), NativeCase(py, Fixed('_TLS('), Var(Name(initializer),
       $type=0.builtin.concurrent.TLSInitializer<0.builtin.concurrent.TLS.Context>),
       Fixed(')')), NativeCase(rb, Fixed('::DatawireQuarkCore::TLS.new('),
       Var(Name(initializer),
       $type=0.builtin.concurrent.TLSInitializer<0.builtin.concurrent.TLS.Context>),
       Fixed(')')), NativeCase(js, Fixed('new _qrt.TLS('),
       Var(Name(initializer),
       $type=0.builtin.concurrent.TLSInitializer<0.builtin.concurrent.TLS.Context>),
       Fixed(')')))),

    Method(static=False, Type(Name(Context)), Name(getValue)),

    Method(static=False, Type(Name(void)), Name(setValue),
     Param(Type(Name(Context)), Name(c),
     $type=0.builtin.concurrent.TLS.Context))),

   Primitive(Annotation(Name(mapping), Native(NativeCase(java,
       Fixed('io.datawire.quark.runtime.Mutex')), NativeCase(py,
       Fixed('_Mutex')), NativeCase(js, Fixed('_qrt.Mutex')), NativeCase(rb,
       Fixed('::DatawireQuarkCore::Mutex')))), Name(Mutex),

    Method(static=False, Type(Name(void)), Name(acquire)),

    Method(static=False, Type(Name(void)), Name(release))),

   Primitive(Annotation(Name(mapping), Native(NativeCase(java,
       Fixed('io.datawire.quark.runtime.Lock')), NativeCase(py,
       Fixed('_Lock')), NativeCase(js, Fixed('_qrt.Lock')), NativeCase(rb,
       Fixed('::DatawireQuarkCore::Lock')))), Name(Lock), Type(Name(Mutex))),

   Primitive(Annotation(Name(mapping), Native(NativeCase(java,
       Fixed('io.datawire.quark.runtime.Condition')), NativeCase(py,
       Fixed('_Condition')), NativeCase(js, Fixed('_qrt.Condition')),
      NativeCase(rb, Fixed('::DatawireQuarkCore::Condition')))),
    Name(Condition), Type(Name(Mutex)),

    Method(static=False, Type(Name(void)), Name(waitWakeup),
     Param(Type(Name(long)), Name(timeout), $type=0.builtin.long),
     Block()),

    Method(static=False, Type(Name(void)), Name(wakeup), Block()))))
)