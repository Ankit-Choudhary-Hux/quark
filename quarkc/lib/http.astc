File(Import(Name(quark)),
 Include(url=io/datawire/quark/runtime/AbstractHTTPHandler.java),
 Include(url=io/datawire/quark/runtime/ClientHTTPRequest.java),
 Include(url=io/datawire/quark/runtime/HTTPHandler.java),
 Include(url=io/datawire/quark/runtime/HTTPRequest.java),
 Include(url=io/datawire/quark/runtime/HTTPResponse.java),
 Include(url=io/datawire/quark/runtime/HTTPServlet.java),
 Include(url=io/datawire/quark/netty/DatawireNettyHttpContainer.java),
 Include(url=io/datawire/quark/netty/IncomingRequest.java),
 Include(url=io/datawire/quark/netty/QuarkNettyHttpHandler.java),
 Include(url=io/datawire/quark/netty/QuarkNettyRuntime.java),
 Include(url=io/datawire/quark/netty/Response.java),

 Package(Name(quark),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.HTTPHandler')))), Name(HTTPHandler),

   Method(static=False, Type(Name(void)), Name(onHTTPInit),
    Param(Type(Name(HTTPRequest)), Name(request), $type=7.quark.HTTPRequest),
    Block()),

   Method(static=False, Type(Name(void)), Name(onHTTPResponse),
    Param(Type(Name(HTTPRequest)), Name(request), $type=7.quark.HTTPRequest),
    Param(Type(Name(HTTPResponse)), Name(response),
    $type=7.quark.HTTPResponse),
    Block()),

   Method(static=False, Type(Name(void)), Name(onHTTPError),
    Param(Type(Name(HTTPRequest)), Name(request), $type=7.quark.HTTPRequest),
    Param(Type(Name(String)), Name(message), $type=1.quark.String),
    Block()),

   Method(static=False, Type(Name(void)), Name(onHTTPFinal),
    Param(Type(Name(HTTPRequest)), Name(request), $type=7.quark.HTTPRequest),
    Block())),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.HTTPRequest')), NativeCase(rb,
      Fixed('::DatawireQuarkCore::HTTP::Request')))), Name(HTTPRequest),

   ConstructorMacro(Name(HTTPRequest),
    Param(Type(Name(String)), Name(url), $type=1.quark.String),
    Native(NativeCase(java,
      Fixed('new io.datawire.quark.runtime.ClientHTTPRequest('), Var(Name(url),
      $type=1.quark.String), Fixed(')')), NativeCase(py,
      Fixed('_HTTPRequest('), Var(Name(url), $type=1.quark.String),
      Fixed(')')), NativeCase(rb,
      Fixed('::DatawireQuarkCore::HTTP::Request.new('), Var(Name(url),
      $type=1.quark.String), Fixed(')')), NativeCase(js,
      Fixed('new _qrt.HTTPRequest('), Var(Name(url), $type=1.quark.String),
      Fixed(')')))),

   Method(static=False, Type(Name(String)), Name(getUrl)),

   Method(static=False, Type(Name(void)), Name(setMethod),
    Param(Type(Name(String)), Name(method), $type=1.quark.String)),

   Method(static=False, Type(Name(String)), Name(getMethod)),

   Method(static=False, Type(Name(void)), Name(setBody),
    Param(Type(Name(String)), Name(data), $type=1.quark.String)),

   Method(static=False, Type(Name(String)), Name(getBody)),

   Method(static=False, Type(Name(void)), Name(setHeader),
    Param(Type(Name(String)), Name(key), $type=1.quark.String),
    Param(Type(Name(String)), Name(value), $type=1.quark.String)),

   Method(static=False, Type(Name(String)), Name(getHeader),
    Param(Type(Name(String)), Name(key), $type=1.quark.String)),

   Method(static=False, Type(Name(List), Type(Name(String))),
    Name(getHeaders))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.HTTPResponse')), NativeCase(rb,
      Fixed('::DatawireQuarkCore::HTTP::Response')))), Name(HTTPResponse),

   Method(static=False, Type(Name(int)), Name(getCode)),

   Method(static=False, Type(Name(void)), Name(setCode),
    Param(Type(Name(int)), Name(code), $type=1.quark.int)),

   Method(static=False, Type(Name(String)), Name(getBody)),

   Method(static=False, Type(Name(void)), Name(setBody),
    Param(Type(Name(String)), Name(body), $type=1.quark.String)),

   Method(static=False, Type(Name(void)), Name(setHeader),
    Param(Type(Name(String)), Name(key), $type=1.quark.String),
    Param(Type(Name(String)), Name(value), $type=1.quark.String)),

   Method(static=False, Type(Name(String)), Name(getHeader),
    Param(Type(Name(String)), Name(key), $type=1.quark.String)),

   Method(static=False, Type(Name(List), Type(Name(String))),
    Name(getHeaders))),

  Primitive(Annotation(Name(doc), String("Http servlet",
    $type=1.quark.String)), Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.HTTPServlet')))), Name(HTTPServlet),
   Type(Name(Servlet)),

   Method(static=False, Annotation(Name(doc),
     String("incoming request. respond with Runtime.respond(). After responding the objects may get recycled by the runtime",
     $type=1.quark.String)), Type(Name(void)), Name(onHTTPRequest),
    Param(Type(Name(HTTPRequest)), Name(request), $type=7.quark.HTTPRequest),
    Param(Type(Name(HTTPResponse)), Name(response),
    $type=7.quark.HTTPResponse),
    Block()),

   Method(static=False, Type(Name(void)), Name(serveHTTP),
    Param(Type(Name(String)), Name(url), $type=1.quark.String),
    Block(
     ExprStmt(Call(Attr(Call(Attr(Attr(Var(Name(concurrent),
           $type=6.quark.concurrent), Name(Context),
          $type=6.quark.concurrent.Context), Name(runtime),
         $type=6.quark.concurrent.Context.runtime), $type=0.quark.Runtime),
        Name(serveHTTP), $type=0.quark.Runtime.serveHTTP), Var(Name(url),
       $type=1.quark.String), Var(Name(self), $type=7.quark.HTTPServlet),
      $type=1.quark.void))))))
)