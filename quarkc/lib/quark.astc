File(Import(Name(quark)), Dependency(lang=jsgroup=Noneartifact=wsversion=1.0),
 Dependency(lang=jsgroup=Noneartifact=requestversion=2.69.0),
 Dependency(lang=jsgroup=Noneartifact=timersversion=0.1.1),
 Dependency(lang=jsgroup=Noneartifact=lodashversion=4.8.2),
 Include(url=quark_runtime.js), Include(url=quark_node_runtime.js),
 Dependency(lang=pygroup=Noneartifact=ws4pyversion=0.3.*),
 Include(url=quark_runtime.py), Include(url=quark_threaded_runtime.py),
 Include(url=quark_runtime_logging.py), Include(url=quark_ws4py_fixup.py),
 Dependency(lang=rbgroup=Noneartifact=concurrent-rubyversion=1.0.1),
 Dependency(lang=rbgroup=Noneartifact=reelversion=0.6.1),
 Dependency(lang=rbgroup=Noneartifact=websocket-driverversion=0.6.3),
 Dependency(lang=rbgroup=Noneartifact=loggingversion=2.1.0),
 Dependency(lang=rbgroup=Noneartifact=event_emitterversion=0.2.5),
 Include(url=datawire-quark-core.rb),
 Dependency(lang=javagroup=com.fasterxml.jackson.jrartifact=jackson-jr-objectsversion=2.5.3),
 Dependency(lang=javagroup=io.nettyartifact=netty-allversion=4.0.32.Final),
 Dependency(lang=javagroup=junitartifact=junitversion=4.12),
 Include(url=io/datawire/quark/runtime/AbstractDatawireRuntime.java),
 Include(url=io/datawire/quark/runtime/Builtins.java),
 Include(url=io/datawire/quark/runtime/Runtime.java),
 Include(url=io/datawire/quark/runtime/Task.java),

 DistUnit(Name(quark)),
 Include(url=primitives.q), Include(url=logging.q), Include(url=reflect.q),
 Include(url=json.q), Include(url=service.q), Include(url=concurrent.q),
 Include(url=http.q), Include(url=ws.q), Include(url=testing.q),
 Include(url=url.q),

 Package(Name(quark),

  Macro(Type(Name(void)), Name(print),
   Param(Type(Name(Object)), Name(msg), $type=1.quark.Object),
   Native(NativeCase(java,
     Fixed('do'), Fixed('{'), Fixed('System.out.println('), Var(Name(msg),
     $type=1.quark.Object), Fixed(');System.out.flush();'), Fixed('}'),
     Fixed('while(false)')), NativeCase(py, Fixed('_println('), Var(Name(msg),
     $type=1.quark.Object), Fixed(')')), NativeCase(rb,
     Fixed('::DatawireQuarkCore.print('), Var(Name(msg), $type=1.quark.Object),
     Fixed(')')), NativeCase(js, Fixed('_qrt.print('), Var(Name(msg),
     $type=1.quark.Object), Fixed(')')))),

  Macro(Type(Name(long)), Name(now), Native(NativeCase(java,
     Fixed('System.currentTimeMillis()')), NativeCase(py,
     Fixed('long(time.time()*1000)')), NativeCase(rb,
     Fixed('::DatawireQuarkCore.now')), NativeCase(js, Fixed('Date.now()')))),

  Macro(Type(Name(void)), Name(sleep),
   Param(Type(Name(float)), Name(seconds), $type=1.quark.float),
   Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.Builtins.sleep('), Var(Name(seconds),
     $type=1.quark.float), Fixed(')')), NativeCase(py, Fixed('time.sleep('),
     Var(Name(seconds), $type=1.quark.float), Fixed(')')), NativeCase(rb,
     Fixed('sleep('), Var(Name(seconds), $type=1.quark.float), Fixed(')')),
    NativeCase(js, Fixed('_qrt.sleep('), Var(Name(seconds),
     $type=1.quark.float), Fixed(')')))),

  Macro(Type(Name(String)), Name(url_get),
   Param(Type(Name(String)), Name(url), $type=1.quark.String),
   Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.Builtins.url_get('), Var(Name(url),
     $type=1.quark.String), Fixed(')')), NativeCase(py, Fixed('_url_get('),
     Var(Name(url), $type=1.quark.String), Fixed(')')), NativeCase(rb,
     Fixed('::DatawireQuarkCore.url_get('), Var(Name(url),
     $type=1.quark.String), Fixed(')')), NativeCase(js, Fixed('_qrt.url_get('),
     Var(Name(url), $type=1.quark.String), Fixed(')')))),

  Macro(Type(Name(int)), Name(parseInt),
   Param(Type(Name(String)), Name(st), $type=1.quark.String),
   Native(NativeCase(java,
     Fixed('Integer.parseInt('), Var(Name(st), $type=1.quark.String),
     Fixed(')')), NativeCase(py, Fixed('int('), Var(Name(st),
     $type=1.quark.String), Fixed(')')), NativeCase(rb, Fixed('Integer('),
     Var(Name(st), $type=1.quark.String), Fixed(')')), NativeCase(js,
     Fixed('parseInt('), Var(Name(st), $type=1.quark.String), Fixed(')')))),

  Macro(Type(Name(Codec)), Name(defaultCodec), Native(NativeCase(java,
     Fixed('io.datawire.quark.runtime.Builtins.defaultCodec()')),
    NativeCase(py, Fixed('_default_codec()')), NativeCase(rb,
     Fixed('::DatawireQuarkCore.default_codec')), NativeCase(js,
     Fixed('_qrt.defaultCodec()')))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.Task')))), Name(Task),

   Method(static=False, Type(Name(void)), Name(onExecute),
    Param(Type(Name(Runtime)), Name(runtime), $type=0.quark.Runtime))),

  Primitive(Annotation(Name(mapping), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.Runtime')))), Name(Runtime),

   ConstructorMacro(Name(Runtime), Native(NativeCase(java,
      Fixed('io.datawire.quark.runtime.Runtime.Factory.create()')),
     NativeCase(py, Fixed('_RuntimeFactory.create()')), NativeCase(rb,
      Fixed('::DatawireQuarkCore::Runtime.new')), NativeCase(js,
      Fixed('_qrt.RuntimeFactory.create()')))),

   Method(static=False, Type(Name(void)), Name(open),
    Param(Type(Name(String)), Name(url), $type=1.quark.String),
    Param(Type(Name(WSHandler)), Name(handler), $type=8.quark.WSHandler)),

   Method(static=False, Type(Name(void)), Name(request),
    Param(Type(Name(HTTPRequest)), Name(request), $type=7.quark.HTTPRequest),
    Param(Type(Name(HTTPHandler)), Name(handler), $type=7.quark.HTTPHandler)),

   Method(static=False, Type(Name(void)), Name(schedule),
    Param(Type(Name(Task)), Name(handler), $type=0.quark.Task),
    Param(Type(Name(float)), Name(delayInSeconds), $type=1.quark.float)),

   Method(static=False, Type(Name(Codec)), Name(codec)),

   Method(static=False, Type(Name(void)), Name(serveHTTP),
    Param(Type(Name(String)), Name(url), $type=1.quark.String),
    Param(Type(Name(HTTPServlet)), Name(servlet), $type=7.quark.HTTPServlet)),

   Method(static=False, Type(Name(void)), Name(serveWS),
    Param(Type(Name(String)), Name(url), $type=1.quark.String),
    Param(Type(Name(WSServlet)), Name(servlet), $type=8.quark.WSServlet)),

   Method(static=False, Type(Name(void)), Name(respond),
    Param(Type(Name(HTTPRequest)), Name(request), $type=7.quark.HTTPRequest),
    Param(Type(Name(HTTPResponse)), Name(response),
    $type=7.quark.HTTPResponse)),

   Method(static=False, Annotation(Name(doc),
     String("Display the explanatory message and then terminate the program",
     $type=1.quark.String)), Type(Name(void)), Name(fail),
    Param(Type(Name(String)), Name(message), $type=1.quark.String)),

   Method(static=False, Annotation(Name(doc),
     String("Get a logger for the specified topic.", $type=1.quark.String)),
    Type(Name(Logger)), Name(logger),
    Param(Type(Name(String)), Name(topic), $type=1.quark.String))))
)