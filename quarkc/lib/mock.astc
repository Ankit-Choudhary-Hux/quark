File(Import(Name(quark)), CompilerVersionSpec(), Import(Name(quark),
  Name(test)),

 Package(Name(quark),

  Package(Name(mock),

   Class(Name(MockEvent),

    Method(static=False, Type(Name(String)), Name(getType)),

    Method(static=False, Type(Name(List), Type(Name(Object))), Name(getArgs)),

    Method(static=False, Type(Name(String)), Name(toString), Block(
      Return(Call(Attr(Call(Var(Name(getType),
          $type=15.quark.mock.MockEvent.getType), $type=1.quark.String),
         Name(__add__), $type=1.quark.String.__add__),
        Call(Attr(Call(Var(Name(getArgs),
           $type=15.quark.mock.MockEvent.getArgs),
          $type=1.quark.List<1.quark.Object>), Name(toString),
         $type=1.quark.Object.toString), $type=1.quark.String),
       $type=1.quark.String))))),

   Class(Name(SocketEvent), Type(Name(MockEvent)),
    Field(static=False, Type(Name(String)), Name(url), $type=1.quark.String),
    Field(static=False, Type(Name(WSHandler)), Name(handler),
    $type=8.quark.WSHandler),
    Field(static=False, Type(Name(MockSocket)), Name(sock), Null(null,
     $type=1.quark.Object), $type=15.quark.mock.MockSocket),
    Field(static=False, Type(Name(bool)), Name(closed), Bool(false,
     $type=1.quark.bool), $type=1.quark.bool),
    Field(static=False, Type(Name(int)), Name(expectIdx), Number(0,
     $type=1.quark.int), $type=1.quark.int),

    Constructor(Name(SocketEvent),
     Param(Type(Name(String)), Name(url), $type=1.quark.String),
     Param(Type(Name(WSHandler)), Name(handler), $type=8.quark.WSHandler),
     Block(
      Assign(Attr(Var(Name(self), $type=15.quark.mock.SocketEvent), Name(url),
       $type=1.quark.String), Var(Name(url), $type=1.quark.String)),
      Assign(Attr(Var(Name(self), $type=15.quark.mock.SocketEvent),
        Name(handler), $type=8.quark.WSHandler), Var(Name(handler),
       $type=8.quark.WSHandler)))),

    Method(static=False, Type(Name(String)), Name(getType), Block(
      Return(String("socket", $type=1.quark.String)))),

    Method(static=False, Type(Name(List), Type(Name(Object))), Name(getArgs),
     Block(
      Return(List(Var(Name(url), $type=1.quark.String), Var(Name(handler),
        $type=8.quark.WSHandler), $type=1.quark.List<1.quark.Object>)))),

    Method(static=False, Type(Name(void)), Name(accept), Block(
      If(Call(Attr(Var(Name(sock), $type=15.quark.mock.MockSocket),
         Name(__ne__), $type=1.quark.Object.__ne__), Null(null,
        $type=1.quark.Object), $type=1.quark.bool), Block(
        ExprStmt(Call(Attr(Call(Attr(Var(Name(Context),
             $type=6.quark.concurrent.Context), Name(runtime),
            $type=6.quark.concurrent.Context.runtime), $type=0.quark.Runtime),
           Name(fail), $type=0.quark.Runtime.fail), String("already accepted",
          $type=1.quark.String), $type=1.quark.void))), Block(
        Assign(Var(Name(sock), $type=15.quark.mock.MockSocket),
         Call(Type(Name(MockSocket)), $type=15.quark.mock.MockSocket)),
        ExprStmt(Call(Attr(Var(Name(handler), $type=8.quark.WSHandler),
           Name(onWSInit), $type=8.quark.WSHandler.onWSInit), Var(Name(sock),
          $type=15.quark.mock.MockSocket), $type=1.quark.void)),
        ExprStmt(Call(Attr(Var(Name(handler), $type=8.quark.WSHandler),
           Name(onWSConnected), $type=8.quark.WSHandler.onWSConnected),
          Var(Name(sock), $type=15.quark.mock.MockSocket),
         $type=1.quark.void)))))),

    Method(static=False, Type(Name(void)), Name(send),
     Param(Type(Name(String)), Name(message), $type=1.quark.String),
     Block(
      ExprStmt(Call(Attr(Var(Name(handler), $type=8.quark.WSHandler),
         Name(onWSMessage), $type=8.quark.WSHandler.onWSMessage),
        Var(Name(sock), $type=15.quark.mock.MockSocket), Var(Name(message),
        $type=1.quark.String), $type=1.quark.void)))),

    Method(static=False, Type(Name(void)), Name(close), Block(
      If(Var(Name(closed), $type=1.quark.bool), Block(
        ExprStmt(Call(Attr(Call(Attr(Var(Name(Context),
             $type=6.quark.concurrent.Context), Name(runtime),
            $type=6.quark.concurrent.Context.runtime), $type=0.quark.Runtime),
           Name(fail), $type=0.quark.Runtime.fail), String("already closed",
          $type=1.quark.String), $type=1.quark.void))), Block(
        ExprStmt(Call(Attr(Var(Name(handler), $type=8.quark.WSHandler),
           Name(onWSClosed), $type=8.quark.WSHandler.onWSClosed),
          Var(Name(sock), $type=15.quark.mock.MockSocket),
         $type=1.quark.void)),
        ExprStmt(Call(Attr(Var(Name(handler), $type=8.quark.WSHandler),
           Name(onWSFinal), $type=8.quark.WSHandler.onWSFinal), Var(Name(sock),
          $type=15.quark.mock.MockSocket), $type=1.quark.void)),
        Assign(Var(Name(closed), $type=1.quark.bool), Bool(true,
         $type=1.quark.bool)))))),

    Method(static=False, Type(Name(MockMessage)), Name(expectMessage), Block(
      If(Call(Attr(Var(Name(sock), $type=15.quark.mock.MockSocket),
         Name(__eq__), $type=1.quark.Object.__eq__), Null(null,
        $type=1.quark.Object), $type=1.quark.bool), Block(
        ExprStmt(Call(Attr(Call(Attr(Var(Name(Context),
             $type=6.quark.concurrent.Context), Name(runtime),
            $type=6.quark.concurrent.Context.runtime), $type=0.quark.Runtime),
           Name(fail), $type=0.quark.Runtime.fail), String("not accepted",
          $type=1.quark.String), $type=1.quark.void)))),
      If(Call(Var(Name(check), $type=9.quark.test.check),
        Call(Attr(Var(Name(expectIdx), $type=1.quark.int), Name(__lt__),
         $type=1.quark.numeric.__lt__), Call(Attr(Attr(Var(Name(sock),
            $type=15.quark.mock.MockSocket), Name(messages),
           $type=1.quark.List<15.quark.mock.MockMessage>), Name(size),
          $type=1.quark.List.size), $type=1.quark.int), $type=1.quark.bool),
        String("expected a message", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Local(
         Declaration(Type(Name(MockMessage)), Name(msg),
          Call(Attr(Attr(Var(Name(sock), $type=15.quark.mock.MockSocket),
             Name(messages), $type=1.quark.List<15.quark.mock.MockMessage>),
            Name(__get__), $type=1.quark.List.__get__), Var(Name(expectIdx),
           $type=1.quark.int), $type=15.quark.mock.MockMessage),
         $type=15.quark.mock.MockMessage)),
        Assign(Var(Name(expectIdx), $type=1.quark.int),
         Call(Attr(Var(Name(expectIdx), $type=1.quark.int), Name(__add__),
          $type=1.quark.numeric.__add__), Number(1, $type=1.quark.int),
         $type=1.quark.int)),
        Return(Var(Name(msg), $type=15.quark.mock.MockMessage)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(TextMessage)), Name(expectTextMessage),
     Block(
      Local(
       Declaration(Type(Name(MockMessage)), Name(msg),
        Call(Var(Name(expectMessage),
         $type=15.quark.mock.SocketEvent.expectMessage),
        $type=15.quark.mock.MockMessage), $type=15.quark.mock.MockMessage)),
      If(Call(Attr(Call(Attr(Var(Name(msg), $type=15.quark.mock.MockMessage),
           Name(__ne__), $type=1.quark.Object.__ne__), Null(null,
          $type=1.quark.Object), $type=1.quark.bool), Name(__and__),
        $type=1.quark.bool.__and__), Call(Attr(Var(Name(msg),
          $type=15.quark.mock.MockMessage), Name(isText),
         $type=15.quark.mock.MockMessage.isText), $type=1.quark.bool),
       $type=1.quark.bool), Block(
        Return(Cast(Var(Name(msg), $type=15.quark.mock.MockMessage),
         $type=15.quark.mock.TextMessage))), Block(
        Return(Null(null, $type=1.quark.Object)))))),

    Method(static=False, Type(Name(BinaryMessage)), Name(expectBinaryMessage),
     Block(
      Local(
       Declaration(Type(Name(MockMessage)), Name(msg),
        Call(Var(Name(expectMessage),
         $type=15.quark.mock.SocketEvent.expectMessage),
        $type=15.quark.mock.MockMessage), $type=15.quark.mock.MockMessage)),
      If(Call(Attr(Call(Attr(Var(Name(msg), $type=15.quark.mock.MockMessage),
           Name(__ne__), $type=1.quark.Object.__ne__), Null(null,
          $type=1.quark.Object), $type=1.quark.bool), Name(__and__),
        $type=1.quark.bool.__and__), Call(Attr(Var(Name(msg),
          $type=15.quark.mock.MockMessage), Name(isBinary),
         $type=15.quark.mock.MockMessage.isBinary), $type=1.quark.bool),
       $type=1.quark.bool), Block(
        Return(Cast(Var(Name(msg), $type=15.quark.mock.MockMessage),
         $type=15.quark.mock.BinaryMessage))), Block(
        Return(Null(null, $type=1.quark.Object)))))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.mock.SocketEvent", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("url", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.SocketEvent),
          Name(url), $type=1.quark.String)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("handler", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.SocketEvent),
          Name(handler), $type=8.quark.WSHandler)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("sock", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.SocketEvent),
          Name(sock), $type=15.quark.mock.MockSocket)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("closed", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.SocketEvent),
          Name(closed), $type=1.quark.bool)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("expectIdx",
        $type=1.quark.String), $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.SocketEvent),
          Name(expectIdx), $type=1.quark.int)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("url", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.SocketEvent),
          Name(url), $type=1.quark.String), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.String)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("handler", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.SocketEvent),
          Name(handler), $type=8.quark.WSHandler), Cast(Var(Name(value),
          $type=1.quark.Object), $type=8.quark.WSHandler)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("sock", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.SocketEvent),
          Name(sock), $type=15.quark.mock.MockSocket), Cast(Var(Name(value),
          $type=1.quark.Object), $type=15.quark.mock.MockSocket)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("closed", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.SocketEvent),
          Name(closed), $type=1.quark.bool), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.bool)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("expectIdx",
        $type=1.quark.String), $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.SocketEvent),
          Name(expectIdx), $type=1.quark.int), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.int)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_mock_SocketEvent_ref), Call(Attr(Var(Name(reflect),
       $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_mock_SocketEvent_md), $type=3.quark.reflect.Class),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class)),

   Class(Name(MockMessage),

    Method(static=False, Type(Name(bool)), Name(isBinary), Block(
      Return(Call(Attr(Call(Var(Name(isText),
          $type=15.quark.mock.MockMessage.isText), $type=1.quark.bool),
         Name(__not__), $type=1.quark.bool.__not__), $type=1.quark.bool)))),

    Method(static=False, Type(Name(bool)), Name(isText))),

   Class(Annotation(Name(doc), String("A text message.",
     $type=1.quark.String)), Name(TextMessage), Type(Name(MockMessage)),
    Field(static=False, Annotation(Name(doc), String("The message content.",
      $type=1.quark.String)), Type(Name(String)), Name(text),
    $type=1.quark.String),

    Constructor(Name(TextMessage),
     Param(Type(Name(String)), Name(message), $type=1.quark.String),
     Block(
      Assign(Var(Name(text), $type=1.quark.String), Var(Name(message),
       $type=1.quark.String)))),

    Method(static=False, Type(Name(bool)), Name(isText), Block(
      Return(Bool(true, $type=1.quark.bool)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.mock.TextMessage", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("text", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.TextMessage),
          Name(text), $type=1.quark.String)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("text", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.TextMessage),
          Name(text), $type=1.quark.String), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.String)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_mock_TextMessage_ref), Call(Attr(Var(Name(reflect),
       $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_mock_TextMessage_md), $type=3.quark.reflect.Class),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class)),

   Class(Annotation(Name(doc), String("A binary message.",
     $type=1.quark.String)), Name(BinaryMessage), Type(Name(MockMessage)),
    Field(static=False, Annotation(Name(doc), String("The message content.",
      $type=1.quark.String)), Type(Name(Buffer)), Name(bytes),
    $type=1.quark.Buffer),

    Constructor(Name(BinaryMessage),
     Param(Type(Name(Buffer)), Name(message), $type=1.quark.Buffer),
     Block(
      Assign(Var(Name(bytes), $type=1.quark.Buffer), Var(Name(message),
       $type=1.quark.Buffer)))),

    Method(static=False, Type(Name(bool)), Name(isText), Block(
      Return(Bool(false, $type=1.quark.bool)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.mock.BinaryMessage", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("bytes", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.BinaryMessage),
          Name(bytes), $type=1.quark.Buffer)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("bytes", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.BinaryMessage),
          Name(bytes), $type=1.quark.Buffer), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.Buffer)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_mock_BinaryMessage_ref), Call(Attr(Var(Name(reflect),
       $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_mock_BinaryMessage_md), $type=3.quark.reflect.Class),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class)),

   Class(Name(MockSocket), Type(Name(WebSocket)),
    Field(static=False, Type(Name(List), Type(Name(MockMessage))),
     Name(messages), List(, $type=1.quark.List<15.quark.mock.MockMessage>),
    $type=1.quark.List<15.quark.mock.MockMessage>),

    Method(static=False, Type(Name(bool)), Name(send),
     Param(Type(Name(String)), Name(message), $type=1.quark.String),
     Block(
      ExprStmt(Call(Attr(Var(Name(messages),
         $type=1.quark.List<15.quark.mock.MockMessage>), Name(add),
        $type=1.quark.List.add), Call(Type(Name(TextMessage)),
         Var(Name(message), $type=1.quark.String),
        $type=15.quark.mock.TextMessage), $type=1.quark.void)),
      Return(Bool(true, $type=1.quark.bool)))),

    Method(static=False, Type(Name(bool)), Name(sendBinary),
     Param(Type(Name(Buffer)), Name(bytes), $type=1.quark.Buffer),
     Block(
      ExprStmt(Call(Attr(Var(Name(messages),
         $type=1.quark.List<15.quark.mock.MockMessage>), Name(add),
        $type=1.quark.List.add), Call(Type(Name(BinaryMessage)),
         Var(Name(bytes), $type=1.quark.Buffer),
        $type=15.quark.mock.BinaryMessage), $type=1.quark.void)),
      Return(Bool(true, $type=1.quark.bool)))),

    Method(static=False, Type(Name(bool)), Name(close), Block(
      Return(Bool(true, $type=1.quark.bool)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.mock.MockSocket", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("messages", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockSocket),
          Name(messages), $type=1.quark.List<15.quark.mock.MockMessage>)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("messages", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockSocket),
          Name(messages), $type=1.quark.List<15.quark.mock.MockMessage>),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=1.quark.List<15.quark.mock.MockMessage>)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_List_quark_mock_MockMessage__ref), Call(Attr(Var(Name(reflect),
       $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_List_quark_mock_MockMessage__md),
      $type=3.quark.reflect.Class), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_mock_MockSocket_ref), Call(Attr(Var(Name(reflect),
       $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_mock_MockSocket_md), $type=3.quark.reflect.Class),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class)),

   Class(Name(RequestEvent), Type(Name(MockEvent)),
    Field(static=False, Type(Name(HTTPRequest)), Name(request),
    $type=7.quark.HTTPRequest),
    Field(static=False, Type(Name(HTTPHandler)), Name(handler),
    $type=7.quark.HTTPHandler),

    Constructor(Name(RequestEvent),
     Param(Type(Name(HTTPRequest)), Name(request), $type=7.quark.HTTPRequest),
     Param(Type(Name(HTTPHandler)), Name(handler), $type=7.quark.HTTPHandler),
     Block(
      Assign(Attr(Var(Name(self), $type=15.quark.mock.RequestEvent),
        Name(request), $type=7.quark.HTTPRequest), Var(Name(request),
       $type=7.quark.HTTPRequest)),
      Assign(Attr(Var(Name(self), $type=15.quark.mock.RequestEvent),
        Name(handler), $type=7.quark.HTTPHandler), Var(Name(handler),
       $type=7.quark.HTTPHandler)))),

    Method(static=False, Type(Name(String)), Name(getType), Block(
      Return(String("request", $type=1.quark.String)))),

    Method(static=False, Type(Name(List), Type(Name(Object))), Name(getArgs),
     Block(
      Return(List(Var(Name(request), $type=7.quark.HTTPRequest),
        Var(Name(handler), $type=7.quark.HTTPHandler),
       $type=1.quark.List<1.quark.Object>)))),

    Method(static=False, Type(Name(void)), Name(respond),
     Param(Type(Name(int)), Name(code), $type=1.quark.int),
     Param(Type(Name(Map), Type(Name(String)), Type(Name(String))),
      Name(headers), $type=1.quark.Map<1.quark.String,1.quark.String>),
     Param(Type(Name(String)), Name(body), $type=1.quark.String),
     Block(
      Local(
       Declaration(Type(Name(MockResponse)), Name(response),
        Call(Type(Name(MockResponse)), $type=15.quark.mock.MockResponse),
       $type=15.quark.mock.MockResponse)),
      Assign(Attr(Var(Name(response), $type=15.quark.mock.MockResponse),
        Name(code), $type=1.quark.int), Var(Name(code), $type=1.quark.int)),
      Assign(Attr(Var(Name(response), $type=15.quark.mock.MockResponse),
        Name(headers), $type=1.quark.Map<1.quark.String,1.quark.String>),
       Var(Name(headers), $type=1.quark.Map<1.quark.String,1.quark.String>)),
      Assign(Attr(Var(Name(response), $type=15.quark.mock.MockResponse),
        Name(body), $type=1.quark.String), Var(Name(body),
       $type=1.quark.String)),
      ExprStmt(Call(Attr(Var(Name(handler), $type=7.quark.HTTPHandler),
         Name(onHTTPInit), $type=7.quark.HTTPHandler.onHTTPInit),
        Var(Name(request), $type=7.quark.HTTPRequest), $type=1.quark.void)),
      ExprStmt(Call(Attr(Var(Name(handler), $type=7.quark.HTTPHandler),
         Name(onHTTPResponse), $type=7.quark.HTTPHandler.onHTTPResponse),
        Var(Name(request), $type=7.quark.HTTPRequest), Var(Name(response),
        $type=15.quark.mock.MockResponse), $type=1.quark.void)),
      ExprStmt(Call(Attr(Var(Name(handler), $type=7.quark.HTTPHandler),
         Name(onHTTPFinal), $type=7.quark.HTTPHandler.onHTTPFinal),
        Var(Name(request), $type=7.quark.HTTPRequest), $type=1.quark.void)))),

    Method(static=False, Type(Name(void)), Name(fail),
     Param(Type(Name(HTTPError)), Name(error), $type=7.quark.HTTPError),
     Block(
      ExprStmt(Call(Attr(Var(Name(handler), $type=7.quark.HTTPHandler),
         Name(onHTTPInit), $type=7.quark.HTTPHandler.onHTTPInit),
        Var(Name(request), $type=7.quark.HTTPRequest), $type=1.quark.void)),
      ExprStmt(Call(Attr(Var(Name(handler), $type=7.quark.HTTPHandler),
         Name(onHTTPError), $type=7.quark.HTTPHandler.onHTTPError),
        Var(Name(request), $type=7.quark.HTTPRequest), Var(Name(error),
        $type=7.quark.HTTPError), $type=1.quark.void)),
      ExprStmt(Call(Attr(Var(Name(handler), $type=7.quark.HTTPHandler),
         Name(onHTTPFinal), $type=7.quark.HTTPHandler.onHTTPFinal),
        Var(Name(request), $type=7.quark.HTTPRequest), $type=1.quark.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.mock.RequestEvent", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("request", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.RequestEvent),
          Name(request), $type=7.quark.HTTPRequest)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("handler", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.RequestEvent),
          Name(handler), $type=7.quark.HTTPHandler)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("request", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.RequestEvent),
          Name(request), $type=7.quark.HTTPRequest), Cast(Var(Name(value),
          $type=1.quark.Object), $type=7.quark.HTTPRequest)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("handler", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.RequestEvent),
          Name(handler), $type=7.quark.HTTPHandler), Cast(Var(Name(value),
          $type=1.quark.Object), $type=7.quark.HTTPHandler)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_Map_quark_String_quark_String__ref),
     Call(Attr(Var(Name(reflect), $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_Map_quark_String_quark_String__md),
      $type=3.quark.reflect.Class), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_mock_RequestEvent_ref), Call(Attr(Var(Name(reflect),
       $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_mock_RequestEvent_md), $type=3.quark.reflect.Class),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class)),

   Class(Name(MockResponse), Type(Name(HTTPResponse)),
    Field(static=False, Type(Name(int)), Name(code), $type=1.quark.int),
    Field(static=False, Type(Name(String)), Name(body), $type=1.quark.String),
    Field(static=False, Type(Name(Map), Type(Name(String)),
      Type(Name(String))), Name(headers), Map(,
     $type=1.quark.Map<1.quark.String,1.quark.String>),
    $type=1.quark.Map<1.quark.String,1.quark.String>),

    Method(static=False, Type(Name(int)), Name(getCode), Block(
      Return(Var(Name(code), $type=1.quark.int)))),

    Method(static=False, Type(Name(void)), Name(setCode),
     Param(Type(Name(int)), Name(code), $type=1.quark.int),
     Block(
      Assign(Attr(Var(Name(self), $type=15.quark.mock.MockResponse),
        Name(code), $type=1.quark.int), Var(Name(code), $type=1.quark.int)))),

    Method(static=False, Type(Name(String)), Name(getBody), Block(
      Return(Var(Name(body), $type=1.quark.String)))),

    Method(static=False, Type(Name(void)), Name(setBody),
     Param(Type(Name(String)), Name(body), $type=1.quark.String),
     Block(
      Assign(Attr(Var(Name(self), $type=15.quark.mock.MockResponse),
        Name(body), $type=1.quark.String), Var(Name(body),
       $type=1.quark.String)))),

    Method(static=False, Type(Name(void)), Name(setHeader),
     Param(Type(Name(String)), Name(key), $type=1.quark.String),
     Param(Type(Name(String)), Name(value), $type=1.quark.String),
     Block(
      ExprStmt(Call(Attr(Var(Name(headers),
         $type=1.quark.Map<1.quark.String,1.quark.String>), Name(__set__),
        $type=1.quark.Map.__set__), Var(Name(key), $type=1.quark.String),
        Var(Name(value), $type=1.quark.String), $type=1.quark.void)))),

    Method(static=False, Type(Name(String)), Name(getHeader),
     Param(Type(Name(String)), Name(key), $type=1.quark.String),
     Block(
      Return(Call(Attr(Var(Name(headers),
         $type=1.quark.Map<1.quark.String,1.quark.String>), Name(__get__),
        $type=1.quark.Map.__get__), Var(Name(key), $type=1.quark.String),
       $type=1.quark.String)))),

    Method(static=False, Type(Name(List), Type(Name(String))),
     Name(getHeaders), Block(
      Return(Call(Attr(Var(Name(headers),
         $type=1.quark.Map<1.quark.String,1.quark.String>), Name(keys),
        $type=1.quark.Map.keys), $type=1.quark.List<1.quark.String>)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.mock.MockResponse", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("code", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockResponse),
          Name(code), $type=1.quark.int)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("body", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockResponse),
          Name(body), $type=1.quark.String)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("headers", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockResponse),
          Name(headers), $type=1.quark.Map<1.quark.String,1.quark.String>)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("code", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockResponse),
          Name(code), $type=1.quark.int), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.int)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("body", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockResponse),
          Name(body), $type=1.quark.String), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.String)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("headers", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockResponse),
          Name(headers), $type=1.quark.Map<1.quark.String,1.quark.String>),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=1.quark.Map<1.quark.String,1.quark.String>)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_mock_MockResponse_ref), Call(Attr(Var(Name(reflect),
       $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_mock_MockResponse_md), $type=3.quark.reflect.Class),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class)),

   Class(Name(MockTask),
    Field(static=False, Type(Name(Task)), Name(task), $type=0.quark.Task),
    Field(static=False, Type(Name(float)), Name(delay), $type=1.quark.float),

    Constructor(Name(MockTask),
     Param(Type(Name(Task)), Name(task), $type=0.quark.Task),
     Param(Type(Name(float)), Name(delay), $type=1.quark.float),
     Block(
      Assign(Attr(Var(Name(self), $type=15.quark.mock.MockTask), Name(task),
       $type=0.quark.Task), Var(Name(task), $type=0.quark.Task)),
      Assign(Attr(Var(Name(self), $type=15.quark.mock.MockTask), Name(delay),
       $type=1.quark.float), Var(Name(delay), $type=1.quark.float)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.mock.MockTask", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("task", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockTask), Name(task),
         $type=0.quark.Task)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("delay", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockTask), Name(delay),
         $type=1.quark.float)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("task", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockTask), Name(task),
         $type=0.quark.Task), Cast(Var(Name(value), $type=1.quark.Object),
         $type=0.quark.Task)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("delay", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockTask), Name(delay),
         $type=1.quark.float), Cast(Var(Name(value), $type=1.quark.Object),
         $type=1.quark.float)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_mock_MockTask_ref), Call(Attr(Var(Name(reflect),
       $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_mock_MockTask_md), $type=3.quark.reflect.Class),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class)),

   Class(Name(MockRuntime), Type(Name(Runtime)),
    Field(static=False, Type(Name(Runtime)), Name(runtime),
    $type=0.quark.Runtime),
    Field(static=False, Type(Name(List), Type(Name(MockEvent))), Name(events),
     List(, $type=1.quark.List<15.quark.mock.MockEvent>),
    $type=1.quark.List<15.quark.mock.MockEvent>),
    Field(static=False, Type(Name(List), Type(Name(MockTask))), Name(tasks),
     List(, $type=1.quark.List<15.quark.mock.MockTask>),
    $type=1.quark.List<15.quark.mock.MockTask>),
    Field(static=False, Type(Name(int)), Name(executed), Number(0,
     $type=1.quark.int), $type=1.quark.int),

    Constructor(Name(MockRuntime),
     Param(Type(Name(Runtime)), Name(runtime), $type=0.quark.Runtime),
     Block(
      Assign(Attr(Var(Name(self), $type=15.quark.mock.MockRuntime),
        Name(runtime), $type=0.quark.Runtime), Var(Name(runtime),
       $type=0.quark.Runtime)))),

    Method(static=False, Annotation(Name(doc),
      String("Execute all currently scheduled tasks.", $type=1.quark.String)),
     Type(Name(void)), Name(pump), Block(
      Local(
       Declaration(Type(Name(int)), Name(size), Call(Attr(Var(Name(tasks),
          $type=1.quark.List<15.quark.mock.MockTask>), Name(size),
         $type=1.quark.List.size), $type=1.quark.int), $type=1.quark.int)),
      While(Call(Attr(Var(Name(executed), $type=1.quark.int), Name(__lt__),
        $type=1.quark.numeric.__lt__), Var(Name(size), $type=1.quark.int),
       $type=1.quark.bool), Block(
        Local(
         Declaration(Type(Name(Task)), Name(next),
          Attr(Call(Attr(Var(Name(tasks),
             $type=1.quark.List<15.quark.mock.MockTask>), Name(__get__),
            $type=1.quark.List.__get__), Var(Name(executed),
            $type=1.quark.int), $type=15.quark.mock.MockTask), Name(task),
          $type=0.quark.Task), $type=0.quark.Task)),
        ExprStmt(Call(Attr(Var(Name(next), $type=0.quark.Task),
           Name(onExecute), $type=0.quark.Task.onExecute), Var(Name(self),
          $type=15.quark.mock.MockRuntime), $type=1.quark.void)),
        Assign(Var(Name(executed), $type=1.quark.int),
         Call(Attr(Var(Name(executed), $type=1.quark.int), Name(__add__),
          $type=1.quark.numeric.__add__), Number(1, $type=1.quark.int),
         $type=1.quark.int)))))),

    Method(static=False, Type(Name(void)), Name(open),
     Param(Type(Name(String)), Name(url), $type=1.quark.String),
     Param(Type(Name(WSHandler)), Name(handler), $type=8.quark.WSHandler),
     Block(
      ExprStmt(Call(Attr(Var(Name(events),
         $type=1.quark.List<15.quark.mock.MockEvent>), Name(add),
        $type=1.quark.List.add), Call(Type(Name(SocketEvent)), Var(Name(url),
         $type=1.quark.String), Var(Name(handler), $type=8.quark.WSHandler),
        $type=15.quark.mock.SocketEvent), $type=1.quark.void)))),

    Method(static=False, Type(Name(void)), Name(request),
     Param(Type(Name(HTTPRequest)), Name(request), $type=7.quark.HTTPRequest),
     Param(Type(Name(HTTPHandler)), Name(handler), $type=7.quark.HTTPHandler),
     Block(
      ExprStmt(Call(Attr(Var(Name(events),
         $type=1.quark.List<15.quark.mock.MockEvent>), Name(add),
        $type=1.quark.List.add), Call(Type(Name(RequestEvent)),
         Var(Name(request), $type=7.quark.HTTPRequest), Var(Name(handler),
         $type=7.quark.HTTPHandler), $type=15.quark.mock.RequestEvent),
       $type=1.quark.void)))),

    Method(static=False, Type(Name(void)), Name(schedule),
     Param(Type(Name(Task)), Name(handler), $type=0.quark.Task),
     Param(Type(Name(float)), Name(delayInSeconds), $type=1.quark.float),
     Block(
      ExprStmt(Call(Attr(Var(Name(tasks),
         $type=1.quark.List<15.quark.mock.MockTask>), Name(add),
        $type=1.quark.List.add), Call(Type(Name(MockTask)), Var(Name(handler),
         $type=0.quark.Task), Var(Name(delayInSeconds), $type=1.quark.float),
        $type=15.quark.mock.MockTask), $type=1.quark.void)))),

    Method(static=False, Type(Name(Codec)), Name(codec), Block(
      Return(Call(Attr(Var(Name(runtime), $type=0.quark.Runtime), Name(codec),
        $type=0.quark.Runtime.codec), $type=1.quark.Codec)))),

    Method(static=False, Type(Name(void)), Name(serveHTTP),
     Param(Type(Name(String)), Name(url), $type=1.quark.String),
     Param(Type(Name(HTTPServlet)), Name(servlet), $type=7.quark.HTTPServlet),
     Block(
      ExprStmt(Call(Attr(Var(Name(runtime), $type=0.quark.Runtime), Name(fail),
        $type=0.quark.Runtime.fail),
        String("Runtime.serveHTTP not yet supported by the MockRuntime",
        $type=1.quark.String), $type=1.quark.void)))),

    Method(static=False, Type(Name(void)), Name(serveWS),
     Param(Type(Name(String)), Name(url), $type=1.quark.String),
     Param(Type(Name(WSServlet)), Name(servlet), $type=8.quark.WSServlet),
     Block(
      ExprStmt(Call(Attr(Var(Name(runtime), $type=0.quark.Runtime), Name(fail),
        $type=0.quark.Runtime.fail),
        String("Runtime.serveWS not yet supported by the MockRuntime",
        $type=1.quark.String), $type=1.quark.void)))),

    Method(static=False, Type(Name(void)), Name(respond),
     Param(Type(Name(HTTPRequest)), Name(request), $type=7.quark.HTTPRequest),
     Param(Type(Name(HTTPResponse)), Name(response),
     $type=7.quark.HTTPResponse),
     Block(
      ExprStmt(Call(Attr(Var(Name(runtime), $type=0.quark.Runtime), Name(fail),
        $type=0.quark.Runtime.fail),
        String("Runtime.respond not yet supported by the MockRuntime",
        $type=1.quark.String), $type=1.quark.void)))),

    Method(static=False, Type(Name(void)), Name(fail),
     Param(Type(Name(String)), Name(message), $type=1.quark.String),
     Block(
      ExprStmt(Call(Attr(Var(Name(runtime), $type=0.quark.Runtime), Name(fail),
        $type=0.quark.Runtime.fail), Var(Name(message), $type=1.quark.String),
       $type=1.quark.void)))),

    Method(static=False, Type(Name(Logger)), Name(logger),
     Param(Type(Name(String)), Name(topic), $type=1.quark.String),
     Block(
      Return(Call(Attr(Var(Name(runtime), $type=0.quark.Runtime), Name(logger),
        $type=0.quark.Runtime.logger), Var(Name(topic), $type=1.quark.String),
       $type=2.quark.Logger)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.mock.MockRuntime", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("runtime", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockRuntime),
          Name(runtime), $type=0.quark.Runtime)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("events", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockRuntime),
          Name(events), $type=1.quark.List<15.quark.mock.MockEvent>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("tasks", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockRuntime),
          Name(tasks), $type=1.quark.List<15.quark.mock.MockTask>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("executed", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockRuntime),
          Name(executed), $type=1.quark.int)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("runtime", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockRuntime),
          Name(runtime), $type=0.quark.Runtime), Cast(Var(Name(value),
          $type=1.quark.Object), $type=0.quark.Runtime)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("events", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockRuntime),
          Name(events), $type=1.quark.List<15.quark.mock.MockEvent>),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=1.quark.List<15.quark.mock.MockEvent>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("tasks", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockRuntime),
          Name(tasks), $type=1.quark.List<15.quark.mock.MockTask>),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=1.quark.List<15.quark.mock.MockTask>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("executed", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockRuntime),
          Name(executed), $type=1.quark.int), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.int)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_List_quark_mock_MockEvent__ref), Call(Attr(Var(Name(reflect),
       $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_List_quark_mock_MockEvent__md), $type=3.quark.reflect.Class),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_List_quark_mock_MockTask__ref), Call(Attr(Var(Name(reflect),
       $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_List_quark_mock_MockTask__md), $type=3.quark.reflect.Class),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_mock_MockRuntime_ref), Call(Attr(Var(Name(reflect),
       $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_mock_MockRuntime_md), $type=3.quark.reflect.Class),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class)),

   Class(Name(MockRuntimeTest),
    Field(static=False, Type(Name(MockRuntime)), Name(mock),
    $type=15.quark.mock.MockRuntime),
    Field(static=False, Type(Name(Context)), Name(old),
    $type=6.quark.concurrent.Context),
    Field(static=False, Type(Name(int)), Name(expectIdx), Number(0,
     $type=1.quark.int), $type=1.quark.int),
    Field(static=False, Type(Name(Map), Type(Name(String)),
      Type(Name(SocketEvent))), Name(sockets),
    $type=1.quark.Map<1.quark.String,15.quark.mock.SocketEvent>),

    Method(static=False, Type(Name(void)), Name(setup), Block(
      Assign(Var(Name(old), $type=6.quark.concurrent.Context),
       Call(Attr(Var(Name(Context), $type=6.quark.concurrent.Context),
         Name(current), $type=6.quark.concurrent.Context.current),
       $type=6.quark.concurrent.Context)),
      Local(
       Declaration(Type(Name(Context)), Name(ctx), Call(Type(Name(Context)),
         Call(Attr(Var(Name(Context), $type=6.quark.concurrent.Context),
           Name(current), $type=6.quark.concurrent.Context.current),
         $type=6.quark.concurrent.Context), $type=6.quark.concurrent.Context),
       $type=6.quark.concurrent.Context)),
      Assign(Var(Name(mock), $type=15.quark.mock.MockRuntime),
       Call(Type(Name(MockRuntime)), Attr(Var(Name(ctx),
         $type=6.quark.concurrent.Context), Name(_runtime),
        $type=0.quark.Runtime), $type=15.quark.mock.MockRuntime)),
      Assign(Attr(Var(Name(ctx), $type=6.quark.concurrent.Context),
        Name(_runtime), $type=0.quark.Runtime), Var(Name(mock),
       $type=15.quark.mock.MockRuntime)),
      ExprStmt(Call(Attr(Var(Name(Context), $type=6.quark.concurrent.Context),
         Name(swap), $type=6.quark.concurrent.Context.swap), Var(Name(ctx),
        $type=6.quark.concurrent.Context), $type=1.quark.void)),
      Assign(Var(Name(expectIdx), $type=1.quark.int), Number(0,
       $type=1.quark.int)),
      Assign(Var(Name(sockets),
       $type=1.quark.Map<1.quark.String,15.quark.mock.SocketEvent>), Map(,
       $type=1.quark.Map<1.quark.String,15.quark.mock.SocketEvent>)))),

    Method(static=False, Type(Name(void)), Name(teardown), Block(
      ExprStmt(Call(Attr(Var(Name(Context), $type=6.quark.concurrent.Context),
         Name(swap), $type=6.quark.concurrent.Context.swap), Var(Name(old),
        $type=6.quark.concurrent.Context), $type=1.quark.void)))),

    Method(static=False, Annotation(Name(doc),
      String("Execute any pending asynchronous tasks.", $type=1.quark.String)),
     Type(Name(void)), Name(pump), Block(
      ExprStmt(Call(Attr(Var(Name(mock), $type=15.quark.mock.MockRuntime),
         Name(pump), $type=15.quark.mock.MockRuntime.pump),
       $type=1.quark.void)))),

    Method(static=False, Type(Name(int)), Name(expectNone), Block(
      Local(
       Declaration(Type(Name(int)), Name(delta),
        Call(Attr(Call(Attr(Attr(Var(Name(mock),
             $type=15.quark.mock.MockRuntime), Name(events),
            $type=1.quark.List<15.quark.mock.MockEvent>), Name(size),
           $type=1.quark.List.size), $type=1.quark.int), Name(__sub__),
         $type=1.quark.numeric.__sub__), Var(Name(expectIdx),
         $type=1.quark.int), $type=1.quark.int), $type=1.quark.int)),
      ExprStmt(Call(Var(Name(check), $type=9.quark.test.check),
        Call(Attr(Var(Name(delta), $type=1.quark.int), Name(__eq__),
         $type=1.quark.Object.__eq__), Number(0, $type=1.quark.int),
        $type=1.quark.bool), Call(Attr(String("expected no events, got ",
          $type=1.quark.String), Name(__add__), $type=1.quark.String.__add__),
         Call(Attr(Var(Name(delta), $type=1.quark.int), Name(toString),
          $type=1.quark.int.toString), $type=1.quark.String),
        $type=1.quark.String), $type=1.quark.bool)),
      Return(Var(Name(delta), $type=1.quark.int)))),

    Method(static=False, Type(Name(MockEvent)), Name(expectEvent),
     Param(Type(Name(String)), Name(expectedType), $type=1.quark.String),
     Block(
      Local(
       Declaration(Type(Name(MockEvent)), Name(result), Null(null,
        $type=1.quark.Object), $type=15.quark.mock.MockEvent)),
      If(Call(Var(Name(check), $type=9.quark.test.check),
        Call(Attr(Call(Attr(Attr(Var(Name(mock),
             $type=15.quark.mock.MockRuntime), Name(events),
            $type=1.quark.List<15.quark.mock.MockEvent>), Name(size),
           $type=1.quark.List.size), $type=1.quark.int), Name(__gt__),
         $type=1.quark.numeric.__gt__), Var(Name(expectIdx),
         $type=1.quark.int), $type=1.quark.bool),
        Call(Attr(Call(Attr(String("expected ", $type=1.quark.String),
            Name(__add__), $type=1.quark.String.__add__),
           Var(Name(expectedType), $type=1.quark.String),
          $type=1.quark.String), Name(__add__), $type=1.quark.String.__add__),
         String(" event, got no events", $type=1.quark.String),
        $type=1.quark.String), $type=1.quark.bool), Block(
        Local(
         Declaration(Type(Name(String)), Name(type),
          Call(Attr(Call(Attr(Attr(Var(Name(mock),
               $type=15.quark.mock.MockRuntime), Name(events),
              $type=1.quark.List<15.quark.mock.MockEvent>), Name(__get__),
             $type=1.quark.List.__get__), Var(Name(expectIdx),
             $type=1.quark.int), $type=15.quark.mock.MockEvent), Name(getType),
           $type=15.quark.mock.MockEvent.getType), $type=1.quark.String),
         $type=1.quark.String)),
        If(Call(Var(Name(check), $type=9.quark.test.check),
          Call(Attr(Var(Name(type), $type=1.quark.String), Name(__eq__),
           $type=1.quark.Object.__eq__), Var(Name(expectedType),
           $type=1.quark.String), $type=1.quark.bool),
          Call(Attr(Call(Attr(Call(Attr(String("expected ",
                $type=1.quark.String), Name(__add__),
               $type=1.quark.String.__add__), Var(Name(expectedType),
               $type=1.quark.String), $type=1.quark.String), Name(__add__),
             $type=1.quark.String.__add__), String(" event, got ",
             $type=1.quark.String), $type=1.quark.String), Name(__add__),
           $type=1.quark.String.__add__), Var(Name(type),
           $type=1.quark.String), $type=1.quark.String), $type=1.quark.bool),
         Block(
          Assign(Var(Name(result), $type=15.quark.mock.MockEvent),
           Call(Attr(Attr(Var(Name(mock), $type=15.quark.mock.MockRuntime),
              Name(events), $type=1.quark.List<15.quark.mock.MockEvent>),
             Name(__get__), $type=1.quark.List.__get__), Var(Name(expectIdx),
            $type=1.quark.int), $type=15.quark.mock.MockEvent)))))),
      Assign(Var(Name(expectIdx), $type=1.quark.int),
       Call(Attr(Var(Name(expectIdx), $type=1.quark.int), Name(__add__),
        $type=1.quark.numeric.__add__), Number(1, $type=1.quark.int),
       $type=1.quark.int)),
      Return(Var(Name(result), $type=15.quark.mock.MockEvent)))),

    Method(static=False, Type(Name(RequestEvent)), Name(expectRequest),
     Param(Type(Name(String)), Name(expectedUrl), $type=1.quark.String),
     Block(
      Local(
       Declaration(Type(Name(RequestEvent)), Name(rev),
        Cast(Call(Var(Name(expectEvent),
          $type=15.quark.mock.MockRuntimeTest.expectEvent), String("request",
          $type=1.quark.String), $type=15.quark.mock.MockEvent),
        $type=15.quark.mock.RequestEvent), $type=15.quark.mock.RequestEvent)),
      If(Call(Attr(Var(Name(rev), $type=15.quark.mock.RequestEvent),
         Name(__ne__), $type=1.quark.Object.__ne__), Null(null,
        $type=1.quark.Object), $type=1.quark.bool), Block(
        If(Call(Attr(Var(Name(expectedUrl), $type=1.quark.String),
           Name(__eq__), $type=1.quark.Object.__eq__), Null(null,
          $type=1.quark.Object), $type=1.quark.bool), Block(
          Return(Var(Name(rev), $type=15.quark.mock.RequestEvent)))),
        Local(
         Declaration(Type(Name(String)), Name(url),
          Call(Attr(Attr(Var(Name(rev), $type=15.quark.mock.RequestEvent),
             Name(request), $type=7.quark.HTTPRequest), Name(getUrl),
           $type=7.quark.HTTPRequest.getUrl), $type=1.quark.String),
         $type=1.quark.String)),
        If(Call(Var(Name(check), $type=9.quark.test.check),
          Call(Attr(Var(Name(url), $type=1.quark.String), Name(__eq__),
           $type=1.quark.Object.__eq__), Var(Name(expectedUrl),
           $type=1.quark.String), $type=1.quark.bool),
          Call(Attr(Call(Attr(Call(Attr(Call(Attr(String("expected request event to url(",
                  $type=1.quark.String), Name(__add__),
                 $type=1.quark.String.__add__), Var(Name(expectedUrl),
                 $type=1.quark.String), $type=1.quark.String), Name(__add__),
               $type=1.quark.String.__add__), String("), got url(",
               $type=1.quark.String), $type=1.quark.String), Name(__add__),
             $type=1.quark.String.__add__), Var(Name(url),
             $type=1.quark.String), $type=1.quark.String), Name(__add__),
           $type=1.quark.String.__add__), String(")", $type=1.quark.String),
          $type=1.quark.String), $type=1.quark.bool), Block(
          Return(Var(Name(rev), $type=15.quark.mock.RequestEvent)))))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(SocketEvent)), Name(expectSocket),
     Param(Type(Name(String)), Name(expectedUrl), $type=1.quark.String),
     Block(
      Local(
       Declaration(Type(Name(SocketEvent)), Name(sev),
        Cast(Call(Var(Name(expectEvent),
          $type=15.quark.mock.MockRuntimeTest.expectEvent), String("socket",
          $type=1.quark.String), $type=15.quark.mock.MockEvent),
        $type=15.quark.mock.SocketEvent), $type=15.quark.mock.SocketEvent)),
      If(Call(Attr(Var(Name(sev), $type=15.quark.mock.SocketEvent),
         Name(__ne__), $type=1.quark.Object.__ne__), Null(null,
        $type=1.quark.Object), $type=1.quark.bool), Block(
        ExprStmt(Call(Attr(Var(Name(sockets),
           $type=1.quark.Map<1.quark.String,15.quark.mock.SocketEvent>),
           Name(__set__), $type=1.quark.Map.__set__), Attr(Var(Name(sev),
           $type=15.quark.mock.SocketEvent), Name(url), $type=1.quark.String),
          Var(Name(sev), $type=15.quark.mock.SocketEvent),
         $type=1.quark.void)),
        If(Call(Attr(Var(Name(expectedUrl), $type=1.quark.String),
           Name(__eq__), $type=1.quark.Object.__eq__), Null(null,
          $type=1.quark.Object), $type=1.quark.bool), Block(
          Return(Var(Name(sev), $type=15.quark.mock.SocketEvent)))),
        Local(
         Declaration(Type(Name(String)), Name(url), Attr(Var(Name(sev),
           $type=15.quark.mock.SocketEvent), Name(url), $type=1.quark.String),
         $type=1.quark.String)),
        If(Call(Var(Name(check), $type=9.quark.test.check),
          Call(Attr(Var(Name(url), $type=1.quark.String), Name(__eq__),
           $type=1.quark.Object.__eq__), Var(Name(expectedUrl),
           $type=1.quark.String), $type=1.quark.bool),
          Call(Attr(Call(Attr(Call(Attr(Call(Attr(String("expected socket event to url(",
                  $type=1.quark.String), Name(__add__),
                 $type=1.quark.String.__add__), Var(Name(expectedUrl),
                 $type=1.quark.String), $type=1.quark.String), Name(__add__),
               $type=1.quark.String.__add__), String("), got url(",
               $type=1.quark.String), $type=1.quark.String), Name(__add__),
             $type=1.quark.String.__add__), Var(Name(url),
             $type=1.quark.String), $type=1.quark.String), Name(__add__),
           $type=1.quark.String.__add__), String(")", $type=1.quark.String),
          $type=1.quark.String), $type=1.quark.bool), Block(
          Return(Var(Name(sev), $type=15.quark.mock.SocketEvent)))))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.mock.MockRuntimeTest", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("mock", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockRuntimeTest),
          Name(mock), $type=15.quark.mock.MockRuntime)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("old", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockRuntimeTest),
          Name(old), $type=6.quark.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("expectIdx",
        $type=1.quark.String), $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockRuntimeTest),
          Name(expectIdx), $type=1.quark.int)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("sockets", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=15.quark.mock.MockRuntimeTest),
          Name(sockets),
         $type=1.quark.Map<1.quark.String,15.quark.mock.SocketEvent>)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("mock", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockRuntimeTest),
          Name(mock), $type=15.quark.mock.MockRuntime), Cast(Var(Name(value),
          $type=1.quark.Object), $type=15.quark.mock.MockRuntime)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("old", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockRuntimeTest),
          Name(old), $type=6.quark.concurrent.Context), Cast(Var(Name(value),
          $type=1.quark.Object), $type=6.quark.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("expectIdx",
        $type=1.quark.String), $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockRuntimeTest),
          Name(expectIdx), $type=1.quark.int), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.int)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("sockets", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=15.quark.mock.MockRuntimeTest),
          Name(sockets),
         $type=1.quark.Map<1.quark.String,15.quark.mock.SocketEvent>),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=1.quark.Map<1.quark.String,15.quark.mock.SocketEvent>)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_Map_quark_String_quark_mock_SocketEvent__ref),
     Call(Attr(Var(Name(reflect), $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_Map_quark_String_quark_mock_SocketEvent__md),
      $type=3.quark.reflect.Class), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_mock_MockRuntimeTest_ref), Call(Attr(Var(Name(reflect),
       $type=3.quark.reflect), Name(__register__),
      $type=3.quark.reflect.__register__), Attr(Attr(Var(Name(quark_md),
        $type=18.quark_md), Name(Root), $type=18.quark_md.Root),
       Name(quark_mock_MockRuntimeTest_md), $type=3.quark.reflect.Class),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class))))
)