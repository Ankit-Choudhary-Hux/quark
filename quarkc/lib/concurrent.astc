File(Import(Name(quark)),
 Include(url=io/datawire/quark/runtime/Condition.java),
 Include(url=io/datawire/quark/runtime/Lock.java),
 Include(url=io/datawire/quark/runtime/Mutex.java),
 Include(url=io/datawire/quark/runtime/TLS.java),
 Include(url=io/datawire/quark/runtime/TLSInitializer.java),

 Package(Name(quark),

  Package(Name(concurrent),

   Interface(Annotation(Name(doc),
     String("The contract between event implementations and Collector",
     $type=1.quark.String)), Name(Event),

    Method(static=False, Type(Name(EventContext)), Name(getContext)),

    Method(static=False, Type(Name(void)), Name(fireEvent)),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_Event_ref), Attr(Attr(Var(Name(quark_md),
       $type=12.quark_md), Name(Root), $type=12.quark_md.Root),
      Name(quark_concurrent_Event_md), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class)),

   Interface(Annotation(Name(doc),
     String("event handler for a future completion", $type=1.quark.String)),
    Name(FutureListener),

    Method(static=False, Type(Name(void)), Name(onFuture),
     Param(Type(Name(Future)), Name(future), $type=6.quark.concurrent.Future),
     Block()),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_FutureListener_ref), Attr(Attr(Var(Name(quark_md),
       $type=12.quark_md), Name(Root), $type=12.quark_md.Root),
      Name(quark_concurrent_FutureListener_md), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class)),

   Class(Annotation(Name(doc),
     String("internal class that binds a listener to a future",
     $type=1.quark.String)), Name(FutureCompletion), Type(Name(Event)),
    Field(static=False, Type(Name(Future)), Name(future),
    $type=6.quark.concurrent.Future),
    Field(static=False, Type(Name(FutureListener)), Name(listener),
    $type=6.quark.concurrent.FutureListener),

    Constructor(Name(FutureCompletion),
     Param(Type(Name(Future)), Name(future), $type=6.quark.concurrent.Future),
     Param(Type(Name(FutureListener)), Name(listener),
     $type=6.quark.concurrent.FutureListener),
     Block(
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.FutureCompletion),
        Name(future), $type=6.quark.concurrent.Future), Var(Name(future),
       $type=6.quark.concurrent.Future)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.FutureCompletion),
        Name(listener), $type=6.quark.concurrent.FutureListener),
       Var(Name(listener), $type=6.quark.concurrent.FutureListener)))),

    Method(static=False, Type(Name(EventContext)), Name(getContext), Block(
      Return(Attr(Var(Name(self), $type=6.quark.concurrent.FutureCompletion),
        Name(future), $type=6.quark.concurrent.Future)))),

    Method(static=False, Type(Name(void)), Name(fireEvent), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.FutureCompletion), Name(listener),
         $type=6.quark.concurrent.FutureListener), Name(onFuture),
        $type=6.quark.concurrent.FutureListener.onFuture), Attr(Var(Name(self),
         $type=6.quark.concurrent.FutureCompletion), Name(future),
        $type=6.quark.concurrent.Future), $type=1.quark.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.concurrent.FutureCompletion",
       $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("future", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.FutureCompletion),
          Name(future), $type=6.quark.concurrent.Future)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("listener", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.FutureCompletion),
          Name(listener), $type=6.quark.concurrent.FutureListener)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("future", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.FutureCompletion),
          Name(future), $type=6.quark.concurrent.Future), Cast(Var(Name(value),
          $type=1.quark.Object), $type=6.quark.concurrent.Future)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("listener", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.FutureCompletion),
          Name(listener), $type=6.quark.concurrent.FutureListener),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.FutureListener)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_FutureCompletion_ref), Attr(Attr(Var(Name(quark_md),
       $type=12.quark_md), Name(Root), $type=12.quark_md.Root),
      Name(quark_concurrent_FutureCompletion_md), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class)),

   Class(Annotation(Name(doc),
     String("Captures the current context, base class for all event source implementations",
     $type=1.quark.String)), Name(EventContext),
    Field(static=False, Type(Name(Context)), Name(_context),
    $type=6.quark.concurrent.Context),

    Constructor(Name(EventContext), Block(
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.EventContext),
        Name(_context), $type=6.quark.concurrent.Context),
       Call(Attr(Var(Name(Context), $type=6.quark.concurrent.Context),
         Name(current), $type=6.quark.concurrent.Context.current),
       $type=6.quark.concurrent.Context)))),

    Method(static=False, Type(Name(Context)), Name(getContext), Block(
      Return(Attr(Var(Name(self), $type=6.quark.concurrent.EventContext),
        Name(_context), $type=6.quark.concurrent.Context)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.concurrent.EventContext", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_context", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.EventContext),
          Name(_context), $type=6.quark.concurrent.Context)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_context", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.EventContext),
          Name(_context), $type=6.quark.concurrent.Context),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.Context)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_EventContext_ref), Attr(Attr(Var(Name(quark_md),
       $type=12.quark_md), Name(Root), $type=12.quark_md.Root),
      Name(quark_concurrent_EventContext_md), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class)),

   Class(Annotation(Name(doc), String("The base class for value objects",
     $type=1.quark.String)), Name(Future), Type(Name(EventContext)),
    Field(static=False, Type(Name(bool)), Name(_finished), $type=1.quark.bool),
    Field(static=False, Type(Name(String)), Name(_error),
    $type=1.quark.String),
    Field(static=False, Type(Name(List), Type(Name(FutureCompletion))),
     Name(_callbacks),
    $type=1.quark.List<6.quark.concurrent.FutureCompletion>),
    Field(static=False, Type(Name(Lock)), Name(_lock),
    $type=6.quark.concurrent.Lock),

    Constructor(Name(Future), Block(
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
        Name(_finished), $type=1.quark.bool), Bool(false, $type=1.quark.bool)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
        Name(_callbacks),
       $type=1.quark.List<6.quark.concurrent.FutureCompletion>), Null(null,
       $type=1.quark.Object)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
        Name(_lock), $type=6.quark.concurrent.Lock), Call(Type(Name(Lock)),
       $type=6.quark.concurrent.Lock)))),

    Method(static=False, Type(Name(void)), Name(onFinished),
     Param(Type(Name(FutureListener)), Name(callback),
     $type=6.quark.concurrent.FutureListener),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_lock), $type=6.quark.concurrent.Lock), Name(acquire),
        $type=6.quark.concurrent.Mutex.acquire), $type=1.quark.void)),
      If(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
        Name(_finished), $type=1.quark.bool), Block(
        ExprStmt(Call(Attr(Attr(Attr(Var(Name(self),
             $type=6.quark.concurrent.Future), Name(_context),
            $type=6.quark.concurrent.Context), Name(collector),
           $type=6.quark.concurrent.Collector), Name(put),
          $type=6.quark.concurrent.Collector.put),
          Call(Type(Name(FutureCompletion)), Var(Name(self),
           $type=6.quark.concurrent.Future), Var(Name(callback),
           $type=6.quark.concurrent.FutureListener),
          $type=6.quark.concurrent.FutureCompletion), $type=1.quark.void))),
       Block(
        If(Call(Attr(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
            Name(_callbacks),
           $type=1.quark.List<6.quark.concurrent.FutureCompletion>),
           Name(__eq__), $type=1.quark.Object.__eq__), Null(null,
          $type=1.quark.Object), $type=1.quark.bool), Block(
          Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
            Name(_callbacks),
           $type=1.quark.List<6.quark.concurrent.FutureCompletion>), List(,
           $type=1.quark.List<6.quark.concurrent.FutureCompletion>)))),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.Future), Name(_callbacks),
           $type=1.quark.List<6.quark.concurrent.FutureCompletion>), Name(add),
          $type=1.quark.List.add), Call(Type(Name(FutureCompletion)),
           Var(Name(self), $type=6.quark.concurrent.Future),
           Var(Name(callback), $type=6.quark.concurrent.FutureListener),
          $type=6.quark.concurrent.FutureCompletion), $type=1.quark.void)))),
      ExprStmt(Call(Attr(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_lock), $type=6.quark.concurrent.Lock), Name(release),
        $type=6.quark.concurrent.Mutex.release), $type=1.quark.void)))),

    Method(static=False, Type(Name(void)), Name(finish),
     Param(Type(Name(String)), Name(error), $type=1.quark.String),
     Block(
      Local(
       Declaration(Type(Name(List), Type(Name(FutureCompletion))),
        Name(callbacks), Null(null, $type=1.quark.Object),
       $type=1.quark.List<6.quark.concurrent.FutureCompletion>)),
      ExprStmt(Call(Attr(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_lock), $type=6.quark.concurrent.Lock), Name(acquire),
        $type=6.quark.concurrent.Mutex.acquire), $type=1.quark.void)),
      If(Call(Attr(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_finished), $type=1.quark.bool), Name(__not__),
        $type=1.quark.bool.__not__), $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_finished), $type=1.quark.bool), Bool(true,
         $type=1.quark.bool)),
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_error), $type=1.quark.String), Var(Name(error),
         $type=1.quark.String)),
        Assign(Var(Name(callbacks),
         $type=1.quark.List<6.quark.concurrent.FutureCompletion>),
         Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_callbacks),
         $type=1.quark.List<6.quark.concurrent.FutureCompletion>)),
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_callbacks),
         $type=1.quark.List<6.quark.concurrent.FutureCompletion>), Null(null,
         $type=1.quark.Object)))),
      ExprStmt(Call(Attr(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_lock), $type=6.quark.concurrent.Lock), Name(release),
        $type=6.quark.concurrent.Mutex.release), $type=1.quark.void)),
      If(Call(Attr(Var(Name(callbacks),
         $type=1.quark.List<6.quark.concurrent.FutureCompletion>),
         Name(__ne__), $type=1.quark.Object.__ne__), Null(null,
        $type=1.quark.Object), $type=1.quark.bool), Block(
        Local(
         Declaration(Type(Name(int)), Name(i), Number(0, $type=1.quark.int),
         $type=1.quark.int)),
        While(Call(Attr(Var(Name(i), $type=1.quark.int), Name(__lt__),
          $type=1.quark.numeric.__lt__), Call(Attr(Var(Name(callbacks),
            $type=1.quark.List<6.quark.concurrent.FutureCompletion>),
            Name(size), $type=1.quark.List.size), $type=1.quark.int),
         $type=1.quark.bool), Block(
          ExprStmt(Call(Attr(Attr(Attr(Var(Name(self),
               $type=6.quark.concurrent.Future), Name(_context),
              $type=6.quark.concurrent.Context), Name(collector),
             $type=6.quark.concurrent.Collector), Name(put),
            $type=6.quark.concurrent.Collector.put),
            Call(Attr(Var(Name(callbacks),
              $type=1.quark.List<6.quark.concurrent.FutureCompletion>),
              Name(__get__), $type=1.quark.List.__get__), Var(Name(i),
             $type=1.quark.int), $type=6.quark.concurrent.FutureCompletion),
           $type=1.quark.void)),
          Assign(Var(Name(i), $type=1.quark.int), Call(Attr(Var(Name(i),
             $type=1.quark.int), Name(__add__), $type=1.quark.numeric.__add__),
            Number(1, $type=1.quark.int), $type=1.quark.int)))))))),

    Method(static=False, Type(Name(bool)), Name(isFinished), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_lock), $type=6.quark.concurrent.Lock), Name(acquire),
        $type=6.quark.concurrent.Mutex.acquire), $type=1.quark.void)),
      Local(
       Declaration(Type(Name(bool)), Name(finished), Attr(Var(Name(self),
         $type=6.quark.concurrent.Future), Name(_finished),
        $type=1.quark.bool), $type=1.quark.bool)),
      ExprStmt(Call(Attr(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_lock), $type=6.quark.concurrent.Lock), Name(release),
        $type=6.quark.concurrent.Mutex.release), $type=1.quark.void)),
      Return(Var(Name(finished), $type=1.quark.bool)))),

    Method(static=False, Type(Name(String)), Name(getError), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_lock), $type=6.quark.concurrent.Lock), Name(acquire),
        $type=6.quark.concurrent.Mutex.acquire), $type=1.quark.void)),
      Local(
       Declaration(Type(Name(String)), Name(error), Attr(Var(Name(self),
         $type=6.quark.concurrent.Future), Name(_error), $type=1.quark.String),
       $type=1.quark.String)),
      ExprStmt(Call(Attr(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_lock), $type=6.quark.concurrent.Lock), Name(release),
        $type=6.quark.concurrent.Mutex.release), $type=1.quark.void)),
      Return(Var(Name(error), $type=1.quark.String)))),

    Method(static=False, Type(Name(void)), Name(await),
     Param(Type(Name(float)), Name(timeout), $type=1.quark.float),
     Block(
      ExprStmt(Call(Attr(Call(Type(Name(FutureWait)),
         $type=6.quark.concurrent.FutureWait), Name(wait),
        $type=6.quark.concurrent.FutureWait.wait), Var(Name(self),
        $type=6.quark.concurrent.Future), Var(Name(timeout),
        $type=1.quark.float), $type=1.quark.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.concurrent.Future", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_context", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_context), $type=6.quark.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_finished",
        $type=1.quark.String), $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_finished), $type=1.quark.bool)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_error", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_error), $type=1.quark.String)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_callbacks",
        $type=1.quark.String), $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_callbacks),
         $type=1.quark.List<6.quark.concurrent.FutureCompletion>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_lock", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_lock), $type=6.quark.concurrent.Lock)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_context", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_context), $type=6.quark.concurrent.Context),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_finished",
        $type=1.quark.String), $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_finished), $type=1.quark.bool), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.bool)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_error", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_error), $type=1.quark.String), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.String)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_callbacks",
        $type=1.quark.String), $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_callbacks),
         $type=1.quark.List<6.quark.concurrent.FutureCompletion>),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=1.quark.List<6.quark.concurrent.FutureCompletion>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_lock", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Future),
          Name(_lock), $type=6.quark.concurrent.Lock), Cast(Var(Name(value),
          $type=1.quark.Object), $type=6.quark.concurrent.Lock)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_List_quark_concurrent_FutureCompletion__ref),
     Attr(Attr(Var(Name(quark_md), $type=12.quark_md), Name(Root),
      $type=12.quark_md.Root),
      Name(quark_List_quark_concurrent_FutureCompletion__md),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_Future_ref), Attr(Attr(Var(Name(quark_md),
       $type=12.quark_md), Name(Root), $type=12.quark_md.Root),
      Name(quark_concurrent_Future_md), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class)),

   Class(Annotation(Name(doc), String("Synchronization point for a Future.)",
     $type=1.quark.String)), Name(FutureWait), Type(Name(FutureListener)),
    Field(static=False, Type(Name(Condition)), Name(_lock),
    $type=6.quark.concurrent.Condition),
    Field(static=False, Type(Name(Future)), Name(_future),
    $type=6.quark.concurrent.Future),

    Constructor(Name(FutureWait), Block(
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.FutureWait),
        Name(_lock), $type=6.quark.concurrent.Condition),
       Call(Type(Name(Condition)), $type=6.quark.concurrent.Condition)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.FutureWait),
        Name(_future), $type=6.quark.concurrent.Future), Null(null,
       $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(wait),
     Param(Type(Name(Future)), Name(future), $type=6.quark.concurrent.Future),
     Param(Type(Name(float)), Name(timeout), $type=1.quark.float),
     Block(
      If(Call(Attr(Var(Name(future), $type=6.quark.concurrent.Future),
         Name(isFinished), $type=6.quark.concurrent.Future.isFinished),
       $type=1.quark.bool), Block(
        Return())),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.FutureWait),
        Name(_future), $type=6.quark.concurrent.Future), Var(Name(future),
       $type=6.quark.concurrent.Future)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.FutureWait), Name(_future),
         $type=6.quark.concurrent.Future), Name(onFinished),
        $type=6.quark.concurrent.Future.onFinished), Var(Name(self),
        $type=6.quark.concurrent.FutureWait), $type=1.quark.void)),
      Local(
       Declaration(Type(Name(long)), Name(rounded),
        Call(Attr(Call(Attr(Number(1000.0, $type=1.quark.float), Name(__mul__),
           $type=1.quark.numeric.__mul__), Var(Name(timeout),
           $type=1.quark.float), $type=1.quark.float), Name(round),
         $type=1.quark.float.round), $type=1.quark.long), $type=1.quark.long)),
      Local(
       Declaration(Type(Name(long)), Name(deadline),
        Call(Attr(Call(Var(Name(now), $type=0.quark.now), $type=1.quark.long),
          Name(__add__), $type=1.quark.numeric.__add__), Var(Name(rounded),
         $type=1.quark.long), $type=1.quark.long), $type=1.quark.long)),
      While(Call(Attr(Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.FutureWait), Name(_future),
           $type=6.quark.concurrent.Future), Name(isFinished),
          $type=6.quark.concurrent.Future.isFinished), $type=1.quark.bool),
         Name(__not__), $type=1.quark.bool.__not__), $type=1.quark.bool),
       Block(
        Local(
         Declaration(Type(Name(long)), Name(remaining),
          Call(Attr(Var(Name(deadline), $type=1.quark.long), Name(__sub__),
           $type=1.quark.numeric.__sub__), Call(Var(Name(now),
            $type=0.quark.now), $type=1.quark.long), $type=1.quark.long),
         $type=1.quark.long)),
        If(Call(Attr(Var(Name(rounded), $type=1.quark.long), Name(__ne__),
          $type=1.quark.Object.__ne__), Number(0, $type=1.quark.int),
         $type=1.quark.bool), Block(
          If(Call(Attr(Var(Name(remaining), $type=1.quark.long), Name(__le__),
            $type=1.quark.numeric.__le__), Number(0, $type=1.quark.int),
           $type=1.quark.bool), Block(
            Break()))), Block(
          Assign(Var(Name(remaining), $type=1.quark.long), Number(3141,
           $type=1.quark.int)))),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.FutureWait), Name(_lock),
           $type=6.quark.concurrent.Condition), Name(acquire),
          $type=6.quark.concurrent.Mutex.acquire), $type=1.quark.void)),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.FutureWait), Name(_lock),
           $type=6.quark.concurrent.Condition), Name(waitWakeup),
          $type=6.quark.concurrent.Condition.waitWakeup), Var(Name(remaining),
          $type=1.quark.long), $type=1.quark.void)),
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.FutureWait), Name(_lock),
           $type=6.quark.concurrent.Condition), Name(release),
          $type=6.quark.concurrent.Mutex.release), $type=1.quark.void)))),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.FutureWait),
        Name(_future), $type=6.quark.concurrent.Future), Null(null,
       $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(onFuture),
     Param(Type(Name(Future)), Name(future), $type=6.quark.concurrent.Future),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.FutureWait), Name(_lock),
         $type=6.quark.concurrent.Condition), Name(acquire),
        $type=6.quark.concurrent.Mutex.acquire), $type=1.quark.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.FutureWait), Name(_lock),
         $type=6.quark.concurrent.Condition), Name(wakeup),
        $type=6.quark.concurrent.Condition.wakeup), $type=1.quark.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.FutureWait), Name(_lock),
         $type=6.quark.concurrent.Condition), Name(release),
        $type=6.quark.concurrent.Mutex.release), $type=1.quark.void)))),

    Method(static=True, Type(Name(Future)), Name(waitFor),
     Param(Type(Name(Future)), Name(future), $type=6.quark.concurrent.Future),
     Param(Type(Name(float)), Name(timeout), $type=1.quark.float),
     Block(
      If(Bool(false, $type=1.quark.bool), Block(
        Local(
         Declaration(Type(Name(FutureWait)), Name(w),
          Call(Type(Name(FutureWait)), $type=6.quark.concurrent.FutureWait),
         $type=6.quark.concurrent.FutureWait)),
        ExprStmt(Call(Attr(Var(Name(w), $type=6.quark.concurrent.FutureWait),
           Name(wait), $type=6.quark.concurrent.FutureWait.wait),
          Var(Name(future), $type=6.quark.concurrent.Future),
          Var(Name(timeout), $type=1.quark.float), $type=1.quark.void)),
        If(Call(Attr(Call(Attr(Var(Name(future),
             $type=6.quark.concurrent.Future), Name(isFinished),
            $type=6.quark.concurrent.Future.isFinished), $type=1.quark.bool),
           Name(__not__), $type=1.quark.bool.__not__), $type=1.quark.bool),
         Block()))),
      Return(Var(Name(future), $type=6.quark.concurrent.Future)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.concurrent.FutureWait", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_lock", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.FutureWait),
          Name(_lock), $type=6.quark.concurrent.Condition)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_future", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.FutureWait),
          Name(_future), $type=6.quark.concurrent.Future)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_lock", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.FutureWait),
          Name(_lock), $type=6.quark.concurrent.Condition),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.Condition)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_future", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.FutureWait),
          Name(_future), $type=6.quark.concurrent.Future),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.Future)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_FutureWait_ref), Attr(Attr(Var(Name(quark_md),
       $type=12.quark_md), Name(Root), $type=12.quark_md.Root),
      Name(quark_concurrent_FutureWait_md), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class)),

   Class(Annotation(Name(doc), String("A simple FIFO", $type=1.quark.String)),
    Name(Queue), TypeParam(Name(T)),
    Field(static=False, Type(Name(List), Type(Name(T))), Name(items),
    $type=1.quark.List<6.quark.concurrent.Queue.T>),
    Field(static=False, Type(Name(int)), Name(head), $type=1.quark.int),
    Field(static=False, Type(Name(int)), Name(tail), $type=1.quark.int),

    Constructor(Name(Queue), Block(
      Assign(Attr(Var(Name(self),
        $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
        Name(items), $type=1.quark.List<6.quark.concurrent.Queue.T>),
       Call(Type(Name(List), Type(Name(T))),
       $type=1.quark.List<6.quark.concurrent.Queue.T>)),
      Assign(Attr(Var(Name(self),
        $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
        Name(head), $type=1.quark.int), Number(0, $type=1.quark.int)),
      Assign(Attr(Var(Name(self),
        $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
        Name(tail), $type=1.quark.int), Number(0, $type=1.quark.int)))),

    Method(static=False, Type(Name(void)), Name(put),
     Param(Type(Name(T)), Name(item), $type=6.quark.concurrent.Queue.T),
     Block(
      If(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
          Name(tail), $type=1.quark.int), Name(__lt__),
        $type=1.quark.numeric.__lt__), Call(Attr(Attr(Var(Name(self),
           $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
           Name(items), $type=1.quark.List<6.quark.concurrent.Queue.T>),
          Name(size), $type=1.quark.List.size), $type=1.quark.int),
       $type=1.quark.bool), Block(
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
            Name(items), $type=1.quark.List<6.quark.concurrent.Queue.T>),
           Name(__set__), $type=1.quark.List.__set__), Attr(Var(Name(self),
           $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
           Name(tail), $type=1.quark.int), Var(Name(item),
          $type=6.quark.concurrent.Queue.T), $type=1.quark.void))), Block(
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
            Name(items), $type=1.quark.List<6.quark.concurrent.Queue.T>),
           Name(add), $type=1.quark.List.add), Var(Name(item),
          $type=6.quark.concurrent.Queue.T), $type=1.quark.void)))),
      Assign(Attr(Var(Name(self),
        $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
        Name(tail), $type=1.quark.int), Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
          Name(tail), $type=1.quark.int), Name(__add__),
        $type=1.quark.numeric.__add__), Number(1, $type=1.quark.int),
       $type=1.quark.int)))),

    Method(static=False, Type(Name(T)), Name(get), Block(
      Local(
       Declaration(Type(Name(T)), Name(item), Null(null, $type=1.quark.Object),
       $type=6.quark.concurrent.Queue.T)),
      If(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
          Name(head), $type=1.quark.int), Name(__lt__),
        $type=1.quark.numeric.__lt__), Attr(Var(Name(self),
         $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
         Name(tail), $type=1.quark.int), $type=1.quark.bool), Block(
        Assign(Var(Name(item), $type=6.quark.concurrent.Queue.T),
         Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
            Name(items), $type=1.quark.List<6.quark.concurrent.Queue.T>),
           Name(__get__), $type=1.quark.List.__get__), Attr(Var(Name(self),
           $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
           Name(head), $type=1.quark.int), $type=6.quark.concurrent.Queue.T)),
        Assign(Attr(Var(Name(self),
          $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
          Name(head), $type=1.quark.int), Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
            Name(head), $type=1.quark.int), Name(__add__),
          $type=1.quark.numeric.__add__), Number(1, $type=1.quark.int),
         $type=1.quark.int))), Block(
        If(Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
            Name(head), $type=1.quark.int), Name(__gt__),
          $type=1.quark.numeric.__gt__), Number(0, $type=1.quark.int),
         $type=1.quark.bool), Block(
          Assign(Attr(Var(Name(self),
            $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
            Name(head), $type=1.quark.int), Number(0, $type=1.quark.int)),
          Assign(Attr(Var(Name(self),
            $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
            Name(tail), $type=1.quark.int), Number(0, $type=1.quark.int)))))),
      Return(Var(Name(item), $type=6.quark.concurrent.Queue.T)))),

    Method(static=False, Type(Name(int)), Name(size), Block(
      Return(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
          Name(tail), $type=1.quark.int), Name(__sub__),
        $type=1.quark.numeric.__sub__), Attr(Var(Name(self),
         $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
         Name(head), $type=1.quark.int), $type=1.quark.int)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.concurrent.Queue<quark.Object>",
       $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("items", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self),
          $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
          Name(items), $type=1.quark.List<6.quark.concurrent.Queue.T>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("head", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self),
          $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
          Name(head), $type=1.quark.int)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("tail", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self),
          $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
          Name(tail), $type=1.quark.int)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("items", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self),
          $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
          Name(items), $type=1.quark.List<6.quark.concurrent.Queue.T>),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=1.quark.List<6.quark.concurrent.Queue.T>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("head", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self),
          $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
          Name(head), $type=1.quark.int), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.int)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("tail", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self),
          $type=6.quark.concurrent.Queue<6.quark.concurrent.Queue.T>),
          Name(tail), $type=1.quark.int), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.int))))))),

   Class(Annotation(Name(doc),
     String("Fire events one by one with no locks held",
     $type=1.quark.String)), Name(CollectorExecutor), Type(Name(Task)),
    Field(static=False, Type(Name(Queue), Type(Name(Event))), Name(events),
    $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
    Field(static=False, Type(Name(Collector)), Name(collector),
    $type=6.quark.concurrent.Collector),

    Constructor(Name(CollectorExecutor),
     Param(Type(Name(Collector)), Name(collector),
     $type=6.quark.concurrent.Collector),
     Block(
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.CollectorExecutor),
        Name(events),
       $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
       Call(Type(Name(Queue), Type(Name(Event))),
       $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.CollectorExecutor),
        Name(collector), $type=6.quark.concurrent.Collector),
       Var(Name(collector), $type=6.quark.concurrent.Collector)))),

    Method(static=False, Type(Name(void)), Name(_start), Block(
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.CollectorExecutor),
        Name(events),
       $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
       Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.CollectorExecutor), Name(collector),
         $type=6.quark.concurrent.Collector), Name(_swap),
        $type=6.quark.concurrent.Collector._swap), Attr(Var(Name(self),
         $type=6.quark.concurrent.CollectorExecutor), Name(events),
        $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
       $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>)),
      If(Call(Attr(Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.CollectorExecutor), Name(events),
           $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
           Name(size), $type=6.quark.concurrent.Queue.size),
         $type=1.quark.int), Name(__gt__), $type=1.quark.numeric.__gt__),
        Number(0, $type=1.quark.int), $type=1.quark.bool), Block(
        ExprStmt(Call(Attr(Call(Attr(Attr(Var(Name(concurrent),
              $type=6.quark.concurrent), Name(Context),
             $type=6.quark.concurrent.Context), Name(runtime),
            $type=6.quark.concurrent.Context.runtime), $type=0.quark.Runtime),
           Name(schedule), $type=0.quark.Runtime.schedule), Var(Name(self),
          $type=6.quark.concurrent.CollectorExecutor), Number(0.0,
          $type=1.quark.float), $type=1.quark.void)))))),

    Method(static=False, Type(Name(void)), Name(onExecute),
     Param(Type(Name(Runtime)), Name(runtime), $type=0.quark.Runtime),
     Block(
      Local(
       Declaration(Type(Name(Event)), Name(next),
        Call(Attr(Attr(Var(Name(self),
           $type=6.quark.concurrent.CollectorExecutor), Name(events),
          $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>), Name(get),
         $type=6.quark.concurrent.Queue.get), $type=6.quark.concurrent.Event),
       $type=6.quark.concurrent.Event)),
      Local(
       Declaration(Type(Name(Context)), Name(old), Call(Attr(Var(Name(Context),
          $type=6.quark.concurrent.Context), Name(current),
         $type=6.quark.concurrent.Context.current),
        $type=6.quark.concurrent.Context), $type=6.quark.concurrent.Context)),
      While(Call(Attr(Var(Name(next), $type=6.quark.concurrent.Event),
         Name(__ne__), $type=1.quark.Object.__ne__), Null(null,
        $type=1.quark.Object), $type=1.quark.bool), Block(
        ExprStmt(Call(Attr(Var(Name(Context),
           $type=6.quark.concurrent.Context), Name(swap),
          $type=6.quark.concurrent.Context.swap),
          Call(Attr(Call(Attr(Var(Name(next), $type=6.quark.concurrent.Event),
              Name(getContext), $type=6.quark.concurrent.Event.getContext),
            $type=6.quark.concurrent.EventContext), Name(getContext),
           $type=6.quark.concurrent.EventContext.getContext),
          $type=6.quark.concurrent.Context), $type=1.quark.void)),
        ExprStmt(Call(Attr(Var(Name(next), $type=6.quark.concurrent.Event),
           Name(fireEvent), $type=6.quark.concurrent.Event.fireEvent),
         $type=1.quark.void)),
        Assign(Var(Name(next), $type=6.quark.concurrent.Event),
         Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.CollectorExecutor), Name(events),
           $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
           Name(get), $type=6.quark.concurrent.Queue.get),
         $type=6.quark.concurrent.Event)))),
      ExprStmt(Call(Attr(Var(Name(Context), $type=6.quark.concurrent.Context),
         Name(swap), $type=6.quark.concurrent.Context.swap), Var(Name(old),
        $type=6.quark.concurrent.Context), $type=1.quark.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.CollectorExecutor), Name(collector),
         $type=6.quark.concurrent.Collector), Name(_poll),
        $type=6.quark.concurrent.Collector._poll), $type=1.quark.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.concurrent.CollectorExecutor",
       $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("events", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self),
          $type=6.quark.concurrent.CollectorExecutor), Name(events),
         $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("collector",
        $type=1.quark.String), $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self),
          $type=6.quark.concurrent.CollectorExecutor), Name(collector),
         $type=6.quark.concurrent.Collector)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("events", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self),
          $type=6.quark.concurrent.CollectorExecutor), Name(events),
         $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("collector",
        $type=1.quark.String), $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self),
          $type=6.quark.concurrent.CollectorExecutor), Name(collector),
         $type=6.quark.concurrent.Collector), Cast(Var(Name(value),
          $type=1.quark.Object), $type=6.quark.concurrent.Collector)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_Queue_quark_concurrent_Event__ref),
     Attr(Attr(Var(Name(quark_md), $type=12.quark_md), Name(Root),
      $type=12.quark_md.Root),
      Name(quark_concurrent_Queue_quark_concurrent_Event__md),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_CollectorExecutor_ref),
     Attr(Attr(Var(Name(quark_md), $type=12.quark_md), Name(Root),
      $type=12.quark_md.Root), Name(quark_concurrent_CollectorExecutor_md),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class)),

   Class(Annotation(Name(doc),
     String("An active queue of events. Each event will fire sequentially, one by one. Multiple instances of Collector are not serialized with eachother and may run in parallel.",
     $type=1.quark.String)), Name(Collector),
    Field(static=False, Type(Name(Lock)), Name(lock),
    $type=6.quark.concurrent.Lock),
    Field(static=False, Type(Name(Queue), Type(Name(Event))), Name(pending),
    $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
    Field(static=False, Type(Name(CollectorExecutor)), Name(executor),
    $type=6.quark.concurrent.CollectorExecutor),
    Field(static=False, Type(Name(bool)), Name(idle), $type=1.quark.bool),

    Constructor(Name(Collector), Block(
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
        Name(lock), $type=6.quark.concurrent.Lock), Call(Type(Name(Lock)),
       $type=6.quark.concurrent.Lock)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
        Name(pending),
       $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
       Call(Type(Name(Queue), Type(Name(Event))),
       $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
        Name(executor), $type=6.quark.concurrent.CollectorExecutor),
       Call(Type(Name(CollectorExecutor)), Var(Name(self),
        $type=6.quark.concurrent.Collector),
       $type=6.quark.concurrent.CollectorExecutor)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
        Name(idle), $type=1.quark.bool), Bool(true, $type=1.quark.bool)))),

    Method(static=False, Type(Name(void)), Name(put),
     Param(Type(Name(Event)), Name(event), $type=6.quark.concurrent.Event),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Collector), Name(lock),
         $type=6.quark.concurrent.Lock), Name(acquire),
        $type=6.quark.concurrent.Mutex.acquire), $type=1.quark.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Collector), Name(pending),
         $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>), Name(put),
        $type=6.quark.concurrent.Queue.put), Var(Name(event),
        $type=6.quark.concurrent.Event), $type=1.quark.void)),
      If(Attr(Var(Name(self), $type=6.quark.concurrent.Collector), Name(idle),
       $type=1.quark.bool), Block(
        ExprStmt(Call(Attr(Attr(Var(Name(self),
            $type=6.quark.concurrent.Collector), Name(executor),
           $type=6.quark.concurrent.CollectorExecutor), Name(_start),
          $type=6.quark.concurrent.CollectorExecutor._start),
         $type=1.quark.void)))),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Collector), Name(lock),
         $type=6.quark.concurrent.Lock), Name(release),
        $type=6.quark.concurrent.Mutex.release), $type=1.quark.void)))),

    Method(static=False, Type(Name(Queue), Type(Name(Event))), Name(_swap),
     Param(Type(Name(Queue), Type(Name(Event))), Name(drained),
     $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
     Block(
      Local(
       Declaration(Type(Name(Queue), Type(Name(Event))), Name(pending),
        Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
         Name(pending),
        $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
       $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
        Name(idle), $type=1.quark.bool), Call(Attr(Call(Attr(Var(Name(pending),
           $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
           Name(size), $type=6.quark.concurrent.Queue.size),
         $type=1.quark.int), Name(__eq__), $type=1.quark.Object.__eq__),
        Number(0, $type=1.quark.int), $type=1.quark.bool)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
        Name(pending),
       $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
       Var(Name(drained),
       $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>)),
      Return(Var(Name(pending),
       $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>)))),

    Method(static=False, Type(Name(void)), Name(_poll), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Collector), Name(lock),
         $type=6.quark.concurrent.Lock), Name(acquire),
        $type=6.quark.concurrent.Mutex.acquire), $type=1.quark.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Collector), Name(executor),
         $type=6.quark.concurrent.CollectorExecutor), Name(_start),
        $type=6.quark.concurrent.CollectorExecutor._start),
       $type=1.quark.void)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Collector), Name(lock),
         $type=6.quark.concurrent.Lock), Name(release),
        $type=6.quark.concurrent.Mutex.release), $type=1.quark.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.concurrent.Collector", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("lock", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
          Name(lock), $type=6.quark.concurrent.Lock)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("pending", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
          Name(pending),
         $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("executor", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
          Name(executor), $type=6.quark.concurrent.CollectorExecutor)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("idle", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
          Name(idle), $type=1.quark.bool)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("lock", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
          Name(lock), $type=6.quark.concurrent.Lock), Cast(Var(Name(value),
          $type=1.quark.Object), $type=6.quark.concurrent.Lock)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("pending", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
          Name(pending),
         $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.Queue<6.quark.concurrent.Event>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("executor", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
          Name(executor), $type=6.quark.concurrent.CollectorExecutor),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.CollectorExecutor)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("idle", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Collector),
          Name(idle), $type=1.quark.bool), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.bool)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_Collector_ref), Attr(Attr(Var(Name(quark_md),
       $type=12.quark_md), Name(Root), $type=12.quark_md.Root),
      Name(quark_concurrent_Collector_md), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class)),

   Interface(Annotation(Name(doc), String("Timeout expiry handler",
     $type=1.quark.String)), Name(TimeoutListener),

    Method(static=False, Type(Name(void)), Name(onTimeout),
     Param(Type(Name(Timeout)), Name(timeout),
     $type=6.quark.concurrent.Timeout)),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_TimeoutListener_ref), Attr(Attr(Var(Name(quark_md),
       $type=12.quark_md), Name(Root), $type=12.quark_md.Root),
      Name(quark_concurrent_TimeoutListener_md), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class)),

   Class(Annotation(Name(doc), String("Timeout expiry event",
     $type=1.quark.String)), Name(TimeoutExpiry), Type(Name(Event)),
    Field(static=False, Type(Name(Timeout)), Name(timeout),
    $type=6.quark.concurrent.Timeout),
    Field(static=False, Type(Name(TimeoutListener)), Name(listener),
    $type=6.quark.concurrent.TimeoutListener),

    Constructor(Name(TimeoutExpiry),
     Param(Type(Name(Timeout)), Name(timeout),
     $type=6.quark.concurrent.Timeout),
     Param(Type(Name(TimeoutListener)), Name(listener),
     $type=6.quark.concurrent.TimeoutListener),
     Block(
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.TimeoutExpiry),
        Name(timeout), $type=6.quark.concurrent.Timeout), Var(Name(timeout),
       $type=6.quark.concurrent.Timeout)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.TimeoutExpiry),
        Name(listener), $type=6.quark.concurrent.TimeoutListener),
       Var(Name(listener), $type=6.quark.concurrent.TimeoutListener)))),

    Method(static=False, Type(Name(EventContext)), Name(getContext), Block(
      Return(Attr(Var(Name(self), $type=6.quark.concurrent.TimeoutExpiry),
        Name(timeout), $type=6.quark.concurrent.Timeout)))),

    Method(static=False, Type(Name(void)), Name(fireEvent), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.TimeoutExpiry), Name(listener),
         $type=6.quark.concurrent.TimeoutListener), Name(onTimeout),
        $type=6.quark.concurrent.TimeoutListener.onTimeout),
        Attr(Var(Name(self), $type=6.quark.concurrent.TimeoutExpiry),
         Name(timeout), $type=6.quark.concurrent.Timeout),
       $type=1.quark.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.concurrent.TimeoutExpiry", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("timeout", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.TimeoutExpiry),
          Name(timeout), $type=6.quark.concurrent.Timeout)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("listener", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.TimeoutExpiry),
          Name(listener), $type=6.quark.concurrent.TimeoutListener)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("timeout", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.TimeoutExpiry),
          Name(timeout), $type=6.quark.concurrent.Timeout),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.Timeout)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("listener", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.TimeoutExpiry),
          Name(listener), $type=6.quark.concurrent.TimeoutListener),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.TimeoutListener)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_TimeoutExpiry_ref), Attr(Attr(Var(Name(quark_md),
       $type=12.quark_md), Name(Root), $type=12.quark_md.Root),
      Name(quark_concurrent_TimeoutExpiry_md), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class)),

   Class(Annotation(Name(doc), String("Timeout", $type=1.quark.String)),
    Name(Timeout), Type(Name(EventContext)), Type(Name(Task)),
    Field(static=False, Type(Name(float)), Name(timeout), $type=1.quark.float),
    Field(static=False, Type(Name(Lock)), Name(lock),
    $type=6.quark.concurrent.Lock),
    Field(static=False, Type(Name(TimeoutListener)), Name(listener),
    $type=6.quark.concurrent.TimeoutListener),

    Constructor(Name(Timeout),
     Param(Type(Name(float)), Name(timeout), $type=1.quark.float),
     Block(
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
        Name(timeout), $type=1.quark.float), Var(Name(timeout),
       $type=1.quark.float)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
        Name(listener), $type=6.quark.concurrent.TimeoutListener), Null(null,
       $type=1.quark.Object)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
        Name(lock), $type=6.quark.concurrent.Lock), Call(Type(Name(Lock)),
       $type=6.quark.concurrent.Lock)))),

    Method(static=False, Type(Name(void)), Name(start),
     Param(Type(Name(TimeoutListener)), Name(listener),
     $type=6.quark.concurrent.TimeoutListener),
     Block(
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
        Name(listener), $type=6.quark.concurrent.TimeoutListener),
       Var(Name(listener), $type=6.quark.concurrent.TimeoutListener)),
      Local(
       Declaration(Type(Name(float)), Name(delay), Attr(Var(Name(self),
         $type=6.quark.concurrent.Timeout), Name(timeout),
        $type=1.quark.float), $type=1.quark.float)),
      ExprStmt(Call(Attr(Call(Attr(Attr(Var(Name(concurrent),
            $type=6.quark.concurrent), Name(Context),
           $type=6.quark.concurrent.Context), Name(runtime),
          $type=6.quark.concurrent.Context.runtime), $type=0.quark.Runtime),
         Name(schedule), $type=0.quark.Runtime.schedule), Var(Name(self),
        $type=6.quark.concurrent.Timeout), Var(Name(delay),
        $type=1.quark.float), $type=1.quark.void)))),

    Method(static=False, Type(Name(void)), Name(cancel), Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Timeout), Name(lock),
         $type=6.quark.concurrent.Lock), Name(acquire),
        $type=6.quark.concurrent.Mutex.acquire), $type=1.quark.void)),
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
        Name(listener), $type=6.quark.concurrent.TimeoutListener), Null(null,
       $type=1.quark.Object)),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Timeout), Name(lock),
         $type=6.quark.concurrent.Lock), Name(release),
        $type=6.quark.concurrent.Mutex.release), $type=1.quark.void)))),

    Method(static=False, Type(Name(void)), Name(onExecute),
     Param(Type(Name(Runtime)), Name(runtime), $type=0.quark.Runtime),
     Block(
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Timeout), Name(lock),
         $type=6.quark.concurrent.Lock), Name(acquire),
        $type=6.quark.concurrent.Mutex.acquire), $type=1.quark.void)),
      If(Call(Attr(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
          Name(listener), $type=6.quark.concurrent.TimeoutListener),
         Name(__ne__), $type=1.quark.Object.__ne__), Null(null,
        $type=1.quark.Object), $type=1.quark.bool), Block(
        ExprStmt(Call(Attr(Attr(Attr(Var(Name(self),
             $type=6.quark.concurrent.Timeout), Name(_context),
            $type=6.quark.concurrent.Context), Name(collector),
           $type=6.quark.concurrent.Collector), Name(put),
          $type=6.quark.concurrent.Collector.put),
          Call(Type(Name(TimeoutExpiry)), Var(Name(self),
           $type=6.quark.concurrent.Timeout), Attr(Var(Name(self),
            $type=6.quark.concurrent.Timeout), Name(listener),
           $type=6.quark.concurrent.TimeoutListener),
          $type=6.quark.concurrent.TimeoutExpiry), $type=1.quark.void)),
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
          Name(listener), $type=6.quark.concurrent.TimeoutListener), Null(null,
         $type=1.quark.Object)))),
      ExprStmt(Call(Attr(Attr(Var(Name(self),
          $type=6.quark.concurrent.Timeout), Name(lock),
         $type=6.quark.concurrent.Lock), Name(release),
        $type=6.quark.concurrent.Mutex.release), $type=1.quark.void)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.concurrent.Timeout", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_context", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
          Name(_context), $type=6.quark.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("timeout", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
          Name(timeout), $type=1.quark.float)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("lock", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
          Name(lock), $type=6.quark.concurrent.Lock)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("listener", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
          Name(listener), $type=6.quark.concurrent.TimeoutListener)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_context", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
          Name(_context), $type=6.quark.concurrent.Context),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("timeout", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
          Name(timeout), $type=1.quark.float), Cast(Var(Name(value),
          $type=1.quark.Object), $type=1.quark.float)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("lock", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
          Name(lock), $type=6.quark.concurrent.Lock), Cast(Var(Name(value),
          $type=1.quark.Object), $type=6.quark.concurrent.Lock)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("listener", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Timeout),
          Name(listener), $type=6.quark.concurrent.TimeoutListener),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.TimeoutListener)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_Timeout_ref), Attr(Attr(Var(Name(quark_md),
       $type=12.quark_md), Name(Root), $type=12.quark_md.Root),
      Name(quark_concurrent_Timeout_md), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class)),

   Class(Annotation(Name(doc), String("internal", $type=1.quark.String)),
    Name(TLSContextInitializer), Type(Name(TLSInitializer),
     Type(Name(Context))),

    Method(static=False, Type(Name(Context)), Name(getValue), Block(
      Return(Call(Type(Name(Context)), Call(Attr(Var(Name(Context),
          $type=6.quark.concurrent.Context), Name(global),
         $type=6.quark.concurrent.Context.global),
        $type=6.quark.concurrent.Context),
       $type=6.quark.concurrent.Context)))),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.concurrent.TLSContextInitializer",
       $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block()),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_TLSContextInitializer_ref),
     Attr(Attr(Var(Name(quark_md), $type=12.quark_md), Name(Root),
      $type=12.quark_md.Root), Name(quark_concurrent_TLSContextInitializer_md),
     $type=3.quark.reflect.Class), $type=3.quark.reflect.Class)),

   Class(Annotation(Name(doc), String("The logical stack for async stuff.",
     $type=1.quark.String)), Name(Context),
    Field(static=True, Type(Name(Context)), Name(_global), Null(null,
     $type=1.quark.Object), $type=6.quark.concurrent.Context),
    Field(static=True, Type(Name(TLS), Type(Name(Context))), Name(_current),
     Call(Type(Name(TLS), Type(Name(Context))),
      Call(Type(Name(TLSContextInitializer)),
      $type=6.quark.concurrent.TLSContextInitializer),
     $type=6.quark.concurrent.TLS<6.quark.concurrent.Context>),
    $type=6.quark.concurrent.TLS<6.quark.concurrent.Context>),

    Method(static=True, Type(Name(Context)), Name(current), Block(
      Return(Call(Attr(Var(Name(_current),
         $type=6.quark.concurrent.TLS<6.quark.concurrent.Context>),
         Name(getValue), $type=6.quark.concurrent.TLS.getValue),
       $type=6.quark.concurrent.Context)))),

    Method(static=True, Type(Name(Context)), Name(global), Block(
      If(Call(Attr(Var(Name(_global), $type=6.quark.concurrent.Context),
         Name(__eq__), $type=1.quark.Object.__eq__), Null(null,
        $type=1.quark.Object), $type=1.quark.bool), Block(
        Assign(Var(Name(_global), $type=6.quark.concurrent.Context),
         Call(Type(Name(Context)), Null(null, $type=1.quark.Object),
         $type=6.quark.concurrent.Context)))),
      Return(Var(Name(_global), $type=6.quark.concurrent.Context)))),

    Method(static=True, Type(Name(Runtime)), Name(runtime), Block(
      Return(Attr(Call(Var(Name(current),
         $type=6.quark.concurrent.Context.current),
        $type=6.quark.concurrent.Context), Name(_runtime),
       $type=0.quark.Runtime)))),

    Method(static=True, Type(Name(void)), Name(swap),
     Param(Type(Name(Context)), Name(c), $type=6.quark.concurrent.Context),
     Block(
      ExprStmt(Call(Attr(Var(Name(_current),
         $type=6.quark.concurrent.TLS<6.quark.concurrent.Context>),
         Name(setValue), $type=6.quark.concurrent.TLS.setValue), Var(Name(c),
        $type=6.quark.concurrent.Context), $type=1.quark.void)))),

    Constructor(Name(Context),
     Param(Type(Name(Context)), Name(parent),
     $type=6.quark.concurrent.Context),
     Block(
      Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
        Name(_parent), $type=6.quark.concurrent.Context), Var(Name(parent),
       $type=6.quark.concurrent.Context)),
      If(Call(Attr(Var(Name(parent), $type=6.quark.concurrent.Context),
         Name(__eq__), $type=1.quark.Object.__eq__), Null(null,
        $type=1.quark.Object), $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(_runtime), $type=0.quark.Runtime),
         Call(Attr(Attr(Attr(Var(Name(spi), $type=11.quark.spi),
             Name(RuntimeFactory), $type=11.quark.spi.RuntimeFactory),
            Name(factory), $type=11.quark.spi.RuntimeFactory),
           Name(makeRuntime), $type=11.quark.spi.RuntimeFactory.makeRuntime),
         $type=0.quark.Runtime)),
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(collector), $type=6.quark.concurrent.Collector),
         Call(Type(Name(Collector)), $type=6.quark.concurrent.Collector))),
       Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(_runtime), $type=0.quark.Runtime), Attr(Var(Name(parent),
          $type=6.quark.concurrent.Context), Name(_runtime),
         $type=0.quark.Runtime)),
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(collector), $type=6.quark.concurrent.Collector),
         Attr(Var(Name(parent), $type=6.quark.concurrent.Context),
          Name(collector), $type=6.quark.concurrent.Collector)))))),
    Field(static=False, Type(Name(Context)), Name(_parent),
    $type=6.quark.concurrent.Context),
    Field(static=False, Type(Name(Runtime)), Name(_runtime),
    $type=0.quark.Runtime),
    Field(static=False, Type(Name(Collector)), Name(collector),
    $type=6.quark.concurrent.Collector),

    Method(static=False, Type(Name(String)), Name(_getClass), Block(
      Return(String("quark.concurrent.Context", $type=1.quark.String)))),

    Method(static=False, Type(Name(Object)), Name(_getField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_global", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(_global), $type=6.quark.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_current", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(_current),
         $type=6.quark.concurrent.TLS<6.quark.concurrent.Context>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_parent", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(_parent), $type=6.quark.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_runtime", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(_runtime), $type=0.quark.Runtime)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("collector",
        $type=1.quark.String), $type=1.quark.bool), Block(
        Return(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(collector), $type=6.quark.concurrent.Collector)))),
      Return(Null(null, $type=1.quark.Object)))),

    Method(static=False, Type(Name(void)), Name(_setField),
     Param(Type(Name(String)), Name(name), $type=1.quark.String),
     Param(Type(Name(Object)), Name(value), $type=1.quark.Object),
     Block(
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_global", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(_global), $type=6.quark.concurrent.Context),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_current", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(_current),
         $type=6.quark.concurrent.TLS<6.quark.concurrent.Context>),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.TLS<6.quark.concurrent.Context>)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_parent", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(_parent), $type=6.quark.concurrent.Context),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.Context)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("_runtime", $type=1.quark.String),
       $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(_runtime), $type=0.quark.Runtime), Cast(Var(Name(value),
          $type=1.quark.Object), $type=0.quark.Runtime)))),
      If(Call(Attr(Var(Name(name), $type=1.quark.String), Name(__eq__),
        $type=1.quark.Object.__eq__), String("collector",
        $type=1.quark.String), $type=1.quark.bool), Block(
        Assign(Attr(Var(Name(self), $type=6.quark.concurrent.Context),
          Name(collector), $type=6.quark.concurrent.Collector),
         Cast(Var(Name(value), $type=1.quark.Object),
         $type=6.quark.concurrent.Collector)))))),
    Field(static=True, Type(Name(reflect), Name(Class)),
     Name(quark_concurrent_Context_ref), Attr(Attr(Var(Name(quark_md),
       $type=12.quark_md), Name(Root), $type=12.quark_md.Root),
      Name(quark_concurrent_Context_md), $type=3.quark.reflect.Class),
    $type=3.quark.reflect.Class)),

   Primitive(Annotation(Name(mapping), Native(NativeCase(java,
       Fixed('io.datawire.quark.runtime.TLSInitializer')), NativeCase(py,
       Fixed('_TLSInitializer')), NativeCase(js, Fixed('_qrt.TLSInitializer')),
      NativeCase(rb, Fixed('::DatawireQuarkCore::TLSInitializer')))),
    Name(TLSInitializer), TypeParam(Name(T)),

    Method(static=False, Type(Name(T)), Name(getValue))),

   Primitive(Annotation(Name(mapping), Native(NativeCase(java,
       Fixed('io.datawire.quark.runtime.TLS')), NativeCase(py, Fixed('_TLS')),
      NativeCase(js, Fixed('_qrt.TLS')), NativeCase(rb,
       Fixed('::DatawireQuarkCore::TLS')))), Name(TLS),
    TypeParam(Name(Context)),

    ConstructorMacro(Name(TLS),
     Param(Type(Name(TLSInitializer), Type(Name(Context))), Name(initializer),
     $type=6.quark.concurrent.TLSInitializer<6.quark.concurrent.TLS.Context>),
     Native(NativeCase(java,
       Fixed('new io.datawire.quark.runtime.TLS('), Var(Name(initializer),
       $type=6.quark.concurrent.TLSInitializer<6.quark.concurrent.TLS.Context>),
       Fixed(')')), NativeCase(py, Fixed('_TLS('), Var(Name(initializer),
       $type=6.quark.concurrent.TLSInitializer<6.quark.concurrent.TLS.Context>),
       Fixed(')')), NativeCase(rb, Fixed('::DatawireQuarkCore::TLS.new('),
       Var(Name(initializer),
       $type=6.quark.concurrent.TLSInitializer<6.quark.concurrent.TLS.Context>),
       Fixed(')')), NativeCase(js, Fixed('new _qrt.TLS('),
       Var(Name(initializer),
       $type=6.quark.concurrent.TLSInitializer<6.quark.concurrent.TLS.Context>),
       Fixed(')')))),

    Method(static=False, Type(Name(Context)), Name(getValue)),

    Method(static=False, Type(Name(void)), Name(setValue),
     Param(Type(Name(Context)), Name(c),
     $type=6.quark.concurrent.TLS.Context))),

   Primitive(Annotation(Name(mapping), Native(NativeCase(java,
       Fixed('io.datawire.quark.runtime.Mutex')), NativeCase(py,
       Fixed('_Mutex')), NativeCase(js, Fixed('_qrt.Mutex')), NativeCase(rb,
       Fixed('::DatawireQuarkCore::Mutex')))), Name(Mutex),

    Method(static=False, Type(Name(void)), Name(acquire)),

    Method(static=False, Type(Name(void)), Name(release))),

   Primitive(Annotation(Name(mapping), Native(NativeCase(java,
       Fixed('io.datawire.quark.runtime.Lock')), NativeCase(py,
       Fixed('_Lock')), NativeCase(js, Fixed('_qrt.Lock')), NativeCase(rb,
       Fixed('::DatawireQuarkCore::Lock')))), Name(Lock), Type(Name(Mutex))),

   Primitive(Annotation(Name(mapping), Native(NativeCase(java,
       Fixed('io.datawire.quark.runtime.Condition')), NativeCase(py,
       Fixed('_Condition')), NativeCase(js, Fixed('_qrt.Condition')),
      NativeCase(rb, Fixed('::DatawireQuarkCore::Condition')))),
    Name(Condition), Type(Name(Mutex)),

    Method(static=False, Type(Name(void)), Name(waitWakeup),
     Param(Type(Name(long)), Name(timeout), $type=1.quark.long),
     Block()),

    Method(static=False, Type(Name(void)), Name(wakeup), Block()))))
)