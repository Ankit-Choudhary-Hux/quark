namespace foo {
    void f(int a, int b, int c, int d) {
        (((((x * a) * b) * c) + (b + (c * d))) <= t);
    }
    void asdf(float x, float y) {
        (((((x * a) * b) * (c + (b + c))) * d) <= t);
    }
    void fdsa(float x) {}
    int pie() {
        blueberry;
        huckleberry;
    }
    class Foo extends Bar {
        void doFoo() {
            x = ((this).x)(a, b, c);
            (q).asdf = ((this).y)(x);
            ((this).z)();
            (self).doc;
            if (x) {
                (y)();
            }
            ((z).__neg__)();
            if (((x && y) || z)) {
                z;
            }
            if ((x || (y && z))) {
                z;
            }
            if ((x || (((y).__not__)() && z))) {
                z;
            }
        }
    }
}
namespace organic {
    class Blah {}
}