Installation
============

This documentation walks you through the system, application, and tooling requirements for using Quark as well as the actual installation process. 

Prerequisites
-------------

Quark has basic requirements that all users must meet as well as requirements specific to particular output languages and additional requirements needed to run some of the examples provided in the Examples Repository.

Basic Requirements
~~~~~~~~~~~~~~~~~~

Quark requires a modern Linux distribution or Mac OS X. It has been successfully tested on the following:

* Mac OS 10.10 (Yosemite)
* Mac OS 10.11 (El Capitain)
* Ubuntu 14.04 (Trusty)
* Fedora 22

Quark also requires the following:

* Python 2.7+
* pip
* a local git installation (to access the code base)

Java Requirements
~~~~~~~~~~~~~~~~~

You must have Java installed to use any Java code generated by Quark. Quark has been successfully tested with Java 8.

To compile and run the generated code directly from Quark you must also have Maven installed. Quark has been successfully tested with Maven 3.1 and Maven 3.3.x. Maven is not required if you wish to use the generated .java files manually either directly or within an IDE.

Documentation Generation
++++++++++++++++++++++++

There are no additional requirements to use the documentation generation feature of Quark with Java; the Javadoc compiler included with Java will be used.

Package Generation
++++++++++++++++++

There are no additional requirements to use the package generation feature of Quark with Java; the library or application is automatically packaged into a Jar file by Java.

Python Requirements
~~~~~~~~~~~~~~~~~~~

There are no additional requirements to use Python code generated by Quark.

Documentation Generation
++++++++++++++++++++++++

To use the documentation generation feature of Quark with Python, you must also install Sphinx 1.3.1 or greater.

Note: documentation source files will be generated without Sphinx as part of the code generation process. Sphinx is only required to generate HTML output from those source files.

Package Generation
++++++++++++++++++

To use the package generation feature of Quark with Python and generate a distributable version of your service or library, you must also install wheel.

Note: Python packages generated by Quark are currently missing the Quark runtime and will not result in a working application or library. See issue ^^

Javascript Requirements
~~~~~~~~~~~~~~~~~~~~~~~

You must have Node.js installed to use any Javascript code generated by Quark. Quark has been successfully tested with Node 4.2.1 and expected to work with any 4.x version of Node. Quark has also been tested with Node 0.12.7; basic features work without any issue but more advanced features of Quark such as blocking url_get() requests are not supported.

Documentation Generation
++++++++++++++++++++++++

To use the documentation generation feature of Quark with Javascript, you must also install marked 0.3.1 or greater.

Note: documentation source files will be generated without marked as part of the code generation process. marked is only required to generate HTML output from the source README.md file.

Package Generation
++++++++++++++++++

To use the package generation feature of Quark with Javascript and generate a distributable version of your service or library, you must also install npm.

Note: Javascript packages generated by Quark are currently missing the Quark runtime and will not result in a working application or library. See issue ^^

Requirements for Examples
~~~~~~~~~~~~~~~~~~~~~~~~~

The Datawire Directory example uses web sockets and requires additional tools to run in Java, Python, or Javascript.

========== ===================================
Language   Requirements                       
========== ===================================
Java       netty                              
Javascript ws                                 
Python     twisted, autobahn, service-identity
========== ===================================

Installation
------------

To install Quark, pull the quark repository from GitHub and run the following command from the top-level quark directory:

``python setup.py develop``
