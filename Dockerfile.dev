FROM ubuntu:16.04

# This requires a build argument 'userid', the UID owner of the files
# in the current checkout.  Typically this Dockerfile should be used
# via with-docker.py

# Install requirements as root:
RUN apt-get -y update
RUN apt-get -y install language-pack-en
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
RUN apt-get -y install curl python2.7 tar gcc make git python2.7-dev libffi-dev libssl-dev
RUN apt-get -y install nodejs openjdk-8-jdk-headless ruby2.3 ruby2.3-dev
RUN apt-get -y install npm
RUN gem2.3 install bundler
RUN apt-get install -y python-virtualenv
RUN apt-get install -y maven

# Copy over the files we need:
COPY requirements.txt /tmp
COPY install-requirements.txt /tmp
COPY Gemfile /tmp
COPY scripts/_in-docker.sh /tmp
COPY scripts/prepare-npm.sh /tmp
RUN chmod +x /tmp/_in-docker.sh

# We're using Ubuntu 16.04 where e.g. Ruby 2.3's gem is called gem2.3, so make
# appropriate aliases:
RUN echo "#!/bin/bash\ngem2.3 \"\$@\"" > /usr/bin/gem
RUN chmod +x /usr/bin/gem
RUN echo "#!/bin/bash\nruby2.3 \"\$@\"" > /usr/bin/ruby
RUN chmod +x /usr/bin/ruby
RUN echo "#!/bin/bash\nnodejs \"\$@\"" > /usr/bin/node
RUN chmod +x /usr/bin/node

# Run as user that owns the files:
ARG userid
RUN adduser --home /tmp/home --uid $userid --disabled-password --gecos "" docker
USER $userid
WORKDIR /tmp/home

# Install user-specific packages:
ENV GEM_HOME=/tmp/run/gems
RUN bundle install --gemfile /tmp/Gemfile
RUN /tmp/prepare-npm.sh
RUN virtualenv --python=python2.7 /tmp/run
RUN /tmp/run/bin/pip install -r /tmp/install-requirements.txt
RUN /tmp/run/bin/pip install -r /tmp/requirements.txt

CMD /bin/bash
# This will make sure arguments run inside the virtualenv:
ENTRYPOINT ["/tmp/_in-docker.sh"]
